BEGIN
    DECLARE @schoolYearContext AS INT = 2019

    -- disable all constraints
    EXEC sp_MSforeachtable "ALTER TABLE ? NOCHECK CONSTRAINT all"

    INSERT INTO edfi.AbsenceEventCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AbsenceEventCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AbsenceEventCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AbsenceEventCategoryDescriptorId)
        )
        , AbsenceEventCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.AbsenceEventCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AbsenceEventCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AbsenceEventCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.AcademicHonorCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AcademicHonorCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicHonorCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicHonorCategoryDescriptorId)
        )
        , AcademicHonorCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.AcademicHonorCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AcademicHonorCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicHonorCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.AcademicSubjectDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AcademicSubjectDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
        , AcademicSubjectDescriptorId
    FROM EdFi_Ods_2021.edfi.AcademicSubjectDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AcademicSubjectDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )

    
    INSERT INTO edfi.AcademicWeek (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        -- Primary key columns
        , SchoolId
                , WeekIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
                    + '|' + WeekIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , SchoolId
        , WeekIdentifier
    FROM EdFi_Ods_2021.edfi.AcademicWeek source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AcademicWeek target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolId)
            + '|' + source.WeekIdentifier
            )
    )

        MERGE edfi.AcademicWeek_Attributes AS target
        USING EdFi_Ods_2021.edfi.AcademicWeek AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.SchoolId)
        + '|' + source.WeekIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.TotalInstructionalDays = source.TotalInstructionalDays
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , TotalInstructionalDays
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolId)
                + '|' + source.WeekIdentifier
                )
                , @schoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , TotalInstructionalDays
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.AccommodationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AccommodationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AccommodationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AccommodationDescriptorId)
        )
        , AccommodationDescriptorId
    FROM EdFi_Ods_2021.edfi.AccommodationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AccommodationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AccommodationDescriptorId)
            )
    )

    
    INSERT INTO edfi.Account (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , AccountIdentifier
                , EducationOrganizationId
                , FiscalYear
        )
    SELECT 
        HASHBYTES('sha1', 
            AccountIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, FiscalYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , AccountIdentifier
        , EducationOrganizationId
        , FiscalYear
    FROM EdFi_Ods_2021.edfi.Account source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Account target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AccountIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
    )

        MERGE edfi.Account_Attributes AS target
        USING EdFi_Ods_2021.edfi.Account AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AccountIdentifier
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AccountName = source.AccountName
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AccountName
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AccountIdentifier
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.FiscalYear)
                )
                , @schoolYearContext
                -- Attributes
                , AccountName
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.AccountAccountCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AccountCodeHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AccountClassificationDescriptorId)
                    + '|' + AccountCodeNumber
                    + '|' + AccountIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, FiscalYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AccountClassificationDescriptorId)
            + '|' + AccountCodeNumber
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, FiscalYear)
        )
    FROM EdFi_Ods_2021.edfi.AccountAccountCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AccountAccountCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AccountClassificationDescriptorId)
            + '|' + source.AccountCodeNumber
            + '|' + source.AccountIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
            AND target.AccountCodeHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AccountClassificationDescriptorId)
                + '|' + source.AccountCodeNumber
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
    )

    INSERT INTO edfi.AccountabilityRating (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , SchoolYearTypeHashKey
        -- Primary key columns
        , EducationOrganizationId
                , RatingTitle
                , SchoolYear
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + RatingTitle
                    + '|' + CONVERT(nvarchar, SchoolYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
        , EducationOrganizationId
        , RatingTitle
        , SchoolYear
    FROM EdFi_Ods_2021.edfi.AccountabilityRating source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AccountabilityRating target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.RatingTitle
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
    )

        MERGE edfi.AccountabilityRating_Attributes AS target
        USING EdFi_Ods_2021.edfi.AccountabilityRating AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.RatingTitle
        + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.Rating = source.Rating
            , target.RatingDate = source.RatingDate
            , target.RatingOrganization = source.RatingOrganization
            , target.RatingProgram = source.RatingProgram
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Rating
                , RatingDate
                , RatingOrganization
                , RatingProgram
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.RatingTitle
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
                , @schoolYearContext
                -- Attributes
                , Rating
                , RatingDate
                , RatingOrganization
                , RatingProgram
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.AccountClassificationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AccountClassificationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AccountClassificationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AccountClassificationDescriptorId)
        )
        , AccountClassificationDescriptorId
    FROM EdFi_Ods_2021.edfi.AccountClassificationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AccountClassificationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AccountClassificationDescriptorId)
            )
    )

    
    INSERT INTO edfi.AccountCode (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AccountClassificationDescriptorHashKey
        , EducationOrganizationHashKey
        -- Primary key columns
        , AccountClassificationDescriptorId
                , AccountCodeNumber
                , EducationOrganizationId
                , FiscalYear
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AccountClassificationDescriptorId)
                    + '|' + AccountCodeNumber
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, FiscalYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AccountClassificationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , AccountClassificationDescriptorId
        , AccountCodeNumber
        , EducationOrganizationId
        , FiscalYear
    FROM EdFi_Ods_2021.edfi.AccountCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AccountCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AccountClassificationDescriptorId)
            + '|' + source.AccountCodeNumber
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
    )

        MERGE edfi.AccountCode_Attributes AS target
        USING EdFi_Ods_2021.edfi.AccountCode AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AccountClassificationDescriptorId)
        + '|' + source.AccountCodeNumber
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AccountCodeDescription = source.AccountCodeDescription
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AccountCodeDescription
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AccountClassificationDescriptorId)
                + '|' + source.AccountCodeNumber
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.FiscalYear)
                )
                , @schoolYearContext
                -- Attributes
                , AccountCodeDescription
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.AchievementCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AchievementCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AchievementCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AchievementCategoryDescriptorId)
        )
        , AchievementCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.AchievementCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AchievementCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.Actual (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AccountHashKey
        -- Primary key columns
        , AccountIdentifier
                , AsOfDate
                , EducationOrganizationId
                , FiscalYear
        )
    SELECT 
        HASHBYTES('sha1', 
            AccountIdentifier
                    + '|' + CONVERT(nvarchar, AsOfDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, FiscalYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            AccountIdentifier
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, FiscalYear)
        )
        , AccountIdentifier
        , AsOfDate
        , EducationOrganizationId
        , FiscalYear
    FROM EdFi_Ods_2021.edfi.Actual source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Actual target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AccountIdentifier
            + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
    )

        MERGE edfi.Actual_Attributes AS target
        USING EdFi_Ods_2021.edfi.Actual AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AccountIdentifier
        + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AmountToDate = source.AmountToDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AmountToDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AccountIdentifier
                + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.FiscalYear)
                )
                , @schoolYearContext
                -- Attributes
                , AmountToDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.AdditionalCreditTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AdditionalCreditTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AdditionalCreditTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AdditionalCreditTypeDescriptorId)
        )
        , AdditionalCreditTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.AdditionalCreditTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AdditionalCreditTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AdditionalCreditTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.AddressTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AddressTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
        , AddressTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.AddressTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AddressTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.AdministrationEnvironmentDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AdministrationEnvironmentDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AdministrationEnvironmentDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AdministrationEnvironmentDescriptorId)
        )
        , AdministrationEnvironmentDescriptorId
    FROM EdFi_Ods_2021.edfi.AdministrationEnvironmentDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AdministrationEnvironmentDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AdministrationEnvironmentDescriptorId)
            )
    )

    
    INSERT INTO edfi.AdministrativeFundingControlDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AdministrativeFundingControlDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AdministrativeFundingControlDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AdministrativeFundingControlDescriptorId)
        )
        , AdministrativeFundingControlDescriptorId
    FROM EdFi_Ods_2021.edfi.AdministrativeFundingControlDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AdministrativeFundingControlDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AdministrativeFundingControlDescriptorId)
            )
    )

    
    INSERT INTO edfi.Assessment (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , AssessmentIdentifier
                , Namespace
        )
    SELECT 
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + Namespace
        )
        -- Identifying references
        , AssessmentIdentifier
        , Namespace
    FROM EdFi_Ods_2021.edfi.Assessment source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Assessment target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.Namespace
            )
    )

        MERGE edfi.Assessment_Attributes AS target
        USING EdFi_Ods_2021.edfi.Assessment AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AdaptiveAssessment = source.AdaptiveAssessment
            , target.AssessmentFamily = source.AssessmentFamily
            , target.AssessmentForm = source.AssessmentForm
            , target.AssessmentTitle = source.AssessmentTitle
            , target.AssessmentVersion = source.AssessmentVersion
            , target.MaxRawScore = source.MaxRawScore
            , target.Nomenclature = source.Nomenclature
            , target.RevisionDate = source.RevisionDate
                -- References
            , target.AssessmentCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentCategoryDescriptorId)
                )
            , target.EducationOrganizationHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AdaptiveAssessment
                , AssessmentFamily
                , AssessmentForm
                , AssessmentTitle
                , AssessmentVersion
                , MaxRawScore
                , Nomenclature
                , RevisionDate
                -- References
                , AssessmentCategoryDescriptorHashKey
                , EducationOrganizationHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Attributes
                , AdaptiveAssessment
                , AssessmentFamily
                , AssessmentForm
                , AssessmentTitle
                , AssessmentVersion
                , MaxRawScore
                , Nomenclature
                , RevisionDate
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentCategoryDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.AssessmentAcademicSubject (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicSubjectDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
                    + '|' + AssessmentIdentifier
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.AssessmentAcademicSubject source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentAcademicSubject target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            + '|' + source.AssessmentIdentifier
            + '|' + source.Namespace
            )
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )

    INSERT INTO edfi.AssessmentAssessedGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.AssessmentAssessedGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentAssessedGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.Namespace
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.AssessmentContentStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.AssessmentContentStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentContentStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.Namespace
            )
    )


        MERGE edfi.AssessmentContentStandard_Attributes AS target
        USING EdFi_Ods_2021.edfi.AssessmentContentStandard AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.PublicationDate = source.PublicationDate
            , target.PublicationYear = source.PublicationYear
            , target.Title = source.Title
            , target.URI = source.URI
            , target.Version = source.Version
                -- References
            , target.MandatingEducationOrganizationHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MandatingEducationOrganizationId)
                )
            , target.PublicationStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PublicationStatusDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Attributes
                , BeginDate
                , EndDate
                , PublicationDate
                , PublicationYear
                , Title
                , URI
                , Version
                -- References
                , MandatingEducationOrganizationHashKey
                , PublicationStatusDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                -- Attributes
                , BeginDate
                , EndDate
                , PublicationDate
                , PublicationYear
                , Title
                , URI
                , Version
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MandatingEducationOrganizationId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PublicationStatusDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.AssessmentContentStandardAuthor (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , Author
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + Namespace
        )
            , Author
    FROM EdFi_Ods_2021.edfi.AssessmentContentStandardAuthor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentContentStandardAuthor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.Namespace
            )
            AND target.Author = source.Author
    )

    INSERT INTO edfi.AssessmentIdentificationCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentIdentificationSystemDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentIdentificationSystemDescriptorId)
                    + '|' + AssessmentIdentifier
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentIdentificationSystemDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.AssessmentIdentificationCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentIdentificationCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentIdentificationSystemDescriptorId)
            + '|' + source.AssessmentIdentifier
            + '|' + source.Namespace
            )
            AND target.AssessmentIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentIdentificationSystemDescriptorId)
            )
    )


        MERGE edfi.AssessmentIdentificationCode_Attributes AS target
        USING EdFi_Ods_2021.edfi.AssessmentIdentificationCode AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AssessmentIdentificationSystemDescriptorId)
        + '|' + source.AssessmentIdentifier
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentIdentificationSystemDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AssigningOrganizationIdentificationCode = source.AssigningOrganizationIdentificationCode
            , target.IdentificationCode = source.IdentificationCode
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentIdentificationSystemDescriptorHashKey
                -- Attributes
                , AssigningOrganizationIdentificationCode
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentIdentificationSystemDescriptorId)
                + '|' + source.AssessmentIdentifier
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentIdentificationSystemDescriptorId)
                )
                -- Attributes
                , AssigningOrganizationIdentificationCode
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.AssessmentLanguage (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, LanguageDescriptorId)
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.AssessmentLanguage source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentLanguage target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.LanguageDescriptorId)
            + '|' + source.Namespace
            )
            AND target.LanguageDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageDescriptorId)
            )
    )

    INSERT INTO edfi.AssessmentPerformanceLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
        , PerformanceLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, PerformanceLevelDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PerformanceLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.AssessmentPerformanceLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentPerformanceLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
            AND target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
    )


        MERGE edfi.AssessmentPerformanceLevel_Attributes AS target
        USING EdFi_Ods_2021.edfi.AssessmentPerformanceLevel AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + source.Namespace
        + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
            AND target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.MaximumScore = source.MaximumScore
            , target.MinimumScore = source.MinimumScore
                -- References
            , target.ResultDatatypeTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                , PerformanceLevelDescriptorHashKey
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , ResultDatatypeTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + source.Namespace
                + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                )
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.AssessmentPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.AssessmentPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.Namespace
            )
    )


        MERGE edfi.AssessmentPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.AssessmentPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
                -- References
            , target.AssessmentPeriodDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentPeriodDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Attributes
                , BeginDate
                , EndDate
                -- References
                , AssessmentPeriodDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                -- Attributes
                , BeginDate
                , EndDate
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentPeriodDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.AssessmentPlatformType (
        HashKey
        -- Identifying references (for aggregate child entity)
        , PlatformTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, PlatformTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PlatformTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.AssessmentPlatformType source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentPlatformType target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.PlatformTypeDescriptorId)
            )
            AND target.PlatformTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PlatformTypeDescriptorId)
            )
    )

    INSERT INTO edfi.AssessmentProgram (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ProgramHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + Namespace
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.AssessmentProgram source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentProgram target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.Namespace
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
            AND target.ProgramHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
    )

    INSERT INTO edfi.AssessmentScore (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.AssessmentScore source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentScore target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + source.Namespace
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
    )


        MERGE edfi.AssessmentScore_Attributes AS target
        USING EdFi_Ods_2021.edfi.AssessmentScore AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.MaximumScore = source.MaximumScore
            , target.MinimumScore = source.MinimumScore
                -- References
            , target.ResultDatatypeTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , ResultDatatypeTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.AssessmentSection (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SectionHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + LocalCourseCode
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
    FROM EdFi_Ods_2021.edfi.AssessmentSection source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentSection target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.LocalCourseCode
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
            AND target.SectionHashKey = HASHBYTES('sha1',
                source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
            )
    )

    INSERT INTO edfi.AssessmentCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AssessmentCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentCategoryDescriptorId)
        )
        , AssessmentCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.AssessmentCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.AssessmentIdentificationSystemDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AssessmentIdentificationSystemDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentIdentificationSystemDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentIdentificationSystemDescriptorId)
        )
        , AssessmentIdentificationSystemDescriptorId
    FROM EdFi_Ods_2021.edfi.AssessmentIdentificationSystemDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentIdentificationSystemDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentIdentificationSystemDescriptorId)
            )
    )

    
    INSERT INTO edfi.AssessmentItem (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AssessmentHashKey
        -- Primary key columns
        , AssessmentIdentifier
                , IdentificationCode
                , Namespace
        )
    SELECT 
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + IdentificationCode
                    + '|' + Namespace
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            AssessmentIdentifier
            + '|' + Namespace
        )
        , AssessmentIdentifier
        , IdentificationCode
        , Namespace
    FROM EdFi_Ods_2021.edfi.AssessmentItem source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentItem target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            )
    )

        MERGE edfi.AssessmentItem_Attributes AS target
        USING EdFi_Ods_2021.edfi.AssessmentItem AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + source.IdentificationCode
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AssessmentItemURI = source.AssessmentItemURI
            , target.CorrectResponse = source.CorrectResponse
            , target.ExpectedTimeAssessed = source.ExpectedTimeAssessed
            , target.ItemText = source.ItemText
            , target.MaxRawScore = source.MaxRawScore
            , target.Nomenclature = source.Nomenclature
                -- References
            , target.AssessmentItemCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentItemCategoryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AssessmentItemURI
                , CorrectResponse
                , ExpectedTimeAssessed
                , ItemText
                , MaxRawScore
                , Nomenclature
                -- References
                , AssessmentItemCategoryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Attributes
                , AssessmentItemURI
                , CorrectResponse
                , ExpectedTimeAssessed
                , ItemText
                , MaxRawScore
                , Nomenclature
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentItemCategoryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.AssessmentItemLearningStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningStandardHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + IdentificationCode
                    + '|' + LearningStandardId
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            LearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.AssessmentItemLearningStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentItemLearningStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.LearningStandardId
            + '|' + source.Namespace
            )
            AND target.LearningStandardHashKey = HASHBYTES('sha1',
                source.LearningStandardId
            )
    )

    INSERT INTO edfi.AssessmentItemPossibleResponse (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , ResponseValue
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + IdentificationCode
                    + '|' + Namespace
        )
            , ResponseValue
    FROM EdFi_Ods_2021.edfi.AssessmentItemPossibleResponse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentItemPossibleResponse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            )
            AND target.ResponseValue = source.ResponseValue
    )


        MERGE edfi.AssessmentItemPossibleResponse_Attributes AS target
        USING EdFi_Ods_2021.edfi.AssessmentItemPossibleResponse AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + source.IdentificationCode
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.ResponseValue = source.ResponseValue
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.CorrectResponse = source.CorrectResponse
            , target.ResponseDescription = source.ResponseDescription
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , ResponseValue
                -- Attributes
                , CorrectResponse
                , ResponseDescription
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , ResponseValue
                -- Attributes
                , CorrectResponse
                , ResponseDescription
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.AssessmentItemCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AssessmentItemCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentItemCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentItemCategoryDescriptorId)
        )
        , AssessmentItemCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.AssessmentItemCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentItemCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentItemCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.AssessmentItemResultDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AssessmentItemResultDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentItemResultDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentItemResultDescriptorId)
        )
        , AssessmentItemResultDescriptorId
    FROM EdFi_Ods_2021.edfi.AssessmentItemResultDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentItemResultDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentItemResultDescriptorId)
            )
    )

    
    INSERT INTO edfi.AssessmentPeriodDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AssessmentPeriodDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentPeriodDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentPeriodDescriptorId)
        )
        , AssessmentPeriodDescriptorId
    FROM EdFi_Ods_2021.edfi.AssessmentPeriodDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentPeriodDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentPeriodDescriptorId)
            )
    )

    
    INSERT INTO edfi.AssessmentReportingMethodDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AssessmentReportingMethodDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
        , AssessmentReportingMethodDescriptorId
    FROM EdFi_Ods_2021.edfi.AssessmentReportingMethodDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AssessmentReportingMethodDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
    )

    
    INSERT INTO edfi.AttemptStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AttemptStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AttemptStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AttemptStatusDescriptorId)
        )
        , AttemptStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.AttemptStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AttemptStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AttemptStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.AttendanceEventCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , AttendanceEventCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
        )
        , AttendanceEventCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.AttendanceEventCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.AttendanceEventCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.BehaviorDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , BehaviorDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BehaviorDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BehaviorDescriptorId)
        )
        , BehaviorDescriptorId
    FROM EdFi_Ods_2021.edfi.BehaviorDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.BehaviorDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BehaviorDescriptorId)
            )
    )

    
    INSERT INTO edfi.BellSchedule (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        -- Primary key columns
        , BellScheduleName
                , SchoolId
        )
    SELECT 
        HASHBYTES('sha1', 
            BellScheduleName
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , BellScheduleName
        , SchoolId
    FROM EdFi_Ods_2021.edfi.BellSchedule source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.BellSchedule target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.BellScheduleName
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
    )

        MERGE edfi.BellSchedule_Attributes AS target
        USING EdFi_Ods_2021.edfi.BellSchedule AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.BellScheduleName
        + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AlternateDayName = source.AlternateDayName
            , target.EndTime = source.EndTime
            , target.StartTime = source.StartTime
            , target.TotalInstructionalTime = source.TotalInstructionalTime
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AlternateDayName
                , EndTime
                , StartTime
                , TotalInstructionalTime
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.BellScheduleName
                + '|' + CONVERT(nvarchar, source.SchoolId)
                )
                , @schoolYearContext
                -- Attributes
                , AlternateDayName
                , EndTime
                , StartTime
                , TotalInstructionalTime
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.BellScheduleClassPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ClassPeriodHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            BellScheduleName
                    + '|' + ClassPeriodName
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            ClassPeriodName
            + '|' + CONVERT(nvarchar, SchoolId)
        )
    FROM EdFi_Ods_2021.edfi.BellScheduleClassPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.BellScheduleClassPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.BellScheduleName
            + '|' + source.ClassPeriodName
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.ClassPeriodHashKey = HASHBYTES('sha1',
                source.ClassPeriodName
                + '|' + CONVERT(nvarchar, source.SchoolId)
            )
    )

    INSERT INTO edfi.BellScheduleDate (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , Date
    )
    SELECT
        HASHBYTES('sha1', 
            BellScheduleName
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
            , Date
    FROM EdFi_Ods_2021.edfi.BellScheduleDate source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.BellScheduleDate target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.BellScheduleName
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.Date = source.Date
    )

    INSERT INTO edfi.BellScheduleGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            BellScheduleName
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.BellScheduleGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.BellScheduleGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.BellScheduleName
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.Budget (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AccountHashKey
        -- Primary key columns
        , AccountIdentifier
                , AsOfDate
                , EducationOrganizationId
                , FiscalYear
        )
    SELECT 
        HASHBYTES('sha1', 
            AccountIdentifier
                    + '|' + CONVERT(nvarchar, AsOfDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, FiscalYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            AccountIdentifier
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, FiscalYear)
        )
        , AccountIdentifier
        , AsOfDate
        , EducationOrganizationId
        , FiscalYear
    FROM EdFi_Ods_2021.edfi.Budget source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Budget target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AccountIdentifier
            + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
    )

        MERGE edfi.Budget_Attributes AS target
        USING EdFi_Ods_2021.edfi.Budget AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AccountIdentifier
        + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.FiscalYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.Amount = source.Amount
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Amount
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AccountIdentifier
                + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.FiscalYear)
                )
                , @schoolYearContext
                -- Attributes
                , Amount
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.Calendar (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        , SchoolYearTypeHashKey
        -- Primary key columns
        , CalendarCode
                , SchoolId
                , SchoolYear
        )
    SELECT 
        HASHBYTES('sha1', 
            CalendarCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
        , CalendarCode
        , SchoolId
        , SchoolYear
    FROM EdFi_Ods_2021.edfi.Calendar source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Calendar target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CalendarCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
    )

        MERGE edfi.Calendar_Attributes AS target
        USING EdFi_Ods_2021.edfi.Calendar AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.CalendarCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- References
            , target.CalendarTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CalendarTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , CalendarTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.CalendarCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CalendarTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.CalendarGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CalendarCode
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CalendarGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CalendarGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CalendarCode
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.CalendarDate (
        HashKey
        -- Identifying references (for aggregate root entity)
        , CalendarHashKey
        -- Primary key columns
        , CalendarCode
                , Date
                , SchoolId
                , SchoolYear
        )
    SELECT 
        HASHBYTES('sha1', 
            CalendarCode
                    + '|' + CONVERT(nvarchar, Date, 23)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CalendarCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
        )
        , CalendarCode
        , Date
        , SchoolId
        , SchoolYear
    FROM EdFi_Ods_2021.edfi.CalendarDate source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CalendarDate target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CalendarCode
            + '|' + CONVERT(nvarchar, source.Date, 23)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
    )

    
    INSERT INTO edfi.CalendarDateCalendarEvent (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CalendarEventDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CalendarCode
                    + '|' + CONVERT(nvarchar, CalendarEventDescriptorId)
                    + '|' + CONVERT(nvarchar, Date, 23)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CalendarEventDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CalendarDateCalendarEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CalendarDateCalendarEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CalendarCode
            + '|' + CONVERT(nvarchar, source.CalendarEventDescriptorId)
            + '|' + CONVERT(nvarchar, source.Date, 23)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
            AND target.CalendarEventDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CalendarEventDescriptorId)
            )
    )

    INSERT INTO edfi.CalendarEventDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CalendarEventDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CalendarEventDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CalendarEventDescriptorId)
        )
        , CalendarEventDescriptorId
    FROM EdFi_Ods_2021.edfi.CalendarEventDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CalendarEventDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CalendarEventDescriptorId)
            )
    )

    
    INSERT INTO edfi.CalendarTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CalendarTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CalendarTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CalendarTypeDescriptorId)
        )
        , CalendarTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.CalendarTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CalendarTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CalendarTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.CareerPathwayDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CareerPathwayDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CareerPathwayDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CareerPathwayDescriptorId)
        )
        , CareerPathwayDescriptorId
    FROM EdFi_Ods_2021.edfi.CareerPathwayDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CareerPathwayDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CareerPathwayDescriptorId)
            )
    )

    
    INSERT INTO edfi.CharterApprovalAgencyTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CharterApprovalAgencyTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CharterApprovalAgencyTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CharterApprovalAgencyTypeDescriptorId)
        )
        , CharterApprovalAgencyTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.CharterApprovalAgencyTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CharterApprovalAgencyTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CharterApprovalAgencyTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.CharterStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CharterStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CharterStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CharterStatusDescriptorId)
        )
        , CharterStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.CharterStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CharterStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CharterStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.CitizenshipStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CitizenshipStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CitizenshipStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CitizenshipStatusDescriptorId)
        )
        , CitizenshipStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.CitizenshipStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CitizenshipStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CitizenshipStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.ClassPeriod (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        -- Primary key columns
        , ClassPeriodName
                , SchoolId
        )
    SELECT 
        HASHBYTES('sha1', 
            ClassPeriodName
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , ClassPeriodName
        , SchoolId
    FROM EdFi_Ods_2021.edfi.ClassPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ClassPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ClassPeriodName
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
    )

        MERGE edfi.ClassPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.ClassPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.ClassPeriodName
        + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.OfficialAttendancePeriod = source.OfficialAttendancePeriod
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , OfficialAttendancePeriod
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.ClassPeriodName
                + '|' + CONVERT(nvarchar, source.SchoolId)
                )
                , @schoolYearContext
                -- Attributes
                , OfficialAttendancePeriod
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.ClassPeriodMeetingTime (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , EndTime
        , StartTime
    )
    SELECT
        HASHBYTES('sha1', 
            ClassPeriodName
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
            , EndTime
            , StartTime
    FROM EdFi_Ods_2021.edfi.ClassPeriodMeetingTime source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ClassPeriodMeetingTime target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ClassPeriodName
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.EndTime = source.EndTime
            AND target.StartTime = source.StartTime
            AND target.EndTime = source.EndTime
            AND target.StartTime = source.StartTime
    )

    INSERT INTO edfi.ClassroomPositionDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ClassroomPositionDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ClassroomPositionDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ClassroomPositionDescriptorId)
        )
        , ClassroomPositionDescriptorId
    FROM EdFi_Ods_2021.edfi.ClassroomPositionDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ClassroomPositionDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ClassroomPositionDescriptorId)
            )
    )

    
    INSERT INTO edfi.Cohort (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , CohortIdentifier
                , EducationOrganizationId
        )
    SELECT 
        HASHBYTES('sha1', 
            CohortIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , CohortIdentifier
        , EducationOrganizationId
    FROM EdFi_Ods_2021.edfi.Cohort source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Cohort target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CohortIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
    )

        MERGE edfi.Cohort_Attributes AS target
        USING EdFi_Ods_2021.edfi.Cohort AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.CohortIdentifier
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.CohortDescription = source.CohortDescription
                -- References
            , target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
                )
            , target.CohortScopeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CohortScopeDescriptorId)
                )
            , target.CohortTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CohortTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , CohortDescription
                -- References
                , AcademicSubjectDescriptorHashKey
                , CohortScopeDescriptorHashKey
                , CohortTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.CohortIdentifier
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                )
                , @schoolYearContext
                -- Attributes
                , CohortDescription
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CohortScopeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CohortTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.CohortProgram (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ProgramHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CohortIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CohortProgram source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CohortProgram target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CohortIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
            AND target.ProgramHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
    )

    INSERT INTO edfi.CohortScopeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CohortScopeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CohortScopeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CohortScopeDescriptorId)
        )
        , CohortScopeDescriptorId
    FROM EdFi_Ods_2021.edfi.CohortScopeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CohortScopeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CohortScopeDescriptorId)
            )
    )

    
    INSERT INTO edfi.CohortTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CohortTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CohortTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CohortTypeDescriptorId)
        )
        , CohortTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.CohortTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CohortTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CohortTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.CohortYearTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CohortYearTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CohortYearTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CohortYearTypeDescriptorId)
        )
        , CohortYearTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.CohortYearTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CohortYearTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CohortYearTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.CommunityOrganization (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , CommunityOrganizationId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CommunityOrganizationId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CommunityOrganizationId)
        )
        , CommunityOrganizationId
    FROM EdFi_Ods_2021.edfi.CommunityOrganization source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CommunityOrganization target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CommunityOrganizationId)
            )
    )

    
    INSERT INTO edfi.CommunityProvider (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , CommunityProviderId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CommunityProviderId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CommunityProviderId)
        )
        , CommunityProviderId
    FROM EdFi_Ods_2021.edfi.CommunityProvider source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CommunityProvider target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CommunityProviderId)
            )
    )

        MERGE edfi.CommunityProvider_Attributes AS target
        USING EdFi_Ods_2021.edfi.CommunityProvider AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.CommunityProviderId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Attributes
            target.LicenseExemptIndicator = source.LicenseExemptIndicator
            , target.SchoolIndicator = source.SchoolIndicator
                -- References
            , target.CommunityOrganizationHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CommunityOrganizationId)
                )
            , target.ProviderCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProviderCategoryDescriptorId)
                )
            , target.ProviderProfitabilityDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProviderProfitabilityDescriptorId)
                )
            , target.ProviderStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProviderStatusDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , LicenseExemptIndicator
                , SchoolIndicator
                -- References
                , CommunityOrganizationHashKey
                , ProviderCategoryDescriptorHashKey
                , ProviderProfitabilityDescriptorHashKey
                , ProviderStatusDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CommunityProviderId)
                )
                , @schoolYearContext
                -- Attributes
                , LicenseExemptIndicator
                , SchoolIndicator
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CommunityOrganizationId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProviderCategoryDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProviderProfitabilityDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProviderStatusDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.CommunityProviderLicense (
        HashKey
        -- Identifying references (for aggregate root entity)
        , CommunityProviderHashKey
        -- Primary key columns
        , CommunityProviderId
                , LicenseIdentifier
                , LicensingOrganization
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CommunityProviderId)
                    + '|' + LicenseIdentifier
                    + '|' + LicensingOrganization
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CommunityProviderId)
        )
        , CommunityProviderId
        , LicenseIdentifier
        , LicensingOrganization
    FROM EdFi_Ods_2021.edfi.CommunityProviderLicense source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CommunityProviderLicense target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CommunityProviderId)
            + '|' + source.LicenseIdentifier
            + '|' + source.LicensingOrganization
            )
    )

        MERGE edfi.CommunityProviderLicense_Attributes AS target
        USING EdFi_Ods_2021.edfi.CommunityProviderLicense AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.CommunityProviderId)
        + '|' + source.LicenseIdentifier
        + '|' + source.LicensingOrganization
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AuthorizedFacilityCapacity = source.AuthorizedFacilityCapacity
            , target.LicenseEffectiveDate = source.LicenseEffectiveDate
            , target.LicenseExpirationDate = source.LicenseExpirationDate
            , target.LicenseIssueDate = source.LicenseIssueDate
            , target.OldestAgeAuthorizedToServe = source.OldestAgeAuthorizedToServe
            , target.YoungestAgeAuthorizedToServe = source.YoungestAgeAuthorizedToServe
                -- References
            , target.LicenseStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LicenseStatusDescriptorId)
                )
            , target.LicenseTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LicenseTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AuthorizedFacilityCapacity
                , LicenseEffectiveDate
                , LicenseExpirationDate
                , LicenseIssueDate
                , OldestAgeAuthorizedToServe
                , YoungestAgeAuthorizedToServe
                -- References
                , LicenseStatusDescriptorHashKey
                , LicenseTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CommunityProviderId)
                + '|' + source.LicenseIdentifier
                + '|' + source.LicensingOrganization
                )
                , @schoolYearContext
                -- Attributes
                , AuthorizedFacilityCapacity
                , LicenseEffectiveDate
                , LicenseExpirationDate
                , LicenseIssueDate
                , OldestAgeAuthorizedToServe
                , YoungestAgeAuthorizedToServe
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LicenseStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LicenseTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.CompetencyLevelDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CompetencyLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CompetencyLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CompetencyLevelDescriptorId)
        )
        , CompetencyLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.CompetencyLevelDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CompetencyLevelDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
            )
    )

    
    INSERT INTO edfi.CompetencyObjective (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , ObjectiveGradeLevelDescriptorHashKey
        -- Primary key columns
        , EducationOrganizationId
                , Objective
                , ObjectiveGradeLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + Objective
                    + '|' + CONVERT(nvarchar, ObjectiveGradeLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ObjectiveGradeLevelDescriptorId)
        )
        , EducationOrganizationId
        , Objective
        , ObjectiveGradeLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.CompetencyObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CompetencyObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.Objective
            + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
            )
    )

        MERGE edfi.CompetencyObjective_Attributes AS target
        USING EdFi_Ods_2021.edfi.CompetencyObjective AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.Objective
        + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.CompetencyObjectiveId = source.CompetencyObjectiveId
            , target.Description = source.Description
            , target.SuccessCriteria = source.SuccessCriteria
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , CompetencyObjectiveId
                , Description
                , SuccessCriteria
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.Objective
                + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
                )
                , @schoolYearContext
                -- Attributes
                , CompetencyObjectiveId
                , Description
                , SuccessCriteria
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.ContactTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ContactTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ContactTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ContactTypeDescriptorId)
        )
        , ContactTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.ContactTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ContactTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ContactTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.ContentClassDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ContentClassDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ContentClassDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ContentClassDescriptorId)
        )
        , ContentClassDescriptorId
    FROM EdFi_Ods_2021.edfi.ContentClassDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ContentClassDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ContentClassDescriptorId)
            )
    )

    
    INSERT INTO edfi.ContinuationOfServicesReasonDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ContinuationOfServicesReasonDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ContinuationOfServicesReasonDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ContinuationOfServicesReasonDescriptorId)
        )
        , ContinuationOfServicesReasonDescriptorId
    FROM EdFi_Ods_2021.edfi.ContinuationOfServicesReasonDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ContinuationOfServicesReasonDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ContinuationOfServicesReasonDescriptorId)
            )
    )

    
    INSERT INTO edfi.ContractedStaff (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AccountHashKey
        , StaffHashKey
        -- Primary key columns
        , AccountIdentifier
                , AsOfDate
                , EducationOrganizationId
                , FiscalYear
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            AccountIdentifier
                    + '|' + CONVERT(nvarchar, AsOfDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, FiscalYear)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            AccountIdentifier
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, FiscalYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , AccountIdentifier
        , AsOfDate
        , EducationOrganizationId
        , FiscalYear
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.ContractedStaff source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ContractedStaff target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AccountIdentifier
            + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.FiscalYear)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.ContractedStaff_Attributes AS target
        USING EdFi_Ods_2021.edfi.ContractedStaff AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AccountIdentifier
        + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.FiscalYear)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AmountToDate = source.AmountToDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AmountToDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AccountIdentifier
                + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.FiscalYear)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , AmountToDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.CostRateDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CostRateDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CostRateDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CostRateDescriptorId)
        )
        , CostRateDescriptorId
    FROM EdFi_Ods_2021.edfi.CostRateDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CostRateDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CostRateDescriptorId)
            )
    )

    
    INSERT INTO edfi.CountryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CountryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CountryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CountryDescriptorId)
        )
        , CountryDescriptorId
    FROM EdFi_Ods_2021.edfi.CountryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CountryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CountryDescriptorId)
            )
    )

    
    INSERT INTO edfi.Course (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , CourseCode
                , EducationOrganizationId
        )
    SELECT 
        HASHBYTES('sha1', 
            CourseCode
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , CourseCode
        , EducationOrganizationId
    FROM EdFi_Ods_2021.edfi.Course source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Course target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CourseCode
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
    )

        MERGE edfi.Course_Attributes AS target
        USING EdFi_Ods_2021.edfi.Course AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.CourseCode
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.CourseDescription = source.CourseDescription
            , target.CourseTitle = source.CourseTitle
            , target.DateCourseAdopted = source.DateCourseAdopted
            , target.HighSchoolCourseRequirement = source.HighSchoolCourseRequirement
            , target.MaxCompletionsForCredit = source.MaxCompletionsForCredit
            , target.MaximumAvailableCreditConversion = source.MaximumAvailableCreditConversion
            , target.MaximumAvailableCredits = source.MaximumAvailableCredits
            , target.MinimumAvailableCreditConversion = source.MinimumAvailableCreditConversion
            , target.MinimumAvailableCredits = source.MinimumAvailableCredits
            , target.NumberOfParts = source.NumberOfParts
            , target.TimeRequiredForCompletion = source.TimeRequiredForCompletion
                -- References
            , target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
                )
            , target.CareerPathwayDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CareerPathwayDescriptorId)
                )
            , target.CourseDefinedByDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseDefinedByDescriptorId)
                )
            , target.CourseGPAApplicabilityDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseGPAApplicabilityDescriptorId)
                )
            , target.MinimumAvailableCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MinimumAvailableCreditTypeDescriptorId)
                )
            , target.MaximumAvailableCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MaximumAvailableCreditTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , CourseDescription
                , CourseTitle
                , DateCourseAdopted
                , HighSchoolCourseRequirement
                , MaxCompletionsForCredit
                , MaximumAvailableCreditConversion
                , MaximumAvailableCredits
                , MinimumAvailableCreditConversion
                , MinimumAvailableCredits
                , NumberOfParts
                , TimeRequiredForCompletion
                -- References
                , AcademicSubjectDescriptorHashKey
                , CareerPathwayDescriptorHashKey
                , CourseDefinedByDescriptorHashKey
                , CourseGPAApplicabilityDescriptorHashKey
                , MinimumAvailableCreditTypeDescriptorHashKey
                , MaximumAvailableCreditTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.CourseCode
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                )
                , @schoolYearContext
                -- Attributes
                , CourseDescription
                , CourseTitle
                , DateCourseAdopted
                , HighSchoolCourseRequirement
                , MaxCompletionsForCredit
                , MaximumAvailableCreditConversion
                , MaximumAvailableCredits
                , MinimumAvailableCreditConversion
                , MinimumAvailableCredits
                , NumberOfParts
                , TimeRequiredForCompletion
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CareerPathwayDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseDefinedByDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseGPAApplicabilityDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MinimumAvailableCreditTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MaximumAvailableCreditTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.CourseCompetencyLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CompetencyLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CompetencyLevelDescriptorId)
                    + '|' + CourseCode
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CompetencyLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseCompetencyLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseCompetencyLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
            + '|' + source.CourseCode
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.CompetencyLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
            )
    )

    INSERT INTO edfi.CourseIdentificationCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CourseIdentificationSystemDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CourseCode
                    + '|' + CONVERT(nvarchar, CourseIdentificationSystemDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseIdentificationSystemDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseIdentificationCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseIdentificationCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CourseCode
            + '|' + CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.CourseIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
            )
    )


        MERGE edfi.CourseIdentificationCode_Attributes AS target
        USING EdFi_Ods_2021.edfi.CourseIdentificationCode AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.CourseCode
        + '|' + CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.CourseIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AssigningOrganizationIdentificationCode = source.AssigningOrganizationIdentificationCode
            , target.CourseCatalogURL = source.CourseCatalogURL
            , target.IdentificationCode = source.IdentificationCode
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , CourseIdentificationSystemDescriptorHashKey
                -- Attributes
                , AssigningOrganizationIdentificationCode
                , CourseCatalogURL
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.CourseCode
                + '|' + CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
                )
                -- Attributes
                , AssigningOrganizationIdentificationCode
                , CourseCatalogURL
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.CourseLearningObjective (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningObjectiveHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CourseCode
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + LearningObjectiveId
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            LearningObjectiveId
            + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.CourseLearningObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseLearningObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CourseCode
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.LearningObjectiveId
            + '|' + source.Namespace
            )
            AND target.LearningObjectiveHashKey = HASHBYTES('sha1',
                source.LearningObjectiveId
                + '|' + source.Namespace
            )
    )

    INSERT INTO edfi.CourseLearningStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningStandardHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CourseCode
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + LearningStandardId
        )
        , HASHBYTES('sha1', 
            LearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.CourseLearningStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseLearningStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CourseCode
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.LearningStandardId
            )
            AND target.LearningStandardHashKey = HASHBYTES('sha1',
                source.LearningStandardId
            )
    )

    INSERT INTO edfi.CourseLevelCharacteristic (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CourseLevelCharacteristicDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CourseCode
                    + '|' + CONVERT(nvarchar, CourseLevelCharacteristicDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseLevelCharacteristicDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseLevelCharacteristic source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseLevelCharacteristic target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CourseCode
            + '|' + CONVERT(nvarchar, source.CourseLevelCharacteristicDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.CourseLevelCharacteristicDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CourseLevelCharacteristicDescriptorId)
            )
    )

    INSERT INTO edfi.CourseOfferedGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CourseCode
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseOfferedGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseOfferedGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CourseCode
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.CourseAttemptResultDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CourseAttemptResultDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseAttemptResultDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseAttemptResultDescriptorId)
        )
        , CourseAttemptResultDescriptorId
    FROM EdFi_Ods_2021.edfi.CourseAttemptResultDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseAttemptResultDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
            )
    )

    
    INSERT INTO edfi.CourseDefinedByDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CourseDefinedByDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseDefinedByDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseDefinedByDescriptorId)
        )
        , CourseDefinedByDescriptorId
    FROM EdFi_Ods_2021.edfi.CourseDefinedByDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseDefinedByDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseDefinedByDescriptorId)
            )
    )

    
    INSERT INTO edfi.CourseGPAApplicabilityDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CourseGPAApplicabilityDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseGPAApplicabilityDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseGPAApplicabilityDescriptorId)
        )
        , CourseGPAApplicabilityDescriptorId
    FROM EdFi_Ods_2021.edfi.CourseGPAApplicabilityDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseGPAApplicabilityDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseGPAApplicabilityDescriptorId)
            )
    )

    
    INSERT INTO edfi.CourseIdentificationSystemDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CourseIdentificationSystemDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseIdentificationSystemDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseIdentificationSystemDescriptorId)
        )
        , CourseIdentificationSystemDescriptorId
    FROM EdFi_Ods_2021.edfi.CourseIdentificationSystemDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseIdentificationSystemDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
            )
    )

    
    INSERT INTO edfi.CourseLevelCharacteristicDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CourseLevelCharacteristicDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseLevelCharacteristicDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseLevelCharacteristicDescriptorId)
        )
        , CourseLevelCharacteristicDescriptorId
    FROM EdFi_Ods_2021.edfi.CourseLevelCharacteristicDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseLevelCharacteristicDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseLevelCharacteristicDescriptorId)
            )
    )

    
    INSERT INTO edfi.CourseOffering (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        , SessionHashKey
        -- Primary key columns
        , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SessionName
        )
    SELECT 
        HASHBYTES('sha1', 
            LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SessionName
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SessionName
        )
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SessionName
    FROM EdFi_Ods_2021.edfi.CourseOffering source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseOffering target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SessionName
            )
    )

        MERGE edfi.CourseOffering_Attributes AS target
        USING EdFi_Ods_2021.edfi.CourseOffering AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SessionName
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.InstructionalTimePlanned = source.InstructionalTimePlanned
            , target.LocalCourseTitle = source.LocalCourseTitle
                -- References
            , target.CourseHashKey = HASHBYTES('sha1', 
                source.CourseCode
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , InstructionalTimePlanned
                , LocalCourseTitle
                -- References
                , CourseHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SessionName
                )
                , @schoolYearContext
                -- Attributes
                , InstructionalTimePlanned
                , LocalCourseTitle
                -- References
                , HASHBYTES('sha1', 
                source.CourseCode
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.CourseOfferingCourseLevelCharacteristic (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CourseLevelCharacteristicDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseLevelCharacteristicDescriptorId)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseLevelCharacteristicDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseOfferingCourseLevelCharacteristic source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseOfferingCourseLevelCharacteristic target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseLevelCharacteristicDescriptorId)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SessionName
            )
            AND target.CourseLevelCharacteristicDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CourseLevelCharacteristicDescriptorId)
            )
    )

    INSERT INTO edfi.CourseOfferingCurriculumUsed (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CurriculumUsedDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CurriculumUsedDescriptorId)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CurriculumUsedDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseOfferingCurriculumUsed source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseOfferingCurriculumUsed target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CurriculumUsedDescriptorId)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SessionName
            )
            AND target.CurriculumUsedDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CurriculumUsedDescriptorId)
            )
    )

    INSERT INTO edfi.CourseOfferingOfferedGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseOfferingOfferedGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseOfferingOfferedGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SessionName
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.CourseRepeatCodeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CourseRepeatCodeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseRepeatCodeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseRepeatCodeDescriptorId)
        )
        , CourseRepeatCodeDescriptorId
    FROM EdFi_Ods_2021.edfi.CourseRepeatCodeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseRepeatCodeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseRepeatCodeDescriptorId)
            )
    )

    
    INSERT INTO edfi.CourseTranscript (
        HashKey
        -- Identifying references (for aggregate root entity)
        , CourseHashKey
        , CourseAttemptResultDescriptorHashKey
        , StudentAcademicRecordHashKey
        -- Primary key columns
        , CourseAttemptResultDescriptorId
                , CourseCode
                , CourseEducationOrganizationId
                , EducationOrganizationId
                , SchoolYear
                , StudentUSI
                , TermDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseAttemptResultDescriptorId)
                    + '|' + CourseCode
                    + '|' + CONVERT(nvarchar, CourseEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CourseCode
            + '|' + CONVERT(nvarchar, CourseEducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseAttemptResultDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + CONVERT(nvarchar, StudentUSI)
            + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , CourseAttemptResultDescriptorId
        , CourseCode
        , CourseEducationOrganizationId
        , EducationOrganizationId
        , SchoolYear
        , StudentUSI
        , TermDescriptorId
    FROM EdFi_Ods_2021.edfi.CourseTranscript source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseTranscript target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
            + '|' + source.CourseCode
            + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
    )

        MERGE edfi.CourseTranscript_Attributes AS target
        USING EdFi_Ods_2021.edfi.CourseTranscript AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
        + '|' + source.CourseCode
        + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AlternativeCourseCode = source.AlternativeCourseCode
            , target.AlternativeCourseTitle = source.AlternativeCourseTitle
            , target.AssigningOrganizationIdentificationCode = source.AssigningOrganizationIdentificationCode
            , target.AttemptedCreditConversion = source.AttemptedCreditConversion
            , target.AttemptedCredits = source.AttemptedCredits
            , target.CourseCatalogURL = source.CourseCatalogURL
            , target.CourseTitle = source.CourseTitle
            , target.EarnedCreditConversion = source.EarnedCreditConversion
            , target.EarnedCredits = source.EarnedCredits
            , target.FinalLetterGradeEarned = source.FinalLetterGradeEarned
            , target.FinalNumericGradeEarned = source.FinalNumericGradeEarned
                -- References
            , target.CourseRepeatCodeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseRepeatCodeDescriptorId)
                )
            , target.AttemptedCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AttemptedCreditTypeDescriptorId)
                )
            , target.EarnedCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EarnedCreditTypeDescriptorId)
                )
            , target.ExternalEducationOrganizationHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ExternalEducationOrganizationId)
                )
            , target.WhenTakenGradeLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.WhenTakenGradeLevelDescriptorId)
                )
            , target.MethodCreditEarnedDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MethodCreditEarnedDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AlternativeCourseCode
                , AlternativeCourseTitle
                , AssigningOrganizationIdentificationCode
                , AttemptedCreditConversion
                , AttemptedCredits
                , CourseCatalogURL
                , CourseTitle
                , EarnedCreditConversion
                , EarnedCredits
                , FinalLetterGradeEarned
                , FinalNumericGradeEarned
                -- References
                , CourseRepeatCodeDescriptorHashKey
                , AttemptedCreditTypeDescriptorHashKey
                , EarnedCreditTypeDescriptorHashKey
                , ExternalEducationOrganizationHashKey
                , WhenTakenGradeLevelDescriptorHashKey
                , MethodCreditEarnedDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
                + '|' + source.CourseCode
                + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Attributes
                , AlternativeCourseCode
                , AlternativeCourseTitle
                , AssigningOrganizationIdentificationCode
                , AttemptedCreditConversion
                , AttemptedCredits
                , CourseCatalogURL
                , CourseTitle
                , EarnedCreditConversion
                , EarnedCredits
                , FinalLetterGradeEarned
                , FinalNumericGradeEarned
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseRepeatCodeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AttemptedCreditTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EarnedCreditTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ExternalEducationOrganizationId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.WhenTakenGradeLevelDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MethodCreditEarnedDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.CourseTranscriptAcademicSubject (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicSubjectDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
                    + '|' + CONVERT(nvarchar, CourseAttemptResultDescriptorId)
                    + '|' + CourseCode
                    + '|' + CONVERT(nvarchar, CourseEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseTranscriptAcademicSubject source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseTranscriptAcademicSubject target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            + '|' + CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
            + '|' + source.CourseCode
            + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )

    INSERT INTO edfi.CourseTranscriptAlternativeCourseIdentificationCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CourseIdentificationSystemDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseAttemptResultDescriptorId)
                    + '|' + CourseCode
                    + '|' + CONVERT(nvarchar, CourseEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, CourseIdentificationSystemDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseIdentificationSystemDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseTranscriptAlternativeCourseIdentificationCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseTranscriptAlternativeCourseIdentificationCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
            + '|' + source.CourseCode
            + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.CourseIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
            )
    )


        MERGE edfi.CourseTranscriptAlternativeCourseIdentificationCode_Attributes AS target
        USING EdFi_Ods_2021.edfi.CourseTranscriptAlternativeCourseIdentificationCode AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
        + '|' + source.CourseCode
        + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.CourseIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AssigningOrganizationIdentificationCode = source.AssigningOrganizationIdentificationCode
            , target.CourseCatalogURL = source.CourseCatalogURL
            , target.IdentificationCode = source.IdentificationCode
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , CourseIdentificationSystemDescriptorHashKey
                -- Attributes
                , AssigningOrganizationIdentificationCode
                , CourseCatalogURL
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
                + '|' + source.CourseCode
                + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CourseIdentificationSystemDescriptorId)
                )
                -- Attributes
                , AssigningOrganizationIdentificationCode
                , CourseCatalogURL
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.CourseTranscriptCreditCategory (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CreditCategoryDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseAttemptResultDescriptorId)
                    + '|' + CourseCode
                    + '|' + CONVERT(nvarchar, CourseEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, CreditCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CreditCategoryDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseTranscriptCreditCategory source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseTranscriptCreditCategory target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
            + '|' + source.CourseCode
            + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.CreditCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.CreditCategoryDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CreditCategoryDescriptorId)
            )
    )

    INSERT INTO edfi.CourseTranscriptEarnedAdditionalCredits (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AdditionalCreditTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AdditionalCreditTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, CourseAttemptResultDescriptorId)
                    + '|' + CourseCode
                    + '|' + CONVERT(nvarchar, CourseEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AdditionalCreditTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CourseTranscriptEarnedAdditionalCredits source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CourseTranscriptEarnedAdditionalCredits target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AdditionalCreditTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
            + '|' + source.CourseCode
            + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.AdditionalCreditTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AdditionalCreditTypeDescriptorId)
            )
    )


        MERGE edfi.CourseTranscriptEarnedAdditionalCredits_Attributes AS target
        USING EdFi_Ods_2021.edfi.CourseTranscriptEarnedAdditionalCredits AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AdditionalCreditTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
        + '|' + source.CourseCode
        + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AdditionalCreditTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AdditionalCreditTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.Credits = source.Credits
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AdditionalCreditTypeDescriptorHashKey
                -- Attributes
                , Credits
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdditionalCreditTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.CourseAttemptResultDescriptorId)
                + '|' + source.CourseCode
                + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdditionalCreditTypeDescriptorId)
                )
                -- Attributes
                , Credits
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.Credential (
        HashKey
        -- Identifying references (for aggregate root entity)
        , StateOfIssueStateAbbreviationDescriptorHashKey
        -- Primary key columns
        , CredentialIdentifier
                , StateOfIssueStateAbbreviationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CredentialIdentifier
                    + '|' + CONVERT(nvarchar, StateOfIssueStateAbbreviationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StateOfIssueStateAbbreviationDescriptorId)
        )
        , CredentialIdentifier
        , StateOfIssueStateAbbreviationDescriptorId
    FROM EdFi_Ods_2021.edfi.Credential source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Credential target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CredentialIdentifier
            + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
            )
    )

        MERGE edfi.Credential_Attributes AS target
        USING EdFi_Ods_2021.edfi.Credential AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.CredentialIdentifier
        + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EffectiveDate = source.EffectiveDate
            , target.ExpirationDate = source.ExpirationDate
            , target.IssuanceDate = source.IssuanceDate
            , target.Namespace = source.Namespace
                -- References
            , target.CredentialFieldDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CredentialFieldDescriptorId)
                )
            , target.CredentialTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CredentialTypeDescriptorId)
                )
            , target.TeachingCredentialBasisDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TeachingCredentialBasisDescriptorId)
                )
            , target.TeachingCredentialDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TeachingCredentialDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EffectiveDate
                , ExpirationDate
                , IssuanceDate
                , Namespace
                -- References
                , CredentialFieldDescriptorHashKey
                , CredentialTypeDescriptorHashKey
                , TeachingCredentialBasisDescriptorHashKey
                , TeachingCredentialDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.CredentialIdentifier
                + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
                )
                , @schoolYearContext
                -- Attributes
                , EffectiveDate
                , ExpirationDate
                , IssuanceDate
                , Namespace
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CredentialFieldDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CredentialTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TeachingCredentialBasisDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TeachingCredentialDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.CredentialAcademicSubject (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicSubjectDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
                    + '|' + CredentialIdentifier
                    + '|' + CONVERT(nvarchar, StateOfIssueStateAbbreviationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CredentialAcademicSubject source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CredentialAcademicSubject target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            + '|' + source.CredentialIdentifier
            + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
            )
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )

    INSERT INTO edfi.CredentialEndorsement (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , CredentialEndorsement
    )
    SELECT
        HASHBYTES('sha1', 
            CredentialIdentifier
                    + '|' + CONVERT(nvarchar, StateOfIssueStateAbbreviationDescriptorId)
        )
            , CredentialEndorsement
    FROM EdFi_Ods_2021.edfi.CredentialEndorsement source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CredentialEndorsement target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CredentialIdentifier
            + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
            )
            AND target.CredentialEndorsement = source.CredentialEndorsement
    )

    INSERT INTO edfi.CredentialGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CredentialIdentifier
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, StateOfIssueStateAbbreviationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.CredentialGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CredentialGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CredentialIdentifier
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.CredentialFieldDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CredentialFieldDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CredentialFieldDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CredentialFieldDescriptorId)
        )
        , CredentialFieldDescriptorId
    FROM EdFi_Ods_2021.edfi.CredentialFieldDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CredentialFieldDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CredentialFieldDescriptorId)
            )
    )

    
    INSERT INTO edfi.CredentialTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CredentialTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CredentialTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CredentialTypeDescriptorId)
        )
        , CredentialTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.CredentialTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CredentialTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CredentialTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.CreditCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CreditCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CreditCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CreditCategoryDescriptorId)
        )
        , CreditCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.CreditCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CreditCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CreditCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.CreditTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CreditTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CreditTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CreditTypeDescriptorId)
        )
        , CreditTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.CreditTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CreditTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CreditTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.CTEProgramServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CTEProgramServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CTEProgramServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CTEProgramServiceDescriptorId)
        )
        , CTEProgramServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.CTEProgramServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CTEProgramServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CTEProgramServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.CurriculumUsedDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , CurriculumUsedDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CurriculumUsedDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CurriculumUsedDescriptorId)
        )
        , CurriculumUsedDescriptorId
    FROM EdFi_Ods_2021.edfi.CurriculumUsedDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.CurriculumUsedDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CurriculumUsedDescriptorId)
            )
    )

    
    INSERT INTO edfi.DeliveryMethodDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DeliveryMethodDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DeliveryMethodDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DeliveryMethodDescriptorId)
        )
        , DeliveryMethodDescriptorId
    FROM EdFi_Ods_2021.edfi.DeliveryMethodDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DeliveryMethodDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DeliveryMethodDescriptorId)
            )
    )

    
    INSERT INTO edfi.Descriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , DescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DescriptorId)
        )
        -- Identifying references
        , DescriptorId
    FROM EdFi_Ods_2021.edfi.Descriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Descriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DescriptorId)
            )
    )

        MERGE edfi.Descriptor_Attributes AS target
        USING EdFi_Ods_2021.edfi.Descriptor AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.DescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.CodeValue = source.CodeValue
            , target.Description = source.Description
            , target.EffectiveBeginDate = source.EffectiveBeginDate
            , target.EffectiveEndDate = source.EffectiveEndDate
            , target.Namespace = source.Namespace
            , target.PriorDescriptorId = source.PriorDescriptorId
            , target.ShortDescription = source.ShortDescription
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , CodeValue
                , Description
                , EffectiveBeginDate
                , EffectiveEndDate
                , Namespace
                , PriorDescriptorId
                , ShortDescription
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DescriptorId)
                )
                , @schoolYearContext
                -- Attributes
                , CodeValue
                , Description
                , EffectiveBeginDate
                , EffectiveEndDate
                , Namespace
                , PriorDescriptorId
                , ShortDescription
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.DiagnosisDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DiagnosisDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
        )
        , DiagnosisDescriptorId
    FROM EdFi_Ods_2021.edfi.DiagnosisDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DiagnosisDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiagnosisDescriptorId)
            )
    )

    
    INSERT INTO edfi.DiplomaLevelDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DiplomaLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DiplomaLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DiplomaLevelDescriptorId)
        )
        , DiplomaLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.DiplomaLevelDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DiplomaLevelDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiplomaLevelDescriptorId)
            )
    )

    
    INSERT INTO edfi.DiplomaTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DiplomaTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DiplomaTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DiplomaTypeDescriptorId)
        )
        , DiplomaTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.DiplomaTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DiplomaTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiplomaTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.DisabilityDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DisabilityDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDescriptorId)
        )
        , DisabilityDescriptorId
    FROM EdFi_Ods_2021.edfi.DisabilityDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisabilityDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisabilityDescriptorId)
            )
    )

    
    INSERT INTO edfi.DisabilityDesignationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DisabilityDesignationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDesignationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDesignationDescriptorId)
        )
        , DisabilityDesignationDescriptorId
    FROM EdFi_Ods_2021.edfi.DisabilityDesignationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisabilityDesignationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisabilityDesignationDescriptorId)
            )
    )

    
    INSERT INTO edfi.DisabilityDeterminationSourceTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DisabilityDeterminationSourceTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDeterminationSourceTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDeterminationSourceTypeDescriptorId)
        )
        , DisabilityDeterminationSourceTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.DisabilityDeterminationSourceTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisabilityDeterminationSourceTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisabilityDeterminationSourceTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.DisciplineAction (
        HashKey
        -- Identifying references (for aggregate root entity)
        , StudentHashKey
        -- Primary key columns
        , DisciplineActionIdentifier
                , DisciplineDate
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            DisciplineActionIdentifier
                    + '|' + CONVERT(nvarchar, DisciplineDate, 23)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , DisciplineActionIdentifier
        , DisciplineDate
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.DisciplineAction source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineAction target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.DisciplineActionIdentifier
            + '|' + CONVERT(nvarchar, source.DisciplineDate, 23)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.DisciplineAction_Attributes AS target
        USING EdFi_Ods_2021.edfi.DisciplineAction AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.DisciplineActionIdentifier
        + '|' + CONVERT(nvarchar, source.DisciplineDate, 23)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.ActualDisciplineActionLength = source.ActualDisciplineActionLength
            , target.DisciplineActionLength = source.DisciplineActionLength
            , target.IEPPlacementMeetingIndicator = source.IEPPlacementMeetingIndicator
            , target.ReceivedEducationServicesDuringExpulsion = source.ReceivedEducationServicesDuringExpulsion
            , target.RelatedToZeroTolerancePolicy = source.RelatedToZeroTolerancePolicy
                -- References
            , target.DisciplineActionLengthDifferenceReasonDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisciplineActionLengthDifferenceReasonDescriptorId)
                )
            , target.ResponsibilitySchoolHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResponsibilitySchoolId)
                )
            , target.AssignmentSchoolHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssignmentSchoolId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , ActualDisciplineActionLength
                , DisciplineActionLength
                , IEPPlacementMeetingIndicator
                , ReceivedEducationServicesDuringExpulsion
                , RelatedToZeroTolerancePolicy
                -- References
                , DisciplineActionLengthDifferenceReasonDescriptorHashKey
                , ResponsibilitySchoolHashKey
                , AssignmentSchoolHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.DisciplineActionIdentifier
                + '|' + CONVERT(nvarchar, source.DisciplineDate, 23)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , ActualDisciplineActionLength
                , DisciplineActionLength
                , IEPPlacementMeetingIndicator
                , ReceivedEducationServicesDuringExpulsion
                , RelatedToZeroTolerancePolicy
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisciplineActionLengthDifferenceReasonDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResponsibilitySchoolId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssignmentSchoolId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.DisciplineActionDiscipline (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DisciplineDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            DisciplineActionIdentifier
                    + '|' + CONVERT(nvarchar, DisciplineDate, 23)
                    + '|' + CONVERT(nvarchar, DisciplineDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.DisciplineActionDiscipline source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineActionDiscipline target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.DisciplineActionIdentifier
            + '|' + CONVERT(nvarchar, source.DisciplineDate, 23)
            + '|' + CONVERT(nvarchar, source.DisciplineDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.DisciplineDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DisciplineDescriptorId)
            )
    )

    INSERT INTO edfi.DisciplineActionStaff (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StaffHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            DisciplineActionIdentifier
                    + '|' + CONVERT(nvarchar, DisciplineDate, 23)
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
    FROM EdFi_Ods_2021.edfi.DisciplineActionStaff source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineActionStaff target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.DisciplineActionIdentifier
            + '|' + CONVERT(nvarchar, source.DisciplineDate, 23)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StaffHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StaffUSI)
            )
    )

    INSERT INTO edfi.DisciplineActionStudentDisciplineIncidentAssociation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StudentDisciplineIncidentAssociationHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            DisciplineActionIdentifier
                    + '|' + CONVERT(nvarchar, DisciplineDate, 23)
                    + '|' + IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            IncidentIdentifier
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.DisciplineActionStudentDisciplineIncidentAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineActionStudentDisciplineIncidentAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.DisciplineActionIdentifier
            + '|' + CONVERT(nvarchar, source.DisciplineDate, 23)
            + '|' + source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StudentDisciplineIncidentAssociationHashKey = HASHBYTES('sha1',
                source.IncidentIdentifier
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.DisciplineActionLengthDifferenceReasonDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DisciplineActionLengthDifferenceReasonDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineActionLengthDifferenceReasonDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineActionLengthDifferenceReasonDescriptorId)
        )
        , DisciplineActionLengthDifferenceReasonDescriptorId
    FROM EdFi_Ods_2021.edfi.DisciplineActionLengthDifferenceReasonDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineActionLengthDifferenceReasonDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisciplineActionLengthDifferenceReasonDescriptorId)
            )
    )

    
    INSERT INTO edfi.DisciplineDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DisciplineDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineDescriptorId)
        )
        , DisciplineDescriptorId
    FROM EdFi_Ods_2021.edfi.DisciplineDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisciplineDescriptorId)
            )
    )

    
    INSERT INTO edfi.DisciplineIncident (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        -- Primary key columns
        , IncidentIdentifier
                , SchoolId
        )
    SELECT 
        HASHBYTES('sha1', 
            IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , IncidentIdentifier
        , SchoolId
    FROM EdFi_Ods_2021.edfi.DisciplineIncident source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineIncident target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
    )

        MERGE edfi.DisciplineIncident_Attributes AS target
        USING EdFi_Ods_2021.edfi.DisciplineIncident AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.IncidentIdentifier
        + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.CaseNumber = source.CaseNumber
            , target.IncidentCost = source.IncidentCost
            , target.IncidentDate = source.IncidentDate
            , target.IncidentDescription = source.IncidentDescription
            , target.IncidentTime = source.IncidentTime
            , target.ReportedToLawEnforcement = source.ReportedToLawEnforcement
            , target.ReporterName = source.ReporterName
                -- References
            , target.IncidentLocationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IncidentLocationDescriptorId)
                )
            , target.ReporterDescriptionDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ReporterDescriptionDescriptorId)
                )
            , target.StaffHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , CaseNumber
                , IncidentCost
                , IncidentDate
                , IncidentDescription
                , IncidentTime
                , ReportedToLawEnforcement
                , ReporterName
                -- References
                , IncidentLocationDescriptorHashKey
                , ReporterDescriptionDescriptorHashKey
                , StaffHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.IncidentIdentifier
                + '|' + CONVERT(nvarchar, source.SchoolId)
                )
                , @schoolYearContext
                -- Attributes
                , CaseNumber
                , IncidentCost
                , IncidentDate
                , IncidentDescription
                , IncidentTime
                , ReportedToLawEnforcement
                , ReporterName
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IncidentLocationDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ReporterDescriptionDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.DisciplineIncidentBehavior (
        HashKey
        -- Identifying references (for aggregate child entity)
        , BehaviorDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BehaviorDescriptorId)
                    + '|' + IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BehaviorDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.DisciplineIncidentBehavior source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineIncidentBehavior target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BehaviorDescriptorId)
            + '|' + source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.BehaviorDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.BehaviorDescriptorId)
            )
    )


        MERGE edfi.DisciplineIncidentBehavior_Attributes AS target
        USING EdFi_Ods_2021.edfi.DisciplineIncidentBehavior AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BehaviorDescriptorId)
        + '|' + source.IncidentIdentifier
        + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.BehaviorDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BehaviorDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.BehaviorDetailedDescription = source.BehaviorDetailedDescription
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , BehaviorDescriptorHashKey
                -- Attributes
                , BehaviorDetailedDescription
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BehaviorDescriptorId)
                + '|' + source.IncidentIdentifier
                + '|' + CONVERT(nvarchar, source.SchoolId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BehaviorDescriptorId)
                )
                -- Attributes
                , BehaviorDetailedDescription
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.DisciplineIncidentExternalParticipant (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DisciplineIncidentParticipationCodeDescriptorHashKey
        -- Contextual primary key
        , FirstName
        , LastSurname
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineIncidentParticipationCodeDescriptorId)
                    + '|' + IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineIncidentParticipationCodeDescriptorId)
        )
            , FirstName
            , LastSurname
    FROM EdFi_Ods_2021.edfi.DisciplineIncidentExternalParticipant source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineIncidentExternalParticipant target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisciplineIncidentParticipationCodeDescriptorId)
            + '|' + source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.DisciplineIncidentParticipationCodeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DisciplineIncidentParticipationCodeDescriptorId)
            )
            AND target.FirstName = source.FirstName
            AND target.LastSurname = source.LastSurname
            AND target.FirstName = source.FirstName
            AND target.LastSurname = source.LastSurname
    )

    INSERT INTO edfi.DisciplineIncidentWeapon (
        HashKey
        -- Identifying references (for aggregate child entity)
        , WeaponDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, WeaponDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, WeaponDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.DisciplineIncidentWeapon source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineIncidentWeapon target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.WeaponDescriptorId)
            )
            AND target.WeaponDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.WeaponDescriptorId)
            )
    )

    INSERT INTO edfi.DisciplineIncidentParticipationCodeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , DisciplineIncidentParticipationCodeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineIncidentParticipationCodeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineIncidentParticipationCodeDescriptorId)
        )
        , DisciplineIncidentParticipationCodeDescriptorId
    FROM EdFi_Ods_2021.edfi.DisciplineIncidentParticipationCodeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.DisciplineIncidentParticipationCodeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisciplineIncidentParticipationCodeDescriptorId)
            )
    )

    
    INSERT INTO edfi.EducationalEnvironmentDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , EducationalEnvironmentDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationalEnvironmentDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationalEnvironmentDescriptorId)
        )
        , EducationalEnvironmentDescriptorId
    FROM EdFi_Ods_2021.edfi.EducationalEnvironmentDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationalEnvironmentDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
            )
    )

    
    INSERT INTO edfi.EducationContent (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , ContentIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            ContentIdentifier
        )
        -- Identifying references
        , ContentIdentifier
    FROM EdFi_Ods_2021.edfi.EducationContent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationContent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            )
    )

        MERGE edfi.EducationContent_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationContent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.ContentIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AdditionalAuthorsIndicator = source.AdditionalAuthorsIndicator
            , target.Cost = source.Cost
            , target.Description = source.Description
            , target.LearningResourceMetadataURI = source.LearningResourceMetadataURI
            , target.Namespace = source.Namespace
            , target.PublicationDate = source.PublicationDate
            , target.PublicationYear = source.PublicationYear
            , target.Publisher = source.Publisher
            , target.ShortDescription = source.ShortDescription
            , target.TimeRequired = source.TimeRequired
            , target.UseRightsURL = source.UseRightsURL
            , target.Version = source.Version
                -- References
            , target.ContentClassDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ContentClassDescriptorId)
                )
            , target.CostRateDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CostRateDescriptorId)
                )
            , target.InteractivityStyleDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InteractivityStyleDescriptorId)
                )
            , target.LearningStandardHashKey = HASHBYTES('sha1', 
                source.LearningStandardId
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AdditionalAuthorsIndicator
                , Cost
                , Description
                , LearningResourceMetadataURI
                , Namespace
                , PublicationDate
                , PublicationYear
                , Publisher
                , ShortDescription
                , TimeRequired
                , UseRightsURL
                , Version
                -- References
                , ContentClassDescriptorHashKey
                , CostRateDescriptorHashKey
                , InteractivityStyleDescriptorHashKey
                , LearningStandardHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.ContentIdentifier
                )
                , @schoolYearContext
                -- Attributes
                , AdditionalAuthorsIndicator
                , Cost
                , Description
                , LearningResourceMetadataURI
                , Namespace
                , PublicationDate
                , PublicationYear
                , Publisher
                , ShortDescription
                , TimeRequired
                , UseRightsURL
                , Version
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ContentClassDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CostRateDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InteractivityStyleDescriptorId)
                )
                , HASHBYTES('sha1', 
                source.LearningStandardId
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.EducationContentAppropriateGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.EducationContentAppropriateGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationContentAppropriateGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.EducationContentAppropriateSex (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SexDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
                    + '|' + CONVERT(nvarchar, SexDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SexDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.EducationContentAppropriateSex source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationContentAppropriateSex target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            + '|' + CONVERT(nvarchar, source.SexDescriptorId)
            )
            AND target.SexDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SexDescriptorId)
            )
    )

    INSERT INTO edfi.EducationContentAuthor (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , Author
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
        )
            , Author
    FROM EdFi_Ods_2021.edfi.EducationContentAuthor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationContentAuthor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            )
            AND target.Author = source.Author
    )

    INSERT INTO edfi.EducationContentDerivativeSourceEducationContent (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
                    + '|' + DerivativeSourceContentIdentifier
        )
    FROM EdFi_Ods_2021.edfi.EducationContentDerivativeSourceEducationContent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationContentDerivativeSourceEducationContent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            + '|' + source.DerivativeSourceContentIdentifier
            )
    )

    INSERT INTO edfi.EducationContentDerivativeSourceLearningResourceMetadataURI (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , DerivativeSourceLearningResourceMetadataURI
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
        )
            , DerivativeSourceLearningResourceMetadataURI
    FROM EdFi_Ods_2021.edfi.EducationContentDerivativeSourceLearningResourceMetadataURI source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationContentDerivativeSourceLearningResourceMetadataURI target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            )
            AND target.DerivativeSourceLearningResourceMetadataURI = source.DerivativeSourceLearningResourceMetadataURI
    )

    INSERT INTO edfi.EducationContentDerivativeSourceURI (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , DerivativeSourceURI
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
        )
            , DerivativeSourceURI
    FROM EdFi_Ods_2021.edfi.EducationContentDerivativeSourceURI source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationContentDerivativeSourceURI target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            )
            AND target.DerivativeSourceURI = source.DerivativeSourceURI
    )

    INSERT INTO edfi.EducationContentLanguage (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
                    + '|' + CONVERT(nvarchar, LanguageDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.EducationContentLanguage source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationContentLanguage target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            + '|' + CONVERT(nvarchar, source.LanguageDescriptorId)
            )
            AND target.LanguageDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageDescriptorId)
            )
    )

    INSERT INTO edfi.EducationOrganization (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , EducationOrganizationId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        -- Identifying references
        , EducationOrganizationId
    FROM EdFi_Ods_2021.edfi.EducationOrganization source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganization target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            )
    )

        MERGE edfi.EducationOrganization_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganization AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.NameOfInstitution = source.NameOfInstitution
            , target.ShortNameOfInstitution = source.ShortNameOfInstitution
            , target.WebSite = source.WebSite
                -- References
            , target.OperationalStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OperationalStatusDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , NameOfInstitution
                , ShortNameOfInstitution
                , WebSite
                -- References
                , OperationalStatusDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                )
                , @schoolYearContext
                -- Attributes
                , NameOfInstitution
                , ShortNameOfInstitution
                , WebSite
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OperationalStatusDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.EducationOrganizationAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AddressTypeDescriptorHashKey
        , StateAbbreviationDescriptorHashKey
        -- Contextual primary key
        , City
        , PostalCode
        , StreetNumberName
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
            , City
            , PostalCode
            , StreetNumberName
    FROM EdFi_Ods_2021.edfi.EducationOrganizationAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
    )


        MERGE edfi.EducationOrganizationAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            -- Contextual primary key
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.ApartmentRoomSuiteNumber = source.ApartmentRoomSuiteNumber
            , target.BuildingSiteNumber = source.BuildingSiteNumber
            , target.CongressionalDistrict = source.CongressionalDistrict
            , target.CountyFIPSCode = source.CountyFIPSCode
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
            , target.NameOfCounty = source.NameOfCounty
                -- References
            , target.LocaleDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AddressTypeDescriptorHashKey
                , StateAbbreviationDescriptorHashKey
                -- Contextual primary key
                , City
                , PostalCode
                , StreetNumberName
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                -- References
                , LocaleDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
                -- Contextual primary key
                , City
                , PostalCode
                , StreetNumberName
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.EducationOrganizationAddressPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , BeginDate
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + City
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + PostalCode
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
                    + '|' + StreetNumberName
        )
            , BeginDate
    FROM EdFi_Ods_2021.edfi.EducationOrganizationAddressPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationAddressPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + source.City
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.PostalCode
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            + '|' + source.StreetNumberName
            )
            AND target.BeginDate = source.BeginDate
    )


        MERGE edfi.EducationOrganizationAddressPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationAddressPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + source.City
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.PostalCode
        + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
        + '|' + source.StreetNumberName
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.BeginDate = source.BeginDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + source.City
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.PostalCode
                + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                + '|' + source.StreetNumberName
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.EducationOrganizationCategory (
        HashKey
        -- Identifying references (for aggregate child entity)
        , EducationOrganizationCategoryDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationCategoryDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.EducationOrganizationCategory source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationCategory target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.EducationOrganizationCategoryDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.EducationOrganizationCategoryDescriptorId)
            )
    )

    INSERT INTO edfi.EducationOrganizationIdentificationCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        , EducationOrganizationIdentificationSystemDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationIdentificationSystemDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationIdentificationSystemDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.EducationOrganizationIdentificationCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationIdentificationCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationIdentificationSystemDescriptorId)
            )
            AND target.EducationOrganizationIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.EducationOrganizationIdentificationSystemDescriptorId)
            )
    )


        MERGE edfi.EducationOrganizationIdentificationCode_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationIdentificationCode AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationIdentificationSystemDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.EducationOrganizationIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationIdentificationSystemDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.IdentificationCode = source.IdentificationCode
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , EducationOrganizationIdentificationSystemDescriptorHashKey
                -- Attributes
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationIdentificationSystemDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationIdentificationSystemDescriptorId)
                )
                -- Attributes
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.EducationOrganizationIndicator (
        HashKey
        -- Identifying references (for aggregate child entity)
        , IndicatorDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, IndicatorDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IndicatorDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.EducationOrganizationIndicator source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationIndicator target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.IndicatorDescriptorId)
            )
            AND target.IndicatorDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.IndicatorDescriptorId)
            )
    )


        MERGE edfi.EducationOrganizationIndicator_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationIndicator AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.IndicatorDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.IndicatorDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IndicatorDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DesignatedBy = source.DesignatedBy
            , target.IndicatorValue = source.IndicatorValue
                -- References
            , target.IndicatorGroupDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IndicatorGroupDescriptorId)
                )
            , target.IndicatorLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IndicatorLevelDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , IndicatorDescriptorHashKey
                -- Attributes
                , DesignatedBy
                , IndicatorValue
                -- References
                , IndicatorGroupDescriptorHashKey
                , IndicatorLevelDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.IndicatorDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IndicatorDescriptorId)
                )
                -- Attributes
                , DesignatedBy
                , IndicatorValue
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IndicatorGroupDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IndicatorLevelDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.EducationOrganizationIndicatorPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , BeginDate
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, IndicatorDescriptorId)
        )
            , BeginDate
    FROM EdFi_Ods_2021.edfi.EducationOrganizationIndicatorPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationIndicatorPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.IndicatorDescriptorId)
            )
            AND target.BeginDate = source.BeginDate
    )


        MERGE edfi.EducationOrganizationIndicatorPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationIndicatorPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.IndicatorDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.BeginDate = source.BeginDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.IndicatorDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.EducationOrganizationInstitutionTelephone (
        HashKey
        -- Identifying references (for aggregate child entity)
        , InstitutionTelephoneNumberTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, InstitutionTelephoneNumberTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, InstitutionTelephoneNumberTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.EducationOrganizationInstitutionTelephone source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationInstitutionTelephone target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.InstitutionTelephoneNumberTypeDescriptorId)
            )
            AND target.InstitutionTelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.InstitutionTelephoneNumberTypeDescriptorId)
            )
    )


        MERGE edfi.EducationOrganizationInstitutionTelephone_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationInstitutionTelephone AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.InstitutionTelephoneNumberTypeDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.InstitutionTelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.InstitutionTelephoneNumberTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.TelephoneNumber = source.TelephoneNumber
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , InstitutionTelephoneNumberTypeDescriptorHashKey
                -- Attributes
                , TelephoneNumber
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.InstitutionTelephoneNumberTypeDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InstitutionTelephoneNumberTypeDescriptorId)
                )
                -- Attributes
                , TelephoneNumber
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.EducationOrganizationInternationalAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AddressTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.EducationOrganizationInternationalAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationInternationalAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
    )


        MERGE edfi.EducationOrganizationInternationalAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationInternationalAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AddressLine1 = source.AddressLine1
            , target.AddressLine2 = source.AddressLine2
            , target.AddressLine3 = source.AddressLine3
            , target.AddressLine4 = source.AddressLine4
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
                -- References
            , target.CountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AddressTypeDescriptorHashKey
                -- Attributes
                , AddressLine1
                , AddressLine2
                , AddressLine3
                , AddressLine4
                , BeginDate
                , EndDate
                , Latitude
                , Longitude
                -- References
                , CountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                -- Attributes
                , AddressLine1
                , AddressLine2
                , AddressLine3
                , AddressLine4
                , BeginDate
                , EndDate
                , Latitude
                , Longitude
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.EducationOrganizationCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , EducationOrganizationCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationCategoryDescriptorId)
        )
        , EducationOrganizationCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.EducationOrganizationCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.EducationOrganizationIdentificationSystemDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , EducationOrganizationIdentificationSystemDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationIdentificationSystemDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationIdentificationSystemDescriptorId)
        )
        , EducationOrganizationIdentificationSystemDescriptorId
    FROM EdFi_Ods_2021.edfi.EducationOrganizationIdentificationSystemDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationIdentificationSystemDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationIdentificationSystemDescriptorId)
            )
    )

    
    INSERT INTO edfi.EducationOrganizationInterventionPrescriptionAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , InterventionPrescriptionHashKey
        -- Primary key columns
        , EducationOrganizationId
                , InterventionPrescriptionEducationOrganizationId
                , InterventionPrescriptionIdentificationCode
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, InterventionPrescriptionEducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, InterventionPrescriptionEducationOrganizationId)
            + '|' + InterventionPrescriptionIdentificationCode
        )
        , EducationOrganizationId
        , InterventionPrescriptionEducationOrganizationId
        , InterventionPrescriptionIdentificationCode
    FROM EdFi_Ods_2021.edfi.EducationOrganizationInterventionPrescriptionAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationInterventionPrescriptionAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.InterventionPrescriptionEducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            )
    )

        MERGE edfi.EducationOrganizationInterventionPrescriptionAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationInterventionPrescriptionAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.InterventionPrescriptionEducationOrganizationId)
        + '|' + source.InterventionPrescriptionIdentificationCode
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.InterventionPrescriptionEducationOrganizationId)
                + '|' + source.InterventionPrescriptionIdentificationCode
                )
                , @schoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.EducationOrganizationNetwork (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , EducationOrganizationNetworkId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationNetworkId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationNetworkId)
        )
        , EducationOrganizationNetworkId
    FROM EdFi_Ods_2021.edfi.EducationOrganizationNetwork source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationNetwork target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationNetworkId)
            )
    )

        MERGE edfi.EducationOrganizationNetwork_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationNetwork AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationNetworkId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- References
            target.NetworkPurposeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.NetworkPurposeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , NetworkPurposeDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationNetworkId)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.NetworkPurposeDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.EducationOrganizationNetworkAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , MemberEducationOrganizationHashKey
        , EducationOrganizationNetworkHashKey
        -- Primary key columns
        , EducationOrganizationNetworkId
                , MemberEducationOrganizationId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationNetworkId)
                    + '|' + CONVERT(nvarchar, MemberEducationOrganizationId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, MemberEducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationNetworkId)
        )
        , EducationOrganizationNetworkId
        , MemberEducationOrganizationId
    FROM EdFi_Ods_2021.edfi.EducationOrganizationNetworkAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationNetworkAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationNetworkId)
            + '|' + CONVERT(nvarchar, source.MemberEducationOrganizationId)
            )
    )

        MERGE edfi.EducationOrganizationNetworkAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationOrganizationNetworkAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationNetworkId)
        + '|' + CONVERT(nvarchar, source.MemberEducationOrganizationId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationNetworkId)
                + '|' + CONVERT(nvarchar, source.MemberEducationOrganizationId)
                )
                , @schoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.EducationOrganizationPeerAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , PeerEducationOrganizationHashKey
        -- Primary key columns
        , EducationOrganizationId
                , PeerEducationOrganizationId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, PeerEducationOrganizationId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PeerEducationOrganizationId)
        )
        , EducationOrganizationId
        , PeerEducationOrganizationId
    FROM EdFi_Ods_2021.edfi.EducationOrganizationPeerAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationOrganizationPeerAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.PeerEducationOrganizationId)
            )
    )

    
    INSERT INTO edfi.EducationPlanDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , EducationPlanDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationPlanDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationPlanDescriptorId)
        )
        , EducationPlanDescriptorId
    FROM EdFi_Ods_2021.edfi.EducationPlanDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationPlanDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationPlanDescriptorId)
            )
    )

    
    INSERT INTO edfi.EducationServiceCenter (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , EducationServiceCenterId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationServiceCenterId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationServiceCenterId)
        )
        , EducationServiceCenterId
    FROM EdFi_Ods_2021.edfi.EducationServiceCenter source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EducationServiceCenter target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationServiceCenterId)
            )
    )

        MERGE edfi.EducationServiceCenter_Attributes AS target
        USING EdFi_Ods_2021.edfi.EducationServiceCenter AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationServiceCenterId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- References
            target.StateEducationAgencyHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateEducationAgencyId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , StateEducationAgencyHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationServiceCenterId)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateEducationAgencyId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.ElectronicMailTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ElectronicMailTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ElectronicMailTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ElectronicMailTypeDescriptorId)
        )
        , ElectronicMailTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.ElectronicMailTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ElectronicMailTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.EmploymentStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , EmploymentStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EmploymentStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EmploymentStatusDescriptorId)
        )
        , EmploymentStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.EmploymentStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EmploymentStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EmploymentStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.EntryGradeLevelReasonDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , EntryGradeLevelReasonDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EntryGradeLevelReasonDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EntryGradeLevelReasonDescriptorId)
        )
        , EntryGradeLevelReasonDescriptorId
    FROM EdFi_Ods_2021.edfi.EntryGradeLevelReasonDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EntryGradeLevelReasonDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EntryGradeLevelReasonDescriptorId)
            )
    )

    
    INSERT INTO edfi.EntryTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , EntryTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EntryTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EntryTypeDescriptorId)
        )
        , EntryTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.EntryTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EntryTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EntryTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.EventCircumstanceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , EventCircumstanceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EventCircumstanceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EventCircumstanceDescriptorId)
        )
        , EventCircumstanceDescriptorId
    FROM EdFi_Ods_2021.edfi.EventCircumstanceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.EventCircumstanceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EventCircumstanceDescriptorId)
            )
    )

    
    INSERT INTO edfi.ExitWithdrawTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ExitWithdrawTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ExitWithdrawTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ExitWithdrawTypeDescriptorId)
        )
        , ExitWithdrawTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.ExitWithdrawTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ExitWithdrawTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ExitWithdrawTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.FeederSchoolAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , FeederSchoolHashKey
        , SchoolHashKey
        -- Primary key columns
        , BeginDate
                , FeederSchoolId
                , SchoolId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, FeederSchoolId)
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, FeederSchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , BeginDate
        , FeederSchoolId
        , SchoolId
    FROM EdFi_Ods_2021.edfi.FeederSchoolAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.FeederSchoolAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.FeederSchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
    )

        MERGE edfi.FeederSchoolAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.FeederSchoolAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.FeederSchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
            , target.FeederRelationshipDescription = source.FeederRelationshipDescription
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                , FeederRelationshipDescription
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.FeederSchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolId)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                , FeederRelationshipDescription
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.GeneralStudentProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , ProgramHashKey
        , StudentHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.GeneralStudentProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GeneralStudentProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.GeneralStudentProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.GeneralStudentProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
            , target.ServedOutsideOfRegularSession = source.ServedOutsideOfRegularSession
                -- References
            , target.ReasonExitedDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ReasonExitedDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                , ServedOutsideOfRegularSession
                -- References
                , ReasonExitedDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                , ServedOutsideOfRegularSession
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ReasonExitedDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.GeneralStudentProgramAssociationParticipationStatus (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.GeneralStudentProgramAssociationParticipationStatus source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GeneralStudentProgramAssociationParticipationStatus target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )


        MERGE edfi.GeneralStudentProgramAssociationParticipationStatus_Attributes AS target
        USING EdFi_Ods_2021.edfi.GeneralStudentProgramAssociationParticipationStatus AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DesignatedBy = source.DesignatedBy
            , target.StatusBeginDate = source.StatusBeginDate
            , target.StatusEndDate = source.StatusEndDate
                -- References
            , target.ParticipationStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParticipationStatusDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Attributes
                , DesignatedBy
                , StatusBeginDate
                , StatusEndDate
                -- References
                , ParticipationStatusDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                -- Attributes
                , DesignatedBy
                , StatusBeginDate
                , StatusEndDate
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParticipationStatusDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.Grade (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GradeTypeDescriptorHashKey
        , GradingPeriodHashKey
        , StudentSectionAssociationHashKey
        -- Primary key columns
        , BeginDate
                , GradeTypeDescriptorId
                , GradingPeriodDescriptorId
                , GradingPeriodSchoolYear
                , GradingPeriodSequence
                , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, GradeTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodSequence)
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , GradeTypeDescriptorId
        , GradingPeriodDescriptorId
        , GradingPeriodSchoolYear
        , GradingPeriodSequence
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.Grade source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Grade target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.GradeTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.Grade_Attributes AS target
        USING EdFi_Ods_2021.edfi.Grade AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.GradeTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
        + '|' + source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.DiagnosticStatement = source.DiagnosticStatement
            , target.LetterGradeEarned = source.LetterGradeEarned
            , target.NumericGradeEarned = source.NumericGradeEarned
                -- References
            , target.PerformanceBaseConversionDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceBaseConversionDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , DiagnosticStatement
                , LetterGradeEarned
                , NumericGradeEarned
                -- References
                , PerformanceBaseConversionDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.GradeTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , DiagnosticStatement
                , LetterGradeEarned
                , NumericGradeEarned
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceBaseConversionDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.GradeLearningStandardGrade (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningStandardHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, GradeTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + LearningStandardId
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            LearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.GradeLearningStandardGrade source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradeLearningStandardGrade target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.GradeTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.LearningStandardId
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.LearningStandardHashKey = HASHBYTES('sha1',
                source.LearningStandardId
            )
    )


        MERGE edfi.GradeLearningStandardGrade_Attributes AS target
        USING EdFi_Ods_2021.edfi.GradeLearningStandardGrade AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.GradeTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
        + '|' + source.LearningStandardId
        + '|' + source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.LearningStandardHashKey = HASHBYTES('sha1',
            source.LearningStandardId
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DiagnosticStatement = source.DiagnosticStatement
            , target.LetterGradeEarned = source.LetterGradeEarned
            , target.NumericGradeEarned = source.NumericGradeEarned
                -- References
            , target.PerformanceBaseConversionDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceBaseConversionDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , LearningStandardHashKey
                -- Attributes
                , DiagnosticStatement
                , LetterGradeEarned
                , NumericGradeEarned
                -- References
                , PerformanceBaseConversionDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.GradeTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + source.LearningStandardId
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                source.LearningStandardId
                )
                -- Attributes
                , DiagnosticStatement
                , LetterGradeEarned
                , NumericGradeEarned
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceBaseConversionDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.GradebookEntry (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SectionHashKey
        -- Primary key columns
        , DateAssigned
                , GradebookEntryTitle
                , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DateAssigned, 23)
                    + '|' + GradebookEntryTitle
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
        , DateAssigned
        , GradebookEntryTitle
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
    FROM EdFi_Ods_2021.edfi.GradebookEntry source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradebookEntry target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DateAssigned, 23)
            + '|' + source.GradebookEntryTitle
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
    )

        MERGE edfi.GradebookEntry_Attributes AS target
        USING EdFi_Ods_2021.edfi.GradebookEntry AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.DateAssigned, 23)
        + '|' + source.GradebookEntryTitle
        + '|' + source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.Description = source.Description
            , target.DueDate = source.DueDate
                -- References
            , target.GradebookEntryTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradebookEntryTypeDescriptorId)
                )
            , target.GradingPeriodHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.PeriodSequence)
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Description
                , DueDate
                -- References
                , GradebookEntryTypeDescriptorHashKey
                , GradingPeriodHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DateAssigned, 23)
                + '|' + source.GradebookEntryTitle
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                )
                , @schoolYearContext
                -- Attributes
                , Description
                , DueDate
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradebookEntryTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.PeriodSequence)
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.GradebookEntryLearningObjective (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningObjectiveHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DateAssigned, 23)
                    + '|' + GradebookEntryTitle
                    + '|' + LearningObjectiveId
                    + '|' + LocalCourseCode
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            LearningObjectiveId
            + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.GradebookEntryLearningObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradebookEntryLearningObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DateAssigned, 23)
            + '|' + source.GradebookEntryTitle
            + '|' + source.LearningObjectiveId
            + '|' + source.LocalCourseCode
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
            AND target.LearningObjectiveHashKey = HASHBYTES('sha1',
                source.LearningObjectiveId
                + '|' + source.Namespace
            )
    )

    INSERT INTO edfi.GradebookEntryLearningStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningStandardHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DateAssigned, 23)
                    + '|' + GradebookEntryTitle
                    + '|' + LearningStandardId
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            LearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.GradebookEntryLearningStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradebookEntryLearningStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DateAssigned, 23)
            + '|' + source.GradebookEntryTitle
            + '|' + source.LearningStandardId
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
            AND target.LearningStandardHashKey = HASHBYTES('sha1',
                source.LearningStandardId
            )
    )

    INSERT INTO edfi.GradebookEntryTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , GradebookEntryTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradebookEntryTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradebookEntryTypeDescriptorId)
        )
        , GradebookEntryTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.GradebookEntryTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradebookEntryTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradebookEntryTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.GradeLevelDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , GradeLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
        , GradeLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.GradeLevelDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradeLevelDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    
    INSERT INTO edfi.GradePointAverageTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , GradePointAverageTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradePointAverageTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradePointAverageTypeDescriptorId)
        )
        , GradePointAverageTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.GradePointAverageTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradePointAverageTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.GradeTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , GradeTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeTypeDescriptorId)
        )
        , GradeTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.GradeTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradeTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.GradingPeriod (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GradingPeriodDescriptorHashKey
        , SchoolHashKey
        , SchoolYearTypeHashKey
        -- Primary key columns
        , GradingPeriodDescriptorId
                , PeriodSequence
                , SchoolId
                , SchoolYear
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, PeriodSequence)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
        , GradingPeriodDescriptorId
        , PeriodSequence
        , SchoolId
        , SchoolYear
    FROM EdFi_Ods_2021.edfi.GradingPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradingPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.PeriodSequence)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
    )

        MERGE edfi.GradingPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.GradingPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.GradingPeriodDescriptorId)
        + '|' + CONVERT(nvarchar, source.PeriodSequence)
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.TotalInstructionalDays = source.TotalInstructionalDays
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , TotalInstructionalDays
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.PeriodSequence)
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
                , @schoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , TotalInstructionalDays
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.GradingPeriodDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , GradingPeriodDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
        )
        , GradingPeriodDescriptorId
    FROM EdFi_Ods_2021.edfi.GradingPeriodDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GradingPeriodDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            )
    )

    
    INSERT INTO edfi.GraduationPlan (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , GraduationPlanTypeDescriptorHashKey
        , GraduationSchoolYearTypeHashKey
        -- Primary key columns
        , EducationOrganizationId
                , GraduationPlanTypeDescriptorId
                , GraduationSchoolYear
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GraduationSchoolYear)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GraduationSchoolYear)
        )
        , EducationOrganizationId
        , GraduationPlanTypeDescriptorId
        , GraduationSchoolYear
    FROM EdFi_Ods_2021.edfi.GraduationPlan source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlan target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
    )

        MERGE edfi.GraduationPlan_Attributes AS target
        USING EdFi_Ods_2021.edfi.GraduationPlan AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.IndividualPlan = source.IndividualPlan
            , target.TotalRequiredCreditConversion = source.TotalRequiredCreditConversion
            , target.TotalRequiredCredits = source.TotalRequiredCredits
                -- References
            , target.TotalRequiredCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TotalRequiredCreditTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , IndividualPlan
                , TotalRequiredCreditConversion
                , TotalRequiredCredits
                -- References
                , TotalRequiredCreditTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
                )
                , @schoolYearContext
                -- Attributes
                , IndividualPlan
                , TotalRequiredCreditConversion
                , TotalRequiredCredits
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TotalRequiredCreditTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.GraduationPlanCreditsByCourse (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , CourseSetName
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GraduationSchoolYear)
        )
            , CourseSetName
    FROM EdFi_Ods_2021.edfi.GraduationPlanCreditsByCourse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlanCreditsByCourse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
            AND target.CourseSetName = source.CourseSetName
    )


        MERGE edfi.GraduationPlanCreditsByCourse_Attributes AS target
        USING EdFi_Ods_2021.edfi.GraduationPlanCreditsByCourse AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.CourseSetName = source.CourseSetName
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.CreditConversion = source.CreditConversion
            , target.Credits = source.Credits
                -- References
            , target.CreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CreditTypeDescriptorId)
                )
            , target.WhenTakenGradeLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.WhenTakenGradeLevelDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , CourseSetName
                -- Attributes
                , CreditConversion
                , Credits
                -- References
                , CreditTypeDescriptorHashKey
                , WhenTakenGradeLevelDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , CourseSetName
                -- Attributes
                , CreditConversion
                , Credits
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CreditTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.WhenTakenGradeLevelDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.GraduationPlanCreditsByCourseCourse (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CourseHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CourseCode
                    + '|' + CONVERT(nvarchar, CourseEducationOrganizationId)
                    + '|' + CourseSetName
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GraduationSchoolYear)
        )
        , HASHBYTES('sha1', 
            CourseCode
            + '|' + CONVERT(nvarchar, CourseEducationOrganizationId)
        )
    FROM EdFi_Ods_2021.edfi.GraduationPlanCreditsByCourseCourse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlanCreditsByCourseCourse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CourseCode
            + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
            + '|' + source.CourseSetName
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
            AND target.CourseHashKey = HASHBYTES('sha1',
                source.CourseCode
                + '|' + CONVERT(nvarchar, source.CourseEducationOrganizationId)
            )
    )

    INSERT INTO edfi.GraduationPlanCreditsByCreditCategory (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CreditCategoryDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CreditCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GraduationSchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CreditCategoryDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.GraduationPlanCreditsByCreditCategory source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlanCreditsByCreditCategory target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CreditCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
            AND target.CreditCategoryDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CreditCategoryDescriptorId)
            )
    )


        MERGE edfi.GraduationPlanCreditsByCreditCategory_Attributes AS target
        USING EdFi_Ods_2021.edfi.GraduationPlanCreditsByCreditCategory AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.CreditCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.CreditCategoryDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CreditCategoryDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.CreditConversion = source.CreditConversion
            , target.Credits = source.Credits
                -- References
            , target.CreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CreditTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , CreditCategoryDescriptorHashKey
                -- Attributes
                , CreditConversion
                , Credits
                -- References
                , CreditTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CreditCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CreditCategoryDescriptorId)
                )
                -- Attributes
                , CreditConversion
                , Credits
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CreditTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.GraduationPlanCreditsBySubject (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicSubjectDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GraduationSchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.GraduationPlanCreditsBySubject source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlanCreditsBySubject target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )


        MERGE edfi.GraduationPlanCreditsBySubject_Attributes AS target
        USING EdFi_Ods_2021.edfi.GraduationPlanCreditsBySubject AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.CreditConversion = source.CreditConversion
            , target.Credits = source.Credits
                -- References
            , target.CreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CreditTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AcademicSubjectDescriptorHashKey
                -- Attributes
                , CreditConversion
                , Credits
                -- References
                , CreditTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
                )
                -- Attributes
                , CreditConversion
                , Credits
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CreditTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.GraduationPlanRequiredAssessment (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GraduationSchoolYear)
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            AssessmentIdentifier
            + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.GraduationPlanRequiredAssessment source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlanRequiredAssessment target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            + '|' + source.Namespace
            )
            AND target.AssessmentHashKey = HASHBYTES('sha1',
                source.AssessmentIdentifier
                + '|' + source.Namespace
            )
    )

    INSERT INTO edfi.GraduationPlanRequiredAssessmentPerformanceLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GraduationSchoolYear)
                    + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.GraduationPlanRequiredAssessmentPerformanceLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlanRequiredAssessmentPerformanceLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            + '|' + source.Namespace
            )
    )


        MERGE edfi.GraduationPlanRequiredAssessmentPerformanceLevel_Attributes AS target
        USING EdFi_Ods_2021.edfi.GraduationPlanRequiredAssessmentPerformanceLevel AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.MaximumScore = source.MaximumScore
            , target.MinimumScore = source.MinimumScore
                -- References
            , target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
            , target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                )
            , target.ResultDatatypeTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , AssessmentReportingMethodDescriptorHashKey
                , PerformanceLevelDescriptorHashKey
                , ResultDatatypeTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.GraduationPlanRequiredAssessmentScore (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GraduationSchoolYear)
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.GraduationPlanRequiredAssessmentScore source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlanRequiredAssessmentScore target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
            + '|' + source.Namespace
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
    )


        MERGE edfi.GraduationPlanRequiredAssessmentScore_Attributes AS target
        USING EdFi_Ods_2021.edfi.GraduationPlanRequiredAssessmentScore AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.MaximumScore = source.MaximumScore
            , target.MinimumScore = source.MinimumScore
                -- References
            , target.ResultDatatypeTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , ResultDatatypeTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.GraduationPlanTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , GraduationPlanTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GraduationPlanTypeDescriptorId)
        )
        , GraduationPlanTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.GraduationPlanTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GraduationPlanTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.GunFreeSchoolsActReportingStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , GunFreeSchoolsActReportingStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GunFreeSchoolsActReportingStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GunFreeSchoolsActReportingStatusDescriptorId)
        )
        , GunFreeSchoolsActReportingStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.GunFreeSchoolsActReportingStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.GunFreeSchoolsActReportingStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GunFreeSchoolsActReportingStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.HomelessPrimaryNighttimeResidenceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , HomelessPrimaryNighttimeResidenceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, HomelessPrimaryNighttimeResidenceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, HomelessPrimaryNighttimeResidenceDescriptorId)
        )
        , HomelessPrimaryNighttimeResidenceDescriptorId
    FROM EdFi_Ods_2021.edfi.HomelessPrimaryNighttimeResidenceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.HomelessPrimaryNighttimeResidenceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.HomelessPrimaryNighttimeResidenceDescriptorId)
            )
    )

    
    INSERT INTO edfi.HomelessProgramServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , HomelessProgramServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, HomelessProgramServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, HomelessProgramServiceDescriptorId)
        )
        , HomelessProgramServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.HomelessProgramServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.HomelessProgramServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.HomelessProgramServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.IdentificationDocumentUseDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , IdentificationDocumentUseDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
        )
        , IdentificationDocumentUseDescriptorId
    FROM EdFi_Ods_2021.edfi.IdentificationDocumentUseDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.IdentificationDocumentUseDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
    )

    
    INSERT INTO edfi.IncidentLocationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , IncidentLocationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IncidentLocationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IncidentLocationDescriptorId)
        )
        , IncidentLocationDescriptorId
    FROM EdFi_Ods_2021.edfi.IncidentLocationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.IncidentLocationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IncidentLocationDescriptorId)
            )
    )

    
    INSERT INTO edfi.IndicatorDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , IndicatorDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IndicatorDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IndicatorDescriptorId)
        )
        , IndicatorDescriptorId
    FROM EdFi_Ods_2021.edfi.IndicatorDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.IndicatorDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IndicatorDescriptorId)
            )
    )

    
    INSERT INTO edfi.IndicatorGroupDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , IndicatorGroupDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IndicatorGroupDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IndicatorGroupDescriptorId)
        )
        , IndicatorGroupDescriptorId
    FROM EdFi_Ods_2021.edfi.IndicatorGroupDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.IndicatorGroupDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IndicatorGroupDescriptorId)
            )
    )

    
    INSERT INTO edfi.IndicatorLevelDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , IndicatorLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IndicatorLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IndicatorLevelDescriptorId)
        )
        , IndicatorLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.IndicatorLevelDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.IndicatorLevelDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IndicatorLevelDescriptorId)
            )
    )

    
    INSERT INTO edfi.InstitutionTelephoneNumberTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , InstitutionTelephoneNumberTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, InstitutionTelephoneNumberTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, InstitutionTelephoneNumberTypeDescriptorId)
        )
        , InstitutionTelephoneNumberTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.InstitutionTelephoneNumberTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InstitutionTelephoneNumberTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.InstitutionTelephoneNumberTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.InteractivityStyleDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , InteractivityStyleDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, InteractivityStyleDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, InteractivityStyleDescriptorId)
        )
        , InteractivityStyleDescriptorId
    FROM EdFi_Ods_2021.edfi.InteractivityStyleDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InteractivityStyleDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.InteractivityStyleDescriptorId)
            )
    )

    
    INSERT INTO edfi.InternetAccessDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , InternetAccessDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, InternetAccessDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, InternetAccessDescriptorId)
        )
        , InternetAccessDescriptorId
    FROM EdFi_Ods_2021.edfi.InternetAccessDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InternetAccessDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.InternetAccessDescriptorId)
            )
    )

    
    INSERT INTO edfi.Intervention (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , EducationOrganizationId
                , InterventionIdentificationCode
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , EducationOrganizationId
        , InterventionIdentificationCode
    FROM EdFi_Ods_2021.edfi.Intervention source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Intervention target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            )
    )

        MERGE edfi.Intervention_Attributes AS target
        USING EdFi_Ods_2021.edfi.Intervention AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.InterventionIdentificationCode
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.MaxDosage = source.MaxDosage
            , target.MinDosage = source.MinDosage
                -- References
            , target.DeliveryMethodDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DeliveryMethodDescriptorId)
                )
            , target.InterventionClassDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionClassDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , MaxDosage
                , MinDosage
                -- References
                , DeliveryMethodDescriptorHashKey
                , InterventionClassDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.InterventionIdentificationCode
                )
                , @schoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , MaxDosage
                , MinDosage
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DeliveryMethodDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionClassDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.InterventionAppropriateGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + InterventionIdentificationCode
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionAppropriateGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionAppropriateGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.InterventionIdentificationCode
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionAppropriateSex (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SexDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
                    + '|' + CONVERT(nvarchar, SexDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SexDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionAppropriateSex source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionAppropriateSex target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            + '|' + CONVERT(nvarchar, source.SexDescriptorId)
            )
            AND target.SexDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SexDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionDiagnosis (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DiagnosisDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionDiagnosis source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionDiagnosis target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiagnosisDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            )
            AND target.DiagnosisDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DiagnosisDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionEducationContent (
        HashKey
        -- Identifying references (for aggregate child entity)
        , EducationContentHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
        )
        , HASHBYTES('sha1', 
            ContentIdentifier
        )
    FROM EdFi_Ods_2021.edfi.InterventionEducationContent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionEducationContent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            )
            AND target.EducationContentHashKey = HASHBYTES('sha1',
                source.ContentIdentifier
            )
    )

    INSERT INTO edfi.InterventionInterventionPrescription (
        HashKey
        -- Identifying references (for aggregate child entity)
        , InterventionPrescriptionHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
                    + '|' + CONVERT(nvarchar, InterventionPrescriptionEducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, InterventionPrescriptionEducationOrganizationId)
            + '|' + InterventionPrescriptionIdentificationCode
        )
    FROM EdFi_Ods_2021.edfi.InterventionInterventionPrescription source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionInterventionPrescription target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            + '|' + CONVERT(nvarchar, source.InterventionPrescriptionEducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            )
            AND target.InterventionPrescriptionHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.InterventionPrescriptionEducationOrganizationId)
                + '|' + source.InterventionPrescriptionIdentificationCode
            )
    )

    INSERT INTO edfi.InterventionLearningResourceMetadataURI (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , LearningResourceMetadataURI
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
        )
            , LearningResourceMetadataURI
    FROM EdFi_Ods_2021.edfi.InterventionLearningResourceMetadataURI source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionLearningResourceMetadataURI target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            )
            AND target.LearningResourceMetadataURI = source.LearningResourceMetadataURI
    )

    INSERT INTO edfi.InterventionMeetingTime (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , EndTime
        , StartTime
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
        )
            , EndTime
            , StartTime
    FROM EdFi_Ods_2021.edfi.InterventionMeetingTime source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionMeetingTime target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            )
            AND target.EndTime = source.EndTime
            AND target.StartTime = source.StartTime
            AND target.EndTime = source.EndTime
            AND target.StartTime = source.StartTime
    )

    INSERT INTO edfi.InterventionPopulationServed (
        HashKey
        -- Identifying references (for aggregate child entity)
        , PopulationServedDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
                    + '|' + CONVERT(nvarchar, PopulationServedDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PopulationServedDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionPopulationServed source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPopulationServed target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
            AND target.PopulationServedDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionStaff (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StaffHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
    FROM EdFi_Ods_2021.edfi.InterventionStaff source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStaff target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.StaffHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StaffUSI)
            )
    )

    INSERT INTO edfi.InterventionURI (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , URI
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
        )
            , URI
    FROM EdFi_Ods_2021.edfi.InterventionURI source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionURI target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            )
            AND target.URI = source.URI
    )

    INSERT INTO edfi.InterventionClassDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , InterventionClassDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, InterventionClassDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, InterventionClassDescriptorId)
        )
        , InterventionClassDescriptorId
    FROM EdFi_Ods_2021.edfi.InterventionClassDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionClassDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.InterventionClassDescriptorId)
            )
    )

    
    INSERT INTO edfi.InterventionEffectivenessRatingDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , InterventionEffectivenessRatingDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, InterventionEffectivenessRatingDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, InterventionEffectivenessRatingDescriptorId)
        )
        , InterventionEffectivenessRatingDescriptorId
    FROM EdFi_Ods_2021.edfi.InterventionEffectivenessRatingDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionEffectivenessRatingDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.InterventionEffectivenessRatingDescriptorId)
            )
    )

    
    INSERT INTO edfi.InterventionPrescription (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , EducationOrganizationId
                , InterventionPrescriptionIdentificationCode
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , EducationOrganizationId
        , InterventionPrescriptionIdentificationCode
    FROM EdFi_Ods_2021.edfi.InterventionPrescription source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPrescription target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            )
    )

        MERGE edfi.InterventionPrescription_Attributes AS target
        USING EdFi_Ods_2021.edfi.InterventionPrescription AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.InterventionPrescriptionIdentificationCode
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.MaxDosage = source.MaxDosage
            , target.MinDosage = source.MinDosage
                -- References
            , target.DeliveryMethodDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DeliveryMethodDescriptorId)
                )
            , target.InterventionClassDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionClassDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , MaxDosage
                , MinDosage
                -- References
                , DeliveryMethodDescriptorHashKey
                , InterventionClassDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.InterventionPrescriptionIdentificationCode
                )
                , @schoolYearContext
                -- Attributes
                , MaxDosage
                , MinDosage
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DeliveryMethodDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionClassDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.InterventionPrescriptionAppropriateGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + InterventionPrescriptionIdentificationCode
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionPrescriptionAppropriateGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPrescriptionAppropriateGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionPrescriptionAppropriateSex (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SexDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
                    + '|' + CONVERT(nvarchar, SexDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SexDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionPrescriptionAppropriateSex source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPrescriptionAppropriateSex target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            + '|' + CONVERT(nvarchar, source.SexDescriptorId)
            )
            AND target.SexDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SexDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionPrescriptionDiagnosis (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DiagnosisDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionPrescriptionDiagnosis source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPrescriptionDiagnosis target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiagnosisDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            )
            AND target.DiagnosisDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DiagnosisDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionPrescriptionEducationContent (
        HashKey
        -- Identifying references (for aggregate child entity)
        , EducationContentHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
        )
        , HASHBYTES('sha1', 
            ContentIdentifier
        )
    FROM EdFi_Ods_2021.edfi.InterventionPrescriptionEducationContent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPrescriptionEducationContent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            )
            AND target.EducationContentHashKey = HASHBYTES('sha1',
                source.ContentIdentifier
            )
    )

    INSERT INTO edfi.InterventionPrescriptionLearningResourceMetadataURI (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , LearningResourceMetadataURI
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
        )
            , LearningResourceMetadataURI
    FROM EdFi_Ods_2021.edfi.InterventionPrescriptionLearningResourceMetadataURI source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPrescriptionLearningResourceMetadataURI target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            )
            AND target.LearningResourceMetadataURI = source.LearningResourceMetadataURI
    )

    INSERT INTO edfi.InterventionPrescriptionPopulationServed (
        HashKey
        -- Identifying references (for aggregate child entity)
        , PopulationServedDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
                    + '|' + CONVERT(nvarchar, PopulationServedDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PopulationServedDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionPrescriptionPopulationServed source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPrescriptionPopulationServed target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
            AND target.PopulationServedDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionPrescriptionURI (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , URI
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionPrescriptionIdentificationCode
        )
            , URI
    FROM EdFi_Ods_2021.edfi.InterventionPrescriptionURI source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionPrescriptionURI target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionPrescriptionIdentificationCode
            )
            AND target.URI = source.URI
    )

    INSERT INTO edfi.InterventionStudy (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , EducationOrganizationId
                , InterventionStudyIdentificationCode
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionStudyIdentificationCode
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , EducationOrganizationId
        , InterventionStudyIdentificationCode
    FROM EdFi_Ods_2021.edfi.InterventionStudy source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudy target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionStudyIdentificationCode
            )
    )

        MERGE edfi.InterventionStudy_Attributes AS target
        USING EdFi_Ods_2021.edfi.InterventionStudy AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.InterventionStudyIdentificationCode
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.Participants = source.Participants
                -- References
            , target.DeliveryMethodDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DeliveryMethodDescriptorId)
                )
            , target.InterventionClassDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionClassDescriptorId)
                )
            , target.InterventionPrescriptionHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionPrescriptionEducationOrganizationId)
                + '|' + source.InterventionPrescriptionIdentificationCode
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Participants
                -- References
                , DeliveryMethodDescriptorHashKey
                , InterventionClassDescriptorHashKey
                , InterventionPrescriptionHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.InterventionStudyIdentificationCode
                )
                , @schoolYearContext
                -- Attributes
                , Participants
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DeliveryMethodDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionClassDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionPrescriptionEducationOrganizationId)
                + '|' + source.InterventionPrescriptionIdentificationCode
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.InterventionStudyAppropriateGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + InterventionStudyIdentificationCode
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionStudyAppropriateGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudyAppropriateGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.InterventionStudyIdentificationCode
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionStudyAppropriateSex (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SexDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionStudyIdentificationCode
                    + '|' + CONVERT(nvarchar, SexDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SexDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionStudyAppropriateSex source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudyAppropriateSex target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionStudyIdentificationCode
            + '|' + CONVERT(nvarchar, source.SexDescriptorId)
            )
            AND target.SexDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SexDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionStudyEducationContent (
        HashKey
        -- Identifying references (for aggregate child entity)
        , EducationContentHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            ContentIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionStudyIdentificationCode
        )
        , HASHBYTES('sha1', 
            ContentIdentifier
        )
    FROM EdFi_Ods_2021.edfi.InterventionStudyEducationContent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudyEducationContent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContentIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionStudyIdentificationCode
            )
            AND target.EducationContentHashKey = HASHBYTES('sha1',
                source.ContentIdentifier
            )
    )

    INSERT INTO edfi.InterventionStudyInterventionEffectiveness (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DiagnosisDescriptorHashKey
        , GradeLevelDescriptorHashKey
        , PopulationServedDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + InterventionStudyIdentificationCode
                    + '|' + CONVERT(nvarchar, PopulationServedDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PopulationServedDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionStudyInterventionEffectiveness source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudyInterventionEffectiveness target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiagnosisDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.InterventionStudyIdentificationCode
            + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
            AND target.DiagnosisDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DiagnosisDescriptorId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
            AND target.PopulationServedDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
    )


        MERGE edfi.InterventionStudyInterventionEffectiveness_Attributes AS target
        USING EdFi_Ods_2021.edfi.InterventionStudyInterventionEffectiveness AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.DiagnosisDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
        + '|' + source.InterventionStudyIdentificationCode
        + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.DiagnosisDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiagnosisDescriptorId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
            AND target.PopulationServedDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.ImprovementIndex = source.ImprovementIndex
                -- References
            , target.InterventionEffectivenessRatingDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionEffectivenessRatingDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , DiagnosisDescriptorHashKey
                , GradeLevelDescriptorHashKey
                , PopulationServedDescriptorHashKey
                -- Attributes
                , ImprovementIndex
                -- References
                , InterventionEffectivenessRatingDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DiagnosisDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
                + '|' + source.InterventionStudyIdentificationCode
                + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DiagnosisDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
                )
                -- Attributes
                , ImprovementIndex
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionEffectivenessRatingDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.InterventionStudyLearningResourceMetadataURI (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , LearningResourceMetadataURI
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionStudyIdentificationCode
        )
            , LearningResourceMetadataURI
    FROM EdFi_Ods_2021.edfi.InterventionStudyLearningResourceMetadataURI source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudyLearningResourceMetadataURI target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionStudyIdentificationCode
            )
            AND target.LearningResourceMetadataURI = source.LearningResourceMetadataURI
    )

    INSERT INTO edfi.InterventionStudyPopulationServed (
        HashKey
        -- Identifying references (for aggregate child entity)
        , PopulationServedDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionStudyIdentificationCode
                    + '|' + CONVERT(nvarchar, PopulationServedDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PopulationServedDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionStudyPopulationServed source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudyPopulationServed target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionStudyIdentificationCode
            + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
            AND target.PopulationServedDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionStudyStateAbbreviation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StateAbbreviationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionStudyIdentificationCode
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.InterventionStudyStateAbbreviation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudyStateAbbreviation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionStudyIdentificationCode
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
    )

    INSERT INTO edfi.InterventionStudyURI (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , URI
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionStudyIdentificationCode
        )
            , URI
    FROM EdFi_Ods_2021.edfi.InterventionStudyURI source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.InterventionStudyURI target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionStudyIdentificationCode
            )
            AND target.URI = source.URI
    )

    INSERT INTO edfi.LanguageDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LanguageDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
        )
        , LanguageDescriptorId
    FROM EdFi_Ods_2021.edfi.LanguageDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LanguageDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LanguageDescriptorId)
            )
    )

    
    INSERT INTO edfi.LanguageInstructionProgramServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LanguageInstructionProgramServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageInstructionProgramServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageInstructionProgramServiceDescriptorId)
        )
        , LanguageInstructionProgramServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.LanguageInstructionProgramServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LanguageInstructionProgramServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LanguageInstructionProgramServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.LanguageUseDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LanguageUseDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageUseDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageUseDescriptorId)
        )
        , LanguageUseDescriptorId
    FROM EdFi_Ods_2021.edfi.LanguageUseDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LanguageUseDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LanguageUseDescriptorId)
            )
    )

    
    INSERT INTO edfi.LearningObjective (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , LearningObjectiveId
                , Namespace
        )
    SELECT 
        HASHBYTES('sha1', 
            LearningObjectiveId
                    + '|' + Namespace
        )
        -- Identifying references
        , LearningObjectiveId
        , Namespace
    FROM EdFi_Ods_2021.edfi.LearningObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningObjectiveId
            + '|' + source.Namespace
            )
    )

        MERGE edfi.LearningObjective_Attributes AS target
        USING EdFi_Ods_2021.edfi.LearningObjective AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.LearningObjectiveId
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.Description = source.Description
            , target.Nomenclature = source.Nomenclature
            , target.Objective = source.Objective
            , target.SuccessCriteria = source.SuccessCriteria
                -- References
            , target.ParentLearningObjectiveHashKey = HASHBYTES('sha1', 
                source.ParentLearningObjectiveId
                + '|' + source.ParentNamespace
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Description
                , Nomenclature
                , Objective
                , SuccessCriteria
                -- References
                , ParentLearningObjectiveHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.LearningObjectiveId
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Attributes
                , Description
                , Nomenclature
                , Objective
                , SuccessCriteria
                -- References
                , HASHBYTES('sha1', 
                source.ParentLearningObjectiveId
                + '|' + source.ParentNamespace
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.LearningObjectiveAcademicSubject (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicSubjectDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
                    + '|' + LearningObjectiveId
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.LearningObjectiveAcademicSubject source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningObjectiveAcademicSubject target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            + '|' + source.LearningObjectiveId
            + '|' + source.Namespace
            )
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )

    INSERT INTO edfi.LearningObjectiveContentStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            LearningObjectiveId
                    + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.LearningObjectiveContentStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningObjectiveContentStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningObjectiveId
            + '|' + source.Namespace
            )
    )


        MERGE edfi.LearningObjectiveContentStandard_Attributes AS target
        USING EdFi_Ods_2021.edfi.LearningObjectiveContentStandard AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.LearningObjectiveId
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.PublicationDate = source.PublicationDate
            , target.PublicationYear = source.PublicationYear
            , target.Title = source.Title
            , target.URI = source.URI
            , target.Version = source.Version
                -- References
            , target.MandatingEducationOrganizationHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MandatingEducationOrganizationId)
                )
            , target.PublicationStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PublicationStatusDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Attributes
                , BeginDate
                , EndDate
                , PublicationDate
                , PublicationYear
                , Title
                , URI
                , Version
                -- References
                , MandatingEducationOrganizationHashKey
                , PublicationStatusDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.LearningObjectiveId
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                -- Attributes
                , BeginDate
                , EndDate
                , PublicationDate
                , PublicationYear
                , Title
                , URI
                , Version
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MandatingEducationOrganizationId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PublicationStatusDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.LearningObjectiveContentStandardAuthor (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , Author
    )
    SELECT
        HASHBYTES('sha1', 
            LearningObjectiveId
                    + '|' + Namespace
        )
            , Author
    FROM EdFi_Ods_2021.edfi.LearningObjectiveContentStandardAuthor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningObjectiveContentStandardAuthor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningObjectiveId
            + '|' + source.Namespace
            )
            AND target.Author = source.Author
    )

    INSERT INTO edfi.LearningObjectiveGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + LearningObjectiveId
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.LearningObjectiveGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningObjectiveGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.LearningObjectiveId
            + '|' + source.Namespace
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.LearningObjectiveLearningStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningStandardHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            LearningObjectiveId
                    + '|' + LearningStandardId
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            LearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.LearningObjectiveLearningStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningObjectiveLearningStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningObjectiveId
            + '|' + source.LearningStandardId
            + '|' + source.Namespace
            )
            AND target.LearningStandardHashKey = HASHBYTES('sha1',
                source.LearningStandardId
            )
    )

    INSERT INTO edfi.LearningStandard (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , LearningStandardId
        )
    SELECT 
        HASHBYTES('sha1', 
            LearningStandardId
        )
        -- Identifying references
        , LearningStandardId
    FROM EdFi_Ods_2021.edfi.LearningStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningStandardId
            )
    )

        MERGE edfi.LearningStandard_Attributes AS target
        USING EdFi_Ods_2021.edfi.LearningStandard AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.LearningStandardId
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.CourseTitle = source.CourseTitle
            , target.Description = source.Description
            , target.LearningStandardItemCode = source.LearningStandardItemCode
            , target.Namespace = source.Namespace
            , target.SuccessCriteria = source.SuccessCriteria
            , target.URI = source.URI
                -- References
            , target.ParentLearningStandardHashKey = HASHBYTES('sha1', 
                source.ParentLearningStandardId
                )
            , target.LearningStandardCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LearningStandardCategoryDescriptorId)
                )
            , target.LearningStandardScopeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LearningStandardScopeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , CourseTitle
                , Description
                , LearningStandardItemCode
                , Namespace
                , SuccessCriteria
                , URI
                -- References
                , ParentLearningStandardHashKey
                , LearningStandardCategoryDescriptorHashKey
                , LearningStandardScopeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.LearningStandardId
                )
                , @schoolYearContext
                -- Attributes
                , CourseTitle
                , Description
                , LearningStandardItemCode
                , Namespace
                , SuccessCriteria
                , URI
                -- References
                , HASHBYTES('sha1', 
                source.ParentLearningStandardId
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LearningStandardCategoryDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LearningStandardScopeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.LearningStandardAcademicSubject (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicSubjectDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
                    + '|' + LearningStandardId
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.LearningStandardAcademicSubject source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardAcademicSubject target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            + '|' + source.LearningStandardId
            )
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )

    INSERT INTO edfi.LearningStandardContentStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            LearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.LearningStandardContentStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardContentStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningStandardId
            )
    )


        MERGE edfi.LearningStandardContentStandard_Attributes AS target
        USING EdFi_Ods_2021.edfi.LearningStandardContentStandard AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.LearningStandardId
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.PublicationDate = source.PublicationDate
            , target.PublicationYear = source.PublicationYear
            , target.Title = source.Title
            , target.URI = source.URI
            , target.Version = source.Version
                -- References
            , target.MandatingEducationOrganizationHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MandatingEducationOrganizationId)
                )
            , target.PublicationStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PublicationStatusDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Attributes
                , BeginDate
                , EndDate
                , PublicationDate
                , PublicationYear
                , Title
                , URI
                , Version
                -- References
                , MandatingEducationOrganizationHashKey
                , PublicationStatusDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.LearningStandardId
                )
                , @schoolYearContext
                -- Identifying references
                -- Attributes
                , BeginDate
                , EndDate
                , PublicationDate
                , PublicationYear
                , Title
                , URI
                , Version
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MandatingEducationOrganizationId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PublicationStatusDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.LearningStandardContentStandardAuthor (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , Author
    )
    SELECT
        HASHBYTES('sha1', 
            LearningStandardId
        )
            , Author
    FROM EdFi_Ods_2021.edfi.LearningStandardContentStandardAuthor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardContentStandardAuthor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningStandardId
            )
            AND target.Author = source.Author
    )

    INSERT INTO edfi.LearningStandardGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + LearningStandardId
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.LearningStandardGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.LearningStandardId
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.LearningStandardIdentificationCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , ContentStandardName
        , IdentificationCode
    )
    SELECT
        HASHBYTES('sha1', 
            LearningStandardId
        )
            , ContentStandardName
            , IdentificationCode
    FROM EdFi_Ods_2021.edfi.LearningStandardIdentificationCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardIdentificationCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningStandardId
            )
            AND target.ContentStandardName = source.ContentStandardName
            AND target.IdentificationCode = source.IdentificationCode
            AND target.ContentStandardName = source.ContentStandardName
            AND target.IdentificationCode = source.IdentificationCode
    )

    INSERT INTO edfi.LearningStandardPrerequisiteLearningStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            LearningStandardId
                    + '|' + PrerequisiteLearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.LearningStandardPrerequisiteLearningStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardPrerequisiteLearningStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LearningStandardId
            + '|' + source.PrerequisiteLearningStandardId
            )
    )

    INSERT INTO edfi.LearningStandardCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LearningStandardCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LearningStandardCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LearningStandardCategoryDescriptorId)
        )
        , LearningStandardCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.LearningStandardCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LearningStandardCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.LearningStandardEquivalenceAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SourceLearningStandardHashKey
        , TargetLearningStandardHashKey
        -- Primary key columns
        , Namespace
                , SourceLearningStandardId
                , TargetLearningStandardId
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + SourceLearningStandardId
                    + '|' + TargetLearningStandardId
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            SourceLearningStandardId
        )
        , HASHBYTES('sha1', 
            TargetLearningStandardId
        )
        , Namespace
        , SourceLearningStandardId
        , TargetLearningStandardId
    FROM EdFi_Ods_2021.edfi.LearningStandardEquivalenceAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardEquivalenceAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.SourceLearningStandardId
            + '|' + source.TargetLearningStandardId
            )
    )

        MERGE edfi.LearningStandardEquivalenceAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.LearningStandardEquivalenceAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.SourceLearningStandardId
        + '|' + source.TargetLearningStandardId
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EffectiveDate = source.EffectiveDate
            , target.LearningStandardEquivalenceStrengthDescription = source.LearningStandardEquivalenceStrengthDescription
                -- References
            , target.LearningStandardEquivalenceStrengthDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LearningStandardEquivalenceStrengthDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EffectiveDate
                , LearningStandardEquivalenceStrengthDescription
                -- References
                , LearningStandardEquivalenceStrengthDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.SourceLearningStandardId
                + '|' + source.TargetLearningStandardId
                )
                , @schoolYearContext
                -- Attributes
                , EffectiveDate
                , LearningStandardEquivalenceStrengthDescription
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LearningStandardEquivalenceStrengthDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.LearningStandardEquivalenceStrengthDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LearningStandardEquivalenceStrengthDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LearningStandardEquivalenceStrengthDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LearningStandardEquivalenceStrengthDescriptorId)
        )
        , LearningStandardEquivalenceStrengthDescriptorId
    FROM EdFi_Ods_2021.edfi.LearningStandardEquivalenceStrengthDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardEquivalenceStrengthDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LearningStandardEquivalenceStrengthDescriptorId)
            )
    )

    
    INSERT INTO edfi.LearningStandardScopeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LearningStandardScopeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LearningStandardScopeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LearningStandardScopeDescriptorId)
        )
        , LearningStandardScopeDescriptorId
    FROM EdFi_Ods_2021.edfi.LearningStandardScopeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LearningStandardScopeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LearningStandardScopeDescriptorId)
            )
    )

    
    INSERT INTO edfi.LevelOfEducationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LevelOfEducationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LevelOfEducationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LevelOfEducationDescriptorId)
        )
        , LevelOfEducationDescriptorId
    FROM EdFi_Ods_2021.edfi.LevelOfEducationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LevelOfEducationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LevelOfEducationDescriptorId)
            )
    )

    
    INSERT INTO edfi.LicenseStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LicenseStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LicenseStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LicenseStatusDescriptorId)
        )
        , LicenseStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.LicenseStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LicenseStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LicenseStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.LicenseTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LicenseTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LicenseTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LicenseTypeDescriptorId)
        )
        , LicenseTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.LicenseTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LicenseTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LicenseTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.LimitedEnglishProficiencyDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LimitedEnglishProficiencyDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LimitedEnglishProficiencyDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LimitedEnglishProficiencyDescriptorId)
        )
        , LimitedEnglishProficiencyDescriptorId
    FROM EdFi_Ods_2021.edfi.LimitedEnglishProficiencyDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LimitedEnglishProficiencyDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LimitedEnglishProficiencyDescriptorId)
            )
    )

    
    INSERT INTO edfi.LocaleDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LocaleDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LocaleDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LocaleDescriptorId)
        )
        , LocaleDescriptorId
    FROM EdFi_Ods_2021.edfi.LocaleDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LocaleDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LocaleDescriptorId)
            )
    )

    
    INSERT INTO edfi.LocalEducationAgency (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , LocalEducationAgencyId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LocalEducationAgencyId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LocalEducationAgencyId)
        )
        , LocalEducationAgencyId
    FROM EdFi_Ods_2021.edfi.LocalEducationAgency source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LocalEducationAgency target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LocalEducationAgencyId)
            )
    )

        MERGE edfi.LocalEducationAgency_Attributes AS target
        USING EdFi_Ods_2021.edfi.LocalEducationAgency AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.LocalEducationAgencyId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- References
            target.ParentLocalEducationAgencyHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParentLocalEducationAgencyId)
                )
            , target.CharterStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CharterStatusDescriptorId)
                )
            , target.EducationServiceCenterHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationServiceCenterId)
                )
            , target.LocalEducationAgencyCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocalEducationAgencyCategoryDescriptorId)
                )
            , target.StateEducationAgencyHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateEducationAgencyId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , ParentLocalEducationAgencyHashKey
                , CharterStatusDescriptorHashKey
                , EducationServiceCenterHashKey
                , LocalEducationAgencyCategoryDescriptorHashKey
                , StateEducationAgencyHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocalEducationAgencyId)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParentLocalEducationAgencyId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CharterStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationServiceCenterId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocalEducationAgencyCategoryDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateEducationAgencyId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.LocalEducationAgencyAccountability (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SchoolYearTypeHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LocalEducationAgencyId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
    FROM EdFi_Ods_2021.edfi.LocalEducationAgencyAccountability source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LocalEducationAgencyAccountability target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LocalEducationAgencyId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
            AND target.SchoolYearTypeHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SchoolYear)
            )
    )


        MERGE edfi.LocalEducationAgencyAccountability_Attributes AS target
        USING EdFi_Ods_2021.edfi.LocalEducationAgencyAccountability AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.LocalEducationAgencyId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.SchoolYearTypeHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolYear)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- References
            , target.GunFreeSchoolsActReportingStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GunFreeSchoolsActReportingStatusDescriptorId)
                )
            , target.SchoolChoiceImplementStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolChoiceImplementStatusDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , SchoolYearTypeHashKey
                -- References
                , GunFreeSchoolsActReportingStatusDescriptorHashKey
                , SchoolChoiceImplementStatusDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocalEducationAgencyId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GunFreeSchoolsActReportingStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolChoiceImplementStatusDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.LocalEducationAgencyFederalFunds (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , FiscalYear
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LocalEducationAgencyId)
        )
            , FiscalYear
    FROM EdFi_Ods_2021.edfi.LocalEducationAgencyFederalFunds source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LocalEducationAgencyFederalFunds target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LocalEducationAgencyId)
            )
            AND target.FiscalYear = source.FiscalYear
    )


        MERGE edfi.LocalEducationAgencyFederalFunds_Attributes AS target
        USING EdFi_Ods_2021.edfi.LocalEducationAgencyFederalFunds AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.LocalEducationAgencyId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.FiscalYear = source.FiscalYear
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.InnovativeDollarsSpent = source.InnovativeDollarsSpent
            , target.InnovativeDollarsSpentStrategicPriorities = source.InnovativeDollarsSpentStrategicPriorities
            , target.InnovativeProgramsFundsReceived = source.InnovativeProgramsFundsReceived
            , target.SchoolImprovementAllocation = source.SchoolImprovementAllocation
            , target.SchoolImprovementReservedFundsPercentage = source.SchoolImprovementReservedFundsPercentage
            , target.StateAssessmentAdministrationFunding = source.StateAssessmentAdministrationFunding
            , target.SupplementalEducationalServicesFundsSpent = source.SupplementalEducationalServicesFundsSpent
            , target.SupplementalEducationalServicesPerPupilExpenditure = source.SupplementalEducationalServicesPerPupilExpenditure
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , FiscalYear
                -- Attributes
                , InnovativeDollarsSpent
                , InnovativeDollarsSpentStrategicPriorities
                , InnovativeProgramsFundsReceived
                , SchoolImprovementAllocation
                , SchoolImprovementReservedFundsPercentage
                , StateAssessmentAdministrationFunding
                , SupplementalEducationalServicesFundsSpent
                , SupplementalEducationalServicesPerPupilExpenditure
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocalEducationAgencyId)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , FiscalYear
                -- Attributes
                , InnovativeDollarsSpent
                , InnovativeDollarsSpentStrategicPriorities
                , InnovativeProgramsFundsReceived
                , SchoolImprovementAllocation
                , SchoolImprovementReservedFundsPercentage
                , StateAssessmentAdministrationFunding
                , SupplementalEducationalServicesFundsSpent
                , SupplementalEducationalServicesPerPupilExpenditure
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.LocalEducationAgencyCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , LocalEducationAgencyCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LocalEducationAgencyCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LocalEducationAgencyCategoryDescriptorId)
        )
        , LocalEducationAgencyCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.LocalEducationAgencyCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.LocalEducationAgencyCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LocalEducationAgencyCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.Location (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        -- Primary key columns
        , ClassroomIdentificationCode
                , SchoolId
        )
    SELECT 
        HASHBYTES('sha1', 
            ClassroomIdentificationCode
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , ClassroomIdentificationCode
        , SchoolId
    FROM EdFi_Ods_2021.edfi.Location source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Location target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ClassroomIdentificationCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
    )

        MERGE edfi.Location_Attributes AS target
        USING EdFi_Ods_2021.edfi.Location AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.ClassroomIdentificationCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.MaximumNumberOfSeats = source.MaximumNumberOfSeats
            , target.OptimalNumberOfSeats = source.OptimalNumberOfSeats
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , MaximumNumberOfSeats
                , OptimalNumberOfSeats
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.ClassroomIdentificationCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                )
                , @schoolYearContext
                -- Attributes
                , MaximumNumberOfSeats
                , OptimalNumberOfSeats
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.MagnetSpecialProgramEmphasisSchoolDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , MagnetSpecialProgramEmphasisSchoolDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, MagnetSpecialProgramEmphasisSchoolDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, MagnetSpecialProgramEmphasisSchoolDescriptorId)
        )
        , MagnetSpecialProgramEmphasisSchoolDescriptorId
    FROM EdFi_Ods_2021.edfi.MagnetSpecialProgramEmphasisSchoolDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.MagnetSpecialProgramEmphasisSchoolDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.MagnetSpecialProgramEmphasisSchoolDescriptorId)
            )
    )

    
    INSERT INTO edfi.MediumOfInstructionDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , MediumOfInstructionDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, MediumOfInstructionDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, MediumOfInstructionDescriptorId)
        )
        , MediumOfInstructionDescriptorId
    FROM EdFi_Ods_2021.edfi.MediumOfInstructionDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.MediumOfInstructionDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.MediumOfInstructionDescriptorId)
            )
    )

    
    INSERT INTO edfi.MethodCreditEarnedDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , MethodCreditEarnedDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, MethodCreditEarnedDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, MethodCreditEarnedDescriptorId)
        )
        , MethodCreditEarnedDescriptorId
    FROM EdFi_Ods_2021.edfi.MethodCreditEarnedDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.MethodCreditEarnedDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.MethodCreditEarnedDescriptorId)
            )
    )

    
    INSERT INTO edfi.MigrantEducationProgramServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , MigrantEducationProgramServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, MigrantEducationProgramServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, MigrantEducationProgramServiceDescriptorId)
        )
        , MigrantEducationProgramServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.MigrantEducationProgramServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.MigrantEducationProgramServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.MigrantEducationProgramServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.MonitoredDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , MonitoredDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, MonitoredDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, MonitoredDescriptorId)
        )
        , MonitoredDescriptorId
    FROM EdFi_Ods_2021.edfi.MonitoredDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.MonitoredDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.MonitoredDescriptorId)
            )
    )

    
    INSERT INTO edfi.NeglectedOrDelinquentProgramDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , NeglectedOrDelinquentProgramDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, NeglectedOrDelinquentProgramDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, NeglectedOrDelinquentProgramDescriptorId)
        )
        , NeglectedOrDelinquentProgramDescriptorId
    FROM EdFi_Ods_2021.edfi.NeglectedOrDelinquentProgramDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.NeglectedOrDelinquentProgramDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.NeglectedOrDelinquentProgramDescriptorId)
            )
    )

    
    INSERT INTO edfi.NeglectedOrDelinquentProgramServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , NeglectedOrDelinquentProgramServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, NeglectedOrDelinquentProgramServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, NeglectedOrDelinquentProgramServiceDescriptorId)
        )
        , NeglectedOrDelinquentProgramServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.NeglectedOrDelinquentProgramServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.NeglectedOrDelinquentProgramServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.NeglectedOrDelinquentProgramServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.NetworkPurposeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , NetworkPurposeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, NetworkPurposeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, NetworkPurposeDescriptorId)
        )
        , NetworkPurposeDescriptorId
    FROM EdFi_Ods_2021.edfi.NetworkPurposeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.NetworkPurposeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.NetworkPurposeDescriptorId)
            )
    )

    
    INSERT INTO edfi.ObjectiveAssessment (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AssessmentHashKey
        -- Primary key columns
        , AssessmentIdentifier
                , IdentificationCode
                , Namespace
        )
    SELECT 
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + IdentificationCode
                    + '|' + Namespace
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            AssessmentIdentifier
            + '|' + Namespace
        )
        , AssessmentIdentifier
        , IdentificationCode
        , Namespace
    FROM EdFi_Ods_2021.edfi.ObjectiveAssessment source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ObjectiveAssessment target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            )
    )

        MERGE edfi.ObjectiveAssessment_Attributes AS target
        USING EdFi_Ods_2021.edfi.ObjectiveAssessment AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + source.IdentificationCode
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.Description = source.Description
            , target.MaxRawScore = source.MaxRawScore
            , target.Nomenclature = source.Nomenclature
            , target.PercentOfAssessment = source.PercentOfAssessment
                -- References
            , target.ParentObjectiveAssessmentHashKey = HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.ParentIdentificationCode
                + '|' + source.Namespace
                )
            , target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Description
                , MaxRawScore
                , Nomenclature
                , PercentOfAssessment
                -- References
                , ParentObjectiveAssessmentHashKey
                , AcademicSubjectDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Attributes
                , Description
                , MaxRawScore
                , Nomenclature
                , PercentOfAssessment
                -- References
                , HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.ParentIdentificationCode
                + '|' + source.Namespace
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.ObjectiveAssessmentAssessmentItem (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentItemHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + AssessmentItemIdentificationCode
                    + '|' + IdentificationCode
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            AssessmentIdentifier
            + '|' + AssessmentItemIdentificationCode
            + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.ObjectiveAssessmentAssessmentItem source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ObjectiveAssessmentAssessmentItem target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.AssessmentItemIdentificationCode
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            )
            AND target.AssessmentItemHashKey = HASHBYTES('sha1',
                source.AssessmentIdentifier
                + '|' + source.AssessmentItemIdentificationCode
                + '|' + source.Namespace
            )
    )

    INSERT INTO edfi.ObjectiveAssessmentLearningObjective (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningObjectiveHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + IdentificationCode
                    + '|' + LearningObjectiveId
                    + '|' + LearningObjectiveNamespace
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            LearningObjectiveId
            + '|' + LearningObjectiveNamespace
        )
    FROM EdFi_Ods_2021.edfi.ObjectiveAssessmentLearningObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ObjectiveAssessmentLearningObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.LearningObjectiveId
            + '|' + source.LearningObjectiveNamespace
            + '|' + source.Namespace
            )
            AND target.LearningObjectiveHashKey = HASHBYTES('sha1',
                source.LearningObjectiveId
                + '|' + source.LearningObjectiveNamespace
            )
    )

    INSERT INTO edfi.ObjectiveAssessmentLearningStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningStandardHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + IdentificationCode
                    + '|' + LearningStandardId
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            LearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.ObjectiveAssessmentLearningStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ObjectiveAssessmentLearningStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.LearningStandardId
            + '|' + source.Namespace
            )
            AND target.LearningStandardHashKey = HASHBYTES('sha1',
                source.LearningStandardId
            )
    )

    INSERT INTO edfi.ObjectiveAssessmentPerformanceLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
        , PerformanceLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + IdentificationCode
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, PerformanceLevelDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PerformanceLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ObjectiveAssessmentPerformanceLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ObjectiveAssessmentPerformanceLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
            AND target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
    )


        MERGE edfi.ObjectiveAssessmentPerformanceLevel_Attributes AS target
        USING EdFi_Ods_2021.edfi.ObjectiveAssessmentPerformanceLevel AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + source.IdentificationCode
        + '|' + source.Namespace
        + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
            AND target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.MaximumScore = source.MaximumScore
            , target.MinimumScore = source.MinimumScore
                -- References
            , target.ResultDatatypeTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                , PerformanceLevelDescriptorHashKey
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , ResultDatatypeTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                )
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ObjectiveAssessmentScore (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + IdentificationCode
                    + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ObjectiveAssessmentScore source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ObjectiveAssessmentScore target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
    )


        MERGE edfi.ObjectiveAssessmentScore_Attributes AS target
        USING EdFi_Ods_2021.edfi.ObjectiveAssessmentScore AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + source.IdentificationCode
        + '|' + source.Namespace
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.MaximumScore = source.MaximumScore
            , target.MinimumScore = source.MinimumScore
                -- References
            , target.ResultDatatypeTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , ResultDatatypeTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                -- Attributes
                , MaximumScore
                , MinimumScore
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.OldEthnicityDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , OldEthnicityDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, OldEthnicityDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, OldEthnicityDescriptorId)
        )
        , OldEthnicityDescriptorId
    FROM EdFi_Ods_2021.edfi.OldEthnicityDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.OldEthnicityDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OldEthnicityDescriptorId)
            )
    )

    
    INSERT INTO edfi.OpenStaffPosition (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , EducationOrganizationId
                , RequisitionNumber
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + RequisitionNumber
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , EducationOrganizationId
        , RequisitionNumber
    FROM EdFi_Ods_2021.edfi.OpenStaffPosition source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.OpenStaffPosition target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.RequisitionNumber
            )
    )

        MERGE edfi.OpenStaffPosition_Attributes AS target
        USING EdFi_Ods_2021.edfi.OpenStaffPosition AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.RequisitionNumber
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.DatePosted = source.DatePosted
            , target.DatePostingRemoved = source.DatePostingRemoved
            , target.PositionTitle = source.PositionTitle
                -- References
            , target.EmploymentStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EmploymentStatusDescriptorId)
                )
            , target.PostingResultDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PostingResultDescriptorId)
                )
            , target.ProgramAssignmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProgramAssignmentDescriptorId)
                )
            , target.StaffClassificationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffClassificationDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , DatePosted
                , DatePostingRemoved
                , PositionTitle
                -- References
                , EmploymentStatusDescriptorHashKey
                , PostingResultDescriptorHashKey
                , ProgramAssignmentDescriptorHashKey
                , StaffClassificationDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.RequisitionNumber
                )
                , @schoolYearContext
                -- Attributes
                , DatePosted
                , DatePostingRemoved
                , PositionTitle
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EmploymentStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PostingResultDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProgramAssignmentDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffClassificationDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.OpenStaffPositionAcademicSubject (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicSubjectDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + RequisitionNumber
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.OpenStaffPositionAcademicSubject source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.OpenStaffPositionAcademicSubject target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.RequisitionNumber
            )
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )

    INSERT INTO edfi.OpenStaffPositionInstructionalGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + RequisitionNumber
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.OpenStaffPositionInstructionalGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.OpenStaffPositionInstructionalGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.RequisitionNumber
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.OperationalStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , OperationalStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, OperationalStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, OperationalStatusDescriptorId)
        )
        , OperationalStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.OperationalStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.OperationalStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OperationalStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.OtherNameTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , OtherNameTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, OtherNameTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, OtherNameTypeDescriptorId)
        )
        , OtherNameTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.OtherNameTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.OtherNameTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.Parent (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , ParentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ParentUSI)
        )
        -- Identifying references
        , ParentUSI
    FROM EdFi_Ods_2021.edfi.Parent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Parent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ParentUSI)
            )
    )

        MERGE edfi.Parent_Attributes AS target
        USING EdFi_Ods_2021.edfi.Parent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.FirstName = source.FirstName
            , target.GenerationCodeSuffix = source.GenerationCodeSuffix
            , target.LastSurname = source.LastSurname
            , target.LoginId = source.LoginId
            , target.MaidenName = source.MaidenName
            , target.MiddleName = source.MiddleName
            , target.ParentUniqueId = source.ParentUniqueId
            , target.PersonalTitlePrefix = source.PersonalTitlePrefix
                -- References
            , target.PersonHashKey = HASHBYTES('sha1', 
                source.PersonId
                + '|' + CONVERT(nvarchar, source.SourceSystemDescriptorId)
                )
            , target.SexDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SexDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , LoginId
                , MaidenName
                , MiddleName
                , ParentUniqueId
                , PersonalTitlePrefix
                -- References
                , PersonHashKey
                , SexDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , LoginId
                , MaidenName
                , MiddleName
                , ParentUniqueId
                , PersonalTitlePrefix
                -- References
                , HASHBYTES('sha1', 
                source.PersonId
                + '|' + CONVERT(nvarchar, source.SourceSystemDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SexDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.ParentAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AddressTypeDescriptorHashKey
        , StateAbbreviationDescriptorHashKey
        -- Contextual primary key
        , City
        , PostalCode
        , StreetNumberName
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, ParentUSI)
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
            , City
            , PostalCode
            , StreetNumberName
    FROM EdFi_Ods_2021.edfi.ParentAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.ParentUSI)
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
    )


        MERGE edfi.ParentAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.ParentAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.ParentUSI)
        + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            -- Contextual primary key
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.ApartmentRoomSuiteNumber = source.ApartmentRoomSuiteNumber
            , target.BuildingSiteNumber = source.BuildingSiteNumber
            , target.CongressionalDistrict = source.CongressionalDistrict
            , target.CountyFIPSCode = source.CountyFIPSCode
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
            , target.NameOfCounty = source.NameOfCounty
                -- References
            , target.LocaleDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AddressTypeDescriptorHashKey
                , StateAbbreviationDescriptorHashKey
                -- Contextual primary key
                , City
                , PostalCode
                , StreetNumberName
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                -- References
                , LocaleDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.ParentUSI)
                + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
                -- Contextual primary key
                , City
                , PostalCode
                , StreetNumberName
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ParentAddressPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , BeginDate
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + City
                    + '|' + CONVERT(nvarchar, ParentUSI)
                    + '|' + PostalCode
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
                    + '|' + StreetNumberName
        )
            , BeginDate
    FROM EdFi_Ods_2021.edfi.ParentAddressPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentAddressPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + source.City
            + '|' + CONVERT(nvarchar, source.ParentUSI)
            + '|' + source.PostalCode
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            + '|' + source.StreetNumberName
            )
            AND target.BeginDate = source.BeginDate
    )


        MERGE edfi.ParentAddressPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.ParentAddressPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + source.City
        + '|' + CONVERT(nvarchar, source.ParentUSI)
        + '|' + source.PostalCode
        + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
        + '|' + source.StreetNumberName
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.BeginDate = source.BeginDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + source.City
                + '|' + CONVERT(nvarchar, source.ParentUSI)
                + '|' + source.PostalCode
                + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                + '|' + source.StreetNumberName
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ParentElectronicMail (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ElectronicMailTypeDescriptorHashKey
        -- Contextual primary key
        , ElectronicMailAddress
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ElectronicMailTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, ParentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ElectronicMailTypeDescriptorId)
        )
            , ElectronicMailAddress
    FROM EdFi_Ods_2021.edfi.ParentElectronicMail source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentElectronicMail target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.ElectronicMailTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            )
            AND target.ElectronicMailAddress = source.ElectronicMailAddress
    )


        MERGE edfi.ParentElectronicMail_Attributes AS target
        USING EdFi_Ods_2021.edfi.ParentElectronicMail AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.ElectronicMailTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            )
            -- Contextual primary key
            AND target.ElectronicMailAddress = source.ElectronicMailAddress
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.PrimaryEmailAddressIndicator = source.PrimaryEmailAddressIndicator
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , ElectronicMailTypeDescriptorHashKey
                -- Contextual primary key
                , ElectronicMailAddress
                -- Attributes
                , DoNotPublishIndicator
                , PrimaryEmailAddressIndicator
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.ParentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
                )
                -- Contextual primary key
                , ElectronicMailAddress
                -- Attributes
                , DoNotPublishIndicator
                , PrimaryEmailAddressIndicator
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ParentInternationalAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AddressTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, ParentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ParentInternationalAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentInternationalAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
    )


        MERGE edfi.ParentInternationalAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.ParentInternationalAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AddressLine1 = source.AddressLine1
            , target.AddressLine2 = source.AddressLine2
            , target.AddressLine3 = source.AddressLine3
            , target.AddressLine4 = source.AddressLine4
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
                -- References
            , target.CountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AddressTypeDescriptorHashKey
                -- Attributes
                , AddressLine1
                , AddressLine2
                , AddressLine3
                , AddressLine4
                , BeginDate
                , EndDate
                , Latitude
                , Longitude
                -- References
                , CountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.ParentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                -- Attributes
                , AddressLine1
                , AddressLine2
                , AddressLine3
                , AddressLine4
                , BeginDate
                , EndDate
                , Latitude
                , Longitude
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ParentLanguage (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
                    + '|' + CONVERT(nvarchar, ParentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ParentLanguage source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentLanguage target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LanguageDescriptorId)
            + '|' + CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.LanguageDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageDescriptorId)
            )
    )

    INSERT INTO edfi.ParentLanguageUse (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageUseDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
                    + '|' + CONVERT(nvarchar, LanguageUseDescriptorId)
                    + '|' + CONVERT(nvarchar, ParentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageUseDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ParentLanguageUse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentLanguageUse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LanguageDescriptorId)
            + '|' + CONVERT(nvarchar, source.LanguageUseDescriptorId)
            + '|' + CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.LanguageUseDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageUseDescriptorId)
            )
    )

    INSERT INTO edfi.ParentOtherName (
        HashKey
        -- Identifying references (for aggregate child entity)
        , OtherNameTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, OtherNameTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, ParentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, OtherNameTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ParentOtherName source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentOtherName target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.OtherNameTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            )
    )


        MERGE edfi.ParentOtherName_Attributes AS target
        USING EdFi_Ods_2021.edfi.ParentOtherName AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.ParentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.OtherNameTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.FirstName = source.FirstName
            , target.GenerationCodeSuffix = source.GenerationCodeSuffix
            , target.LastSurname = source.LastSurname
            , target.MiddleName = source.MiddleName
            , target.PersonalTitlePrefix = source.PersonalTitlePrefix
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , OtherNameTypeDescriptorHashKey
                -- Attributes
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , MiddleName
                , PersonalTitlePrefix
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.ParentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
                )
                -- Attributes
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , MiddleName
                , PersonalTitlePrefix
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ParentPersonalIdentificationDocument (
        HashKey
        -- Identifying references (for aggregate child entity)
        , IdentificationDocumentUseDescriptorHashKey
        , PersonalInformationVerificationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
                    + '|' + CONVERT(nvarchar, ParentUSI)
                    + '|' + CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ParentPersonalIdentificationDocument source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentPersonalIdentificationDocument target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            + '|' + CONVERT(nvarchar, source.ParentUSI)
            + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
    )


        MERGE edfi.ParentPersonalIdentificationDocument_Attributes AS target
        USING EdFi_Ods_2021.edfi.ParentPersonalIdentificationDocument AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
        + '|' + CONVERT(nvarchar, source.ParentUSI)
        + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DocumentExpirationDate = source.DocumentExpirationDate
            , target.DocumentTitle = source.DocumentTitle
            , target.IssuerDocumentIdentificationCode = source.IssuerDocumentIdentificationCode
            , target.IssuerName = source.IssuerName
                -- References
            , target.IssuerCountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , IdentificationDocumentUseDescriptorHashKey
                , PersonalInformationVerificationDescriptorHashKey
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , IssuerCountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                + '|' + CONVERT(nvarchar, source.ParentUSI)
                + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                )
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ParentTelephone (
        HashKey
        -- Identifying references (for aggregate child entity)
        , TelephoneNumberTypeDescriptorHashKey
        -- Contextual primary key
        , TelephoneNumber
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ParentUSI)
                    + '|' + CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
            , TelephoneNumber
    FROM EdFi_Ods_2021.edfi.ParentTelephone source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParentTelephone target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ParentUSI)
            + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.TelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.TelephoneNumber = source.TelephoneNumber
    )


        MERGE edfi.ParentTelephone_Attributes AS target
        USING EdFi_Ods_2021.edfi.ParentTelephone AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.ParentUSI)
        + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.TelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            -- Contextual primary key
            AND target.TelephoneNumber = source.TelephoneNumber
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.OrderOfPriority = source.OrderOfPriority
            , target.TextMessageCapabilityIndicator = source.TextMessageCapabilityIndicator
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , TelephoneNumberTypeDescriptorHashKey
                -- Contextual primary key
                , TelephoneNumber
                -- Attributes
                , DoNotPublishIndicator
                , OrderOfPriority
                , TextMessageCapabilityIndicator
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParentUSI)
                + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
                )
                -- Contextual primary key
                , TelephoneNumber
                -- Attributes
                , DoNotPublishIndicator
                , OrderOfPriority
                , TextMessageCapabilityIndicator
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ParticipationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ParticipationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ParticipationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ParticipationDescriptorId)
        )
        , ParticipationDescriptorId
    FROM EdFi_Ods_2021.edfi.ParticipationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParticipationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ParticipationDescriptorId)
            )
    )

    
    INSERT INTO edfi.ParticipationStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ParticipationStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ParticipationStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ParticipationStatusDescriptorId)
        )
        , ParticipationStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.ParticipationStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ParticipationStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ParticipationStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.Payroll (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AccountHashKey
        , StaffHashKey
        -- Primary key columns
        , AccountIdentifier
                , AsOfDate
                , EducationOrganizationId
                , FiscalYear
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            AccountIdentifier
                    + '|' + CONVERT(nvarchar, AsOfDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, FiscalYear)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            AccountIdentifier
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, FiscalYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , AccountIdentifier
        , AsOfDate
        , EducationOrganizationId
        , FiscalYear
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.Payroll source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Payroll target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AccountIdentifier
            + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.FiscalYear)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.Payroll_Attributes AS target
        USING EdFi_Ods_2021.edfi.Payroll AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AccountIdentifier
        + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.FiscalYear)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AmountToDate = source.AmountToDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AmountToDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AccountIdentifier
                + '|' + CONVERT(nvarchar, source.AsOfDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.FiscalYear)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , AmountToDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.PerformanceBaseConversionDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PerformanceBaseConversionDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PerformanceBaseConversionDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PerformanceBaseConversionDescriptorId)
        )
        , PerformanceBaseConversionDescriptorId
    FROM EdFi_Ods_2021.edfi.PerformanceBaseConversionDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PerformanceBaseConversionDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PerformanceBaseConversionDescriptorId)
            )
    )

    
    INSERT INTO edfi.PerformanceLevelDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PerformanceLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PerformanceLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PerformanceLevelDescriptorId)
        )
        , PerformanceLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.PerformanceLevelDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PerformanceLevelDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
    )

    
    INSERT INTO edfi.Person (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SourceSystemDescriptorHashKey
        -- Primary key columns
        , PersonId
                , SourceSystemDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            PersonId
                    + '|' + CONVERT(nvarchar, SourceSystemDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SourceSystemDescriptorId)
        )
        , PersonId
        , SourceSystemDescriptorId
    FROM EdFi_Ods_2021.edfi.Person source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Person target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.PersonId
            + '|' + CONVERT(nvarchar, source.SourceSystemDescriptorId)
            )
    )

    
    INSERT INTO edfi.PersonalInformationVerificationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PersonalInformationVerificationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
        )
        , PersonalInformationVerificationDescriptorId
    FROM EdFi_Ods_2021.edfi.PersonalInformationVerificationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PersonalInformationVerificationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
    )

    
    INSERT INTO edfi.PlatformTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PlatformTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PlatformTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PlatformTypeDescriptorId)
        )
        , PlatformTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.PlatformTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PlatformTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PlatformTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.PopulationServedDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PopulationServedDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PopulationServedDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PopulationServedDescriptorId)
        )
        , PopulationServedDescriptorId
    FROM EdFi_Ods_2021.edfi.PopulationServedDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PopulationServedDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
    )

    
    INSERT INTO edfi.PostingResultDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PostingResultDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PostingResultDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PostingResultDescriptorId)
        )
        , PostingResultDescriptorId
    FROM EdFi_Ods_2021.edfi.PostingResultDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PostingResultDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PostingResultDescriptorId)
            )
    )

    
    INSERT INTO edfi.PostSecondaryEvent (
        HashKey
        -- Identifying references (for aggregate root entity)
        , PostSecondaryEventCategoryDescriptorHashKey
        , StudentHashKey
        -- Primary key columns
        , EventDate
                , PostSecondaryEventCategoryDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EventDate, 23)
                    + '|' + CONVERT(nvarchar, PostSecondaryEventCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PostSecondaryEventCategoryDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , EventDate
        , PostSecondaryEventCategoryDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.PostSecondaryEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PostSecondaryEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EventDate, 23)
            + '|' + CONVERT(nvarchar, source.PostSecondaryEventCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.PostSecondaryEvent_Attributes AS target
        USING EdFi_Ods_2021.edfi.PostSecondaryEvent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EventDate, 23)
        + '|' + CONVERT(nvarchar, source.PostSecondaryEventCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- References
            , target.PostSecondaryInstitutionHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PostSecondaryInstitutionId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , PostSecondaryInstitutionHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EventDate, 23)
                + '|' + CONVERT(nvarchar, source.PostSecondaryEventCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PostSecondaryInstitutionId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.PostSecondaryEventCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PostSecondaryEventCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PostSecondaryEventCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PostSecondaryEventCategoryDescriptorId)
        )
        , PostSecondaryEventCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.PostSecondaryEventCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PostSecondaryEventCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PostSecondaryEventCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.PostSecondaryInstitution (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , PostSecondaryInstitutionId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PostSecondaryInstitutionId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PostSecondaryInstitutionId)
        )
        , PostSecondaryInstitutionId
    FROM EdFi_Ods_2021.edfi.PostSecondaryInstitution source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PostSecondaryInstitution target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PostSecondaryInstitutionId)
            )
    )

        MERGE edfi.PostSecondaryInstitution_Attributes AS target
        USING EdFi_Ods_2021.edfi.PostSecondaryInstitution AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.PostSecondaryInstitutionId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- References
            target.AdministrativeFundingControlDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdministrativeFundingControlDescriptorId)
                )
            , target.PostSecondaryInstitutionLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PostSecondaryInstitutionLevelDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , AdministrativeFundingControlDescriptorHashKey
                , PostSecondaryInstitutionLevelDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PostSecondaryInstitutionId)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdministrativeFundingControlDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PostSecondaryInstitutionLevelDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.PostSecondaryInstitutionMediumOfInstruction (
        HashKey
        -- Identifying references (for aggregate child entity)
        , MediumOfInstructionDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, MediumOfInstructionDescriptorId)
                    + '|' + CONVERT(nvarchar, PostSecondaryInstitutionId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, MediumOfInstructionDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.PostSecondaryInstitutionMediumOfInstruction source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PostSecondaryInstitutionMediumOfInstruction target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.MediumOfInstructionDescriptorId)
            + '|' + CONVERT(nvarchar, source.PostSecondaryInstitutionId)
            )
            AND target.MediumOfInstructionDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.MediumOfInstructionDescriptorId)
            )
    )

    INSERT INTO edfi.PostSecondaryInstitutionLevelDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PostSecondaryInstitutionLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PostSecondaryInstitutionLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PostSecondaryInstitutionLevelDescriptorId)
        )
        , PostSecondaryInstitutionLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.PostSecondaryInstitutionLevelDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PostSecondaryInstitutionLevelDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PostSecondaryInstitutionLevelDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProficiencyDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProficiencyDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProficiencyDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProficiencyDescriptorId)
        )
        , ProficiencyDescriptorId
    FROM EdFi_Ods_2021.edfi.ProficiencyDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProficiencyDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProficiencyDescriptorId)
            )
    )

    
    INSERT INTO edfi.Program (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , ProgramTypeDescriptorHashKey
        -- Primary key columns
        , EducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , EducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.Program source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Program target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
    )

        MERGE edfi.Program_Attributes AS target
        USING EdFi_Ods_2021.edfi.Program AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.ProgramId = source.ProgramId
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , ProgramId
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                )
                , @schoolYearContext
                -- Attributes
                , ProgramId
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.ProgramCharacteristic (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ProgramCharacteristicDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramCharacteristicDescriptorId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramCharacteristicDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ProgramCharacteristic source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramCharacteristic target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramCharacteristicDescriptorId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
            AND target.ProgramCharacteristicDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ProgramCharacteristicDescriptorId)
            )
    )

    INSERT INTO edfi.ProgramLearningObjective (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningObjectiveHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + LearningObjectiveId
                    + '|' + Namespace
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            LearningObjectiveId
            + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.ProgramLearningObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramLearningObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.LearningObjectiveId
            + '|' + source.Namespace
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
            AND target.LearningObjectiveHashKey = HASHBYTES('sha1',
                source.LearningObjectiveId
                + '|' + source.Namespace
            )
    )

    INSERT INTO edfi.ProgramLearningStandard (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LearningStandardHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + LearningStandardId
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            LearningStandardId
        )
    FROM EdFi_Ods_2021.edfi.ProgramLearningStandard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramLearningStandard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.LearningStandardId
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
            AND target.LearningStandardHashKey = HASHBYTES('sha1',
                source.LearningStandardId
            )
    )

    INSERT INTO edfi.ProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, ServiceDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
            )
            AND target.ServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ServiceDescriptorId)
            )
    )

    INSERT INTO edfi.ProgramSponsor (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ProgramSponsorDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramSponsorDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramSponsorDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ProgramSponsor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramSponsor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramSponsorDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
            AND target.ProgramSponsorDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ProgramSponsorDescriptorId)
            )
    )

    INSERT INTO edfi.ProgramAssignmentDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProgramAssignmentDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramAssignmentDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramAssignmentDescriptorId)
        )
        , ProgramAssignmentDescriptorId
    FROM EdFi_Ods_2021.edfi.ProgramAssignmentDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramAssignmentDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProgramAssignmentDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProgramCharacteristicDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProgramCharacteristicDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramCharacteristicDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramCharacteristicDescriptorId)
        )
        , ProgramCharacteristicDescriptorId
    FROM EdFi_Ods_2021.edfi.ProgramCharacteristicDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramCharacteristicDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProgramCharacteristicDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProgramSponsorDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProgramSponsorDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramSponsorDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramSponsorDescriptorId)
        )
        , ProgramSponsorDescriptorId
    FROM EdFi_Ods_2021.edfi.ProgramSponsorDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramSponsorDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProgramSponsorDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProgramTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProgramTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , ProgramTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.ProgramTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgramTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProgressDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProgressDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgressDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgressDescriptorId)
        )
        , ProgressDescriptorId
    FROM EdFi_Ods_2021.edfi.ProgressDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgressDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProgressDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProgressLevelDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProgressLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgressLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgressLevelDescriptorId)
        )
        , ProgressLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.ProgressLevelDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProgressLevelDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProgressLevelDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProviderCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProviderCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProviderCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProviderCategoryDescriptorId)
        )
        , ProviderCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.ProviderCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProviderCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProviderCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProviderProfitabilityDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProviderProfitabilityDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProviderProfitabilityDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProviderProfitabilityDescriptorId)
        )
        , ProviderProfitabilityDescriptorId
    FROM EdFi_Ods_2021.edfi.ProviderProfitabilityDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProviderProfitabilityDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProviderProfitabilityDescriptorId)
            )
    )

    
    INSERT INTO edfi.ProviderStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ProviderStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProviderStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProviderStatusDescriptorId)
        )
        , ProviderStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.ProviderStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ProviderStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProviderStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.PublicationStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , PublicationStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, PublicationStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PublicationStatusDescriptorId)
        )
        , PublicationStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.PublicationStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.PublicationStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PublicationStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.QuestionFormDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , QuestionFormDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, QuestionFormDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, QuestionFormDescriptorId)
        )
        , QuestionFormDescriptorId
    FROM EdFi_Ods_2021.edfi.QuestionFormDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.QuestionFormDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.QuestionFormDescriptorId)
            )
    )

    
    INSERT INTO edfi.RaceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , RaceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, RaceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RaceDescriptorId)
        )
        , RaceDescriptorId
    FROM EdFi_Ods_2021.edfi.RaceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RaceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RaceDescriptorId)
            )
    )

    
    INSERT INTO edfi.ReasonExitedDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ReasonExitedDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ReasonExitedDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ReasonExitedDescriptorId)
        )
        , ReasonExitedDescriptorId
    FROM EdFi_Ods_2021.edfi.ReasonExitedDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ReasonExitedDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ReasonExitedDescriptorId)
            )
    )

    
    INSERT INTO edfi.ReasonNotTestedDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ReasonNotTestedDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ReasonNotTestedDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ReasonNotTestedDescriptorId)
        )
        , ReasonNotTestedDescriptorId
    FROM EdFi_Ods_2021.edfi.ReasonNotTestedDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ReasonNotTestedDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ReasonNotTestedDescriptorId)
            )
    )

    
    INSERT INTO edfi.RecognitionTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , RecognitionTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, RecognitionTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RecognitionTypeDescriptorId)
        )
        , RecognitionTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.RecognitionTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RecognitionTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.RelationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , RelationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, RelationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RelationDescriptorId)
        )
        , RelationDescriptorId
    FROM EdFi_Ods_2021.edfi.RelationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RelationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RelationDescriptorId)
            )
    )

    
    INSERT INTO edfi.RepeatIdentifierDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , RepeatIdentifierDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, RepeatIdentifierDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RepeatIdentifierDescriptorId)
        )
        , RepeatIdentifierDescriptorId
    FROM EdFi_Ods_2021.edfi.RepeatIdentifierDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RepeatIdentifierDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RepeatIdentifierDescriptorId)
            )
    )

    
    INSERT INTO edfi.ReportCard (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , GradingPeriodHashKey
        , StudentHashKey
        -- Primary key columns
        , EducationOrganizationId
                , GradingPeriodDescriptorId
                , GradingPeriodSchoolId
                , GradingPeriodSchoolYear
                , GradingPeriodSequence
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodSequence)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , EducationOrganizationId
        , GradingPeriodDescriptorId
        , GradingPeriodSchoolId
        , GradingPeriodSchoolYear
        , GradingPeriodSequence
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.ReportCard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ReportCard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.ReportCard_Attributes AS target
        USING EdFi_Ods_2021.edfi.ReportCard AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.GPACumulative = source.GPACumulative
            , target.GPAGivenGradingPeriod = source.GPAGivenGradingPeriod
            , target.NumberOfDaysAbsent = source.NumberOfDaysAbsent
            , target.NumberOfDaysInAttendance = source.NumberOfDaysInAttendance
            , target.NumberOfDaysTardy = source.NumberOfDaysTardy
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , GPACumulative
                , GPAGivenGradingPeriod
                , NumberOfDaysAbsent
                , NumberOfDaysInAttendance
                , NumberOfDaysTardy
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , GPACumulative
                , GPAGivenGradingPeriod
                , NumberOfDaysAbsent
                , NumberOfDaysInAttendance
                , NumberOfDaysTardy
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.ReportCardGrade (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradeTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, GradeTypeDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, GradingPeriodSequence)
            + '|' + LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.ReportCardGrade source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ReportCardGrade target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradeTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.GradeHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.GradeTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.ReportCardGradePointAverage (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradePointAverageTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradePointAverageTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradePointAverageTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.ReportCardGradePointAverage source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ReportCardGradePointAverage target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.GradePointAverageTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
            )
    )


        MERGE edfi.ReportCardGradePointAverage_Attributes AS target
        USING EdFi_Ods_2021.edfi.ReportCardGradePointAverage AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.GradePointAverageTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.GradePointAverageValue = source.GradePointAverageValue
            , target.IsCumulative = source.IsCumulative
            , target.MaxGradePointAverageValue = source.MaxGradePointAverageValue
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , GradePointAverageTypeDescriptorHashKey
                -- Attributes
                , GradePointAverageValue
                , IsCumulative
                , MaxGradePointAverageValue
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
                )
                -- Attributes
                , GradePointAverageValue
                , IsCumulative
                , MaxGradePointAverageValue
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.ReportCardStudentCompetencyObjective (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StudentCompetencyObjectiveHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + Objective
                    + '|' + CONVERT(nvarchar, ObjectiveEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ObjectiveGradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, GradingPeriodSequence)
            + '|' + Objective
            + '|' + CONVERT(nvarchar, ObjectiveEducationOrganizationId)
            + '|' + CONVERT(nvarchar, ObjectiveGradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.ReportCardStudentCompetencyObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ReportCardStudentCompetencyObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.Objective
            + '|' + CONVERT(nvarchar, source.ObjectiveEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StudentCompetencyObjectiveHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + source.Objective
                + '|' + CONVERT(nvarchar, source.ObjectiveEducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.ReportCardStudentLearningObjective (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StudentLearningObjectiveHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + LearningObjectiveId
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, GradingPeriodSequence)
            + '|' + LearningObjectiveId
            + '|' + Namespace
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.ReportCardStudentLearningObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ReportCardStudentLearningObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.LearningObjectiveId
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StudentLearningObjectiveHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + source.LearningObjectiveId
                + '|' + source.Namespace
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.ReporterDescriptionDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ReporterDescriptionDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ReporterDescriptionDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ReporterDescriptionDescriptorId)
        )
        , ReporterDescriptionDescriptorId
    FROM EdFi_Ods_2021.edfi.ReporterDescriptionDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ReporterDescriptionDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ReporterDescriptionDescriptorId)
            )
    )

    
    INSERT INTO edfi.ResidencyStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ResidencyStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ResidencyStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ResidencyStatusDescriptorId)
        )
        , ResidencyStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.ResidencyStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ResidencyStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ResidencyStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.ResponseIndicatorDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ResponseIndicatorDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ResponseIndicatorDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ResponseIndicatorDescriptorId)
        )
        , ResponseIndicatorDescriptorId
    FROM EdFi_Ods_2021.edfi.ResponseIndicatorDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ResponseIndicatorDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ResponseIndicatorDescriptorId)
            )
    )

    
    INSERT INTO edfi.ResponsibilityDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ResponsibilityDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ResponsibilityDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ResponsibilityDescriptorId)
        )
        , ResponsibilityDescriptorId
    FROM EdFi_Ods_2021.edfi.ResponsibilityDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ResponsibilityDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ResponsibilityDescriptorId)
            )
    )

    
    INSERT INTO edfi.RestraintEvent (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        , StudentHashKey
        -- Primary key columns
        , RestraintEventIdentifier
                , SchoolId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            RestraintEventIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , RestraintEventIdentifier
        , SchoolId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.RestraintEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RestraintEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.RestraintEventIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.RestraintEvent_Attributes AS target
        USING EdFi_Ods_2021.edfi.RestraintEvent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.RestraintEventIdentifier
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EventDate = source.EventDate
                -- References
            , target.EducationalEnvironmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EventDate
                -- References
                , EducationalEnvironmentDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.RestraintEventIdentifier
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EventDate
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.RestraintEventProgram (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ProgramHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + RestraintEventIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.RestraintEventProgram source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RestraintEventProgram target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + source.RestraintEventIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.ProgramHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
    )

    INSERT INTO edfi.RestraintEventReason (
        HashKey
        -- Identifying references (for aggregate child entity)
        , RestraintEventReasonDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            RestraintEventIdentifier
                    + '|' + CONVERT(nvarchar, RestraintEventReasonDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RestraintEventReasonDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.RestraintEventReason source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RestraintEventReason target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.RestraintEventIdentifier
            + '|' + CONVERT(nvarchar, source.RestraintEventReasonDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.RestraintEventReasonDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.RestraintEventReasonDescriptorId)
            )
    )

    INSERT INTO edfi.RestraintEventReasonDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , RestraintEventReasonDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, RestraintEventReasonDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RestraintEventReasonDescriptorId)
        )
        , RestraintEventReasonDescriptorId
    FROM EdFi_Ods_2021.edfi.RestraintEventReasonDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RestraintEventReasonDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RestraintEventReasonDescriptorId)
            )
    )

    
    INSERT INTO edfi.ResultDatatypeTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ResultDatatypeTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ResultDatatypeTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ResultDatatypeTypeDescriptorId)
        )
        , ResultDatatypeTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.ResultDatatypeTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ResultDatatypeTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.RetestIndicatorDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , RetestIndicatorDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, RetestIndicatorDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RetestIndicatorDescriptorId)
        )
        , RetestIndicatorDescriptorId
    FROM EdFi_Ods_2021.edfi.RetestIndicatorDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.RetestIndicatorDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RetestIndicatorDescriptorId)
            )
    )

    
    INSERT INTO edfi.School (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , SchoolId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , SchoolId
    FROM EdFi_Ods_2021.edfi.School source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.School target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolId)
            )
    )

        MERGE edfi.School_Attributes AS target
        USING EdFi_Ods_2021.edfi.School AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.SchoolId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- References
            target.AdministrativeFundingControlDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdministrativeFundingControlDescriptorId)
                )
            , target.CharterApprovalAgencyTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CharterApprovalAgencyTypeDescriptorId)
                )
            , target.CharterStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CharterStatusDescriptorId)
                )
            , target.InternetAccessDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InternetAccessDescriptorId)
                )
            , target.LocalEducationAgencyHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocalEducationAgencyId)
                )
            , target.MagnetSpecialProgramEmphasisSchoolDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MagnetSpecialProgramEmphasisSchoolDescriptorId)
                )
            , target.SchoolTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolTypeDescriptorId)
                )
            , target.CharterApprovalSchoolYearTypeHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CharterApprovalSchoolYear)
                )
            , target.TitleIPartASchoolDesignationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TitleIPartASchoolDesignationDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , AdministrativeFundingControlDescriptorHashKey
                , CharterApprovalAgencyTypeDescriptorHashKey
                , CharterStatusDescriptorHashKey
                , InternetAccessDescriptorHashKey
                , LocalEducationAgencyHashKey
                , MagnetSpecialProgramEmphasisSchoolDescriptorHashKey
                , SchoolTypeDescriptorHashKey
                , CharterApprovalSchoolYearTypeHashKey
                , TitleIPartASchoolDesignationDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolId)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdministrativeFundingControlDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CharterApprovalAgencyTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CharterStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InternetAccessDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocalEducationAgencyId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MagnetSpecialProgramEmphasisSchoolDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CharterApprovalSchoolYear)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TitleIPartASchoolDesignationDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.SchoolCategory (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SchoolCategoryDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolCategoryDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.SchoolCategory source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SchoolCategory target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.SchoolCategoryDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SchoolCategoryDescriptorId)
            )
    )

    INSERT INTO edfi.SchoolGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.SchoolGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SchoolGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.SchoolCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SchoolCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolCategoryDescriptorId)
        )
        , SchoolCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.SchoolCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SchoolCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.SchoolChoiceImplementStatusDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SchoolChoiceImplementStatusDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolChoiceImplementStatusDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolChoiceImplementStatusDescriptorId)
        )
        , SchoolChoiceImplementStatusDescriptorId
    FROM EdFi_Ods_2021.edfi.SchoolChoiceImplementStatusDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SchoolChoiceImplementStatusDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolChoiceImplementStatusDescriptorId)
            )
    )

    
    INSERT INTO edfi.SchoolFoodServiceProgramServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SchoolFoodServiceProgramServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolFoodServiceProgramServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolFoodServiceProgramServiceDescriptorId)
        )
        , SchoolFoodServiceProgramServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.SchoolFoodServiceProgramServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SchoolFoodServiceProgramServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolFoodServiceProgramServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.SchoolTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SchoolTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolTypeDescriptorId)
        )
        , SchoolTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.SchoolTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SchoolTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.SchoolYearType (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , SchoolYear
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
        -- Identifying references
        , SchoolYear
    FROM EdFi_Ods_2021.edfi.SchoolYearType source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SchoolYearType target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolYear)
            )
    )

        MERGE edfi.SchoolYearType_Attributes AS target
        USING EdFi_Ods_2021.edfi.SchoolYearType AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.SchoolYear)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.CurrentSchoolYear = source.CurrentSchoolYear
            , target.SchoolYearDescription = source.SchoolYearDescription
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , CurrentSchoolYear
                , SchoolYearDescription
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
                , @schoolYearContext
                -- Attributes
                , CurrentSchoolYear
                , SchoolYearDescription
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.Section (
        HashKey
        -- Identifying references (for aggregate root entity)
        , CourseOfferingHashKey
        -- Primary key columns
        , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
        )
    SELECT 
        HASHBYTES('sha1', 
            LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SessionName
        )
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
    FROM EdFi_Ods_2021.edfi.Section source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Section target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
    )

        MERGE edfi.Section_Attributes AS target
        USING EdFi_Ods_2021.edfi.Section AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AvailableCreditConversion = source.AvailableCreditConversion
            , target.AvailableCredits = source.AvailableCredits
            , target.OfficialAttendancePeriod = source.OfficialAttendancePeriod
            , target.SectionName = source.SectionName
            , target.SequenceOfCourse = source.SequenceOfCourse
                -- References
            , target.AvailableCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AvailableCreditTypeDescriptorId)
                )
            , target.EducationalEnvironmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
            , target.InstructionLanguageDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InstructionLanguageDescriptorId)
                )
            , target.LocationHashKey = HASHBYTES('sha1', 
                source.LocationClassroomIdentificationCode
                + '|' + CONVERT(nvarchar, source.LocationSchoolId)
                )
            , target.MediumOfInstructionDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MediumOfInstructionDescriptorId)
                )
            , target.PopulationServedDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
                )
            , target.LocationSchoolHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocationSchoolId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AvailableCreditConversion
                , AvailableCredits
                , OfficialAttendancePeriod
                , SectionName
                , SequenceOfCourse
                -- References
                , AvailableCreditTypeDescriptorHashKey
                , EducationalEnvironmentDescriptorHashKey
                , InstructionLanguageDescriptorHashKey
                , LocationHashKey
                , MediumOfInstructionDescriptorHashKey
                , PopulationServedDescriptorHashKey
                , LocationSchoolHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                )
                , @schoolYearContext
                -- Attributes
                , AvailableCreditConversion
                , AvailableCredits
                , OfficialAttendancePeriod
                , SectionName
                , SequenceOfCourse
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AvailableCreditTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InstructionLanguageDescriptorId)
                )
                , HASHBYTES('sha1', 
                source.LocationClassroomIdentificationCode
                + '|' + CONVERT(nvarchar, source.LocationSchoolId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MediumOfInstructionDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocationSchoolId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.SectionCharacteristic (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SectionCharacteristicDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, SectionCharacteristicDescriptorId)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SectionCharacteristicDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.SectionCharacteristic source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SectionCharacteristic target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.SectionCharacteristicDescriptorId)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
            AND target.SectionCharacteristicDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SectionCharacteristicDescriptorId)
            )
    )

    INSERT INTO edfi.SectionClassPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ClassPeriodHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            ClassPeriodName
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            ClassPeriodName
            + '|' + CONVERT(nvarchar, SchoolId)
        )
    FROM EdFi_Ods_2021.edfi.SectionClassPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SectionClassPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ClassPeriodName
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
            AND target.ClassPeriodHashKey = HASHBYTES('sha1',
                source.ClassPeriodName
                + '|' + CONVERT(nvarchar, source.SchoolId)
            )
    )

    INSERT INTO edfi.SectionCourseLevelCharacteristic (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CourseLevelCharacteristicDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseLevelCharacteristicDescriptorId)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CourseLevelCharacteristicDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.SectionCourseLevelCharacteristic source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SectionCourseLevelCharacteristic target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CourseLevelCharacteristicDescriptorId)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
            AND target.CourseLevelCharacteristicDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CourseLevelCharacteristicDescriptorId)
            )
    )

    INSERT INTO edfi.SectionOfferedGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.SectionOfferedGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SectionOfferedGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.SectionProgram (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ProgramHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + LocalCourseCode
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.SectionProgram source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SectionProgram target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.LocalCourseCode
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
            AND target.ProgramHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
    )

    INSERT INTO edfi.SectionAttendanceTakenEvent (
        HashKey
        -- Identifying references (for aggregate root entity)
        , CalendarDateHashKey
        , SectionHashKey
        -- Primary key columns
        , CalendarCode
                , Date
                , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
        )
    SELECT 
        HASHBYTES('sha1', 
            CalendarCode
                    + '|' + CONVERT(nvarchar, Date, 23)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CalendarCode
            + '|' + CONVERT(nvarchar, Date, 23)
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
        )
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
        , CalendarCode
        , Date
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
    FROM EdFi_Ods_2021.edfi.SectionAttendanceTakenEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SectionAttendanceTakenEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CalendarCode
            + '|' + CONVERT(nvarchar, source.Date, 23)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            )
    )

        MERGE edfi.SectionAttendanceTakenEvent_Attributes AS target
        USING EdFi_Ods_2021.edfi.SectionAttendanceTakenEvent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.CalendarCode
        + '|' + CONVERT(nvarchar, source.Date, 23)
        + '|' + source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EventDate = source.EventDate
                -- References
            , target.StaffHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EventDate
                -- References
                , StaffHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.CalendarCode
                + '|' + CONVERT(nvarchar, source.Date, 23)
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                )
                , @schoolYearContext
                -- Attributes
                , EventDate
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.SectionCharacteristicDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SectionCharacteristicDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SectionCharacteristicDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SectionCharacteristicDescriptorId)
        )
        , SectionCharacteristicDescriptorId
    FROM EdFi_Ods_2021.edfi.SectionCharacteristicDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SectionCharacteristicDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SectionCharacteristicDescriptorId)
            )
    )

    
    INSERT INTO edfi.SeparationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SeparationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SeparationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SeparationDescriptorId)
        )
        , SeparationDescriptorId
    FROM EdFi_Ods_2021.edfi.SeparationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SeparationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SeparationDescriptorId)
            )
    )

    
    INSERT INTO edfi.SeparationReasonDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SeparationReasonDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SeparationReasonDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SeparationReasonDescriptorId)
        )
        , SeparationReasonDescriptorId
    FROM EdFi_Ods_2021.edfi.SeparationReasonDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SeparationReasonDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SeparationReasonDescriptorId)
            )
    )

    
    INSERT INTO edfi.ServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , ServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ServiceDescriptorId)
        )
        , ServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.ServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.ServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.Session (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        , SchoolYearTypeHashKey
        -- Primary key columns
        , SchoolId
                , SchoolYear
                , SessionName
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SessionName
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
        , SchoolId
        , SchoolYear
        , SessionName
    FROM EdFi_Ods_2021.edfi.Session source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Session target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SessionName
            )
    )

        MERGE edfi.Session_Attributes AS target
        USING EdFi_Ods_2021.edfi.Session AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SessionName
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.TotalInstructionalDays = source.TotalInstructionalDays
                -- References
            , target.TermDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TermDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , TotalInstructionalDays
                -- References
                , TermDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SessionName
                )
                , @schoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , TotalInstructionalDays
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TermDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.SessionAcademicWeek (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicWeekHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SessionName
                    + '|' + WeekIdentifier
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
            + '|' + WeekIdentifier
        )
    FROM EdFi_Ods_2021.edfi.SessionAcademicWeek source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SessionAcademicWeek target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SessionName
            + '|' + source.WeekIdentifier
            )
            AND target.AcademicWeekHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SchoolId)
                + '|' + source.WeekIdentifier
            )
    )

    INSERT INTO edfi.SessionGradingPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradingPeriodHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, PeriodSequence)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, PeriodSequence)
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
        )
    FROM EdFi_Ods_2021.edfi.SessionGradingPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SessionGradingPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.PeriodSequence)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SessionName
            )
            AND target.GradingPeriodHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.PeriodSequence)
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
            )
    )

    INSERT INTO edfi.SexDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SexDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SexDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SexDescriptorId)
        )
        , SexDescriptorId
    FROM EdFi_Ods_2021.edfi.SexDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SexDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SexDescriptorId)
            )
    )

    
    INSERT INTO edfi.SourceSystemDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SourceSystemDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SourceSystemDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SourceSystemDescriptorId)
        )
        , SourceSystemDescriptorId
    FROM EdFi_Ods_2021.edfi.SourceSystemDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SourceSystemDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SourceSystemDescriptorId)
            )
    )

    
    INSERT INTO edfi.SpecialEducationProgramServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SpecialEducationProgramServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SpecialEducationProgramServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SpecialEducationProgramServiceDescriptorId)
        )
        , SpecialEducationProgramServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.SpecialEducationProgramServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SpecialEducationProgramServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.SpecialEducationSettingDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SpecialEducationSettingDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SpecialEducationSettingDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SpecialEducationSettingDescriptorId)
        )
        , SpecialEducationSettingDescriptorId
    FROM EdFi_Ods_2021.edfi.SpecialEducationSettingDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SpecialEducationSettingDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SpecialEducationSettingDescriptorId)
            )
    )

    
    INSERT INTO edfi.Staff (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.Staff source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Staff target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.Staff_Attributes AS target
        USING EdFi_Ods_2021.edfi.Staff AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BirthDate = source.BirthDate
            , target.FirstName = source.FirstName
            , target.GenerationCodeSuffix = source.GenerationCodeSuffix
            , target.HighlyQualifiedTeacher = source.HighlyQualifiedTeacher
            , target.HispanicLatinoEthnicity = source.HispanicLatinoEthnicity
            , target.LastSurname = source.LastSurname
            , target.LoginId = source.LoginId
            , target.MaidenName = source.MaidenName
            , target.MiddleName = source.MiddleName
            , target.PersonalTitlePrefix = source.PersonalTitlePrefix
            , target.StaffUniqueId = source.StaffUniqueId
            , target.YearsOfPriorProfessionalExperience = source.YearsOfPriorProfessionalExperience
            , target.YearsOfPriorTeachingExperience = source.YearsOfPriorTeachingExperience
                -- References
            , target.CitizenshipStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CitizenshipStatusDescriptorId)
                )
            , target.HighestCompletedLevelOfEducationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.HighestCompletedLevelOfEducationDescriptorId)
                )
            , target.OldEthnicityDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OldEthnicityDescriptorId)
                )
            , target.PersonHashKey = HASHBYTES('sha1', 
                source.PersonId
                + '|' + CONVERT(nvarchar, source.SourceSystemDescriptorId)
                )
            , target.SexDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SexDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BirthDate
                , FirstName
                , GenerationCodeSuffix
                , HighlyQualifiedTeacher
                , HispanicLatinoEthnicity
                , LastSurname
                , LoginId
                , MaidenName
                , MiddleName
                , PersonalTitlePrefix
                , StaffUniqueId
                , YearsOfPriorProfessionalExperience
                , YearsOfPriorTeachingExperience
                -- References
                , CitizenshipStatusDescriptorHashKey
                , HighestCompletedLevelOfEducationDescriptorHashKey
                , OldEthnicityDescriptorHashKey
                , PersonHashKey
                , SexDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , BirthDate
                , FirstName
                , GenerationCodeSuffix
                , HighlyQualifiedTeacher
                , HispanicLatinoEthnicity
                , LastSurname
                , LoginId
                , MaidenName
                , MiddleName
                , PersonalTitlePrefix
                , StaffUniqueId
                , YearsOfPriorProfessionalExperience
                , YearsOfPriorTeachingExperience
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CitizenshipStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.HighestCompletedLevelOfEducationDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OldEthnicityDescriptorId)
                )
                , HASHBYTES('sha1', 
                source.PersonId
                + '|' + CONVERT(nvarchar, source.SourceSystemDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SexDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AddressTypeDescriptorHashKey
        , StateAbbreviationDescriptorHashKey
        -- Contextual primary key
        , City
        , PostalCode
        , StreetNumberName
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
            , City
            , PostalCode
            , StreetNumberName
    FROM EdFi_Ods_2021.edfi.StaffAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
    )


        MERGE edfi.StaffAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
        + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            -- Contextual primary key
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.ApartmentRoomSuiteNumber = source.ApartmentRoomSuiteNumber
            , target.BuildingSiteNumber = source.BuildingSiteNumber
            , target.CongressionalDistrict = source.CongressionalDistrict
            , target.CountyFIPSCode = source.CountyFIPSCode
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
            , target.NameOfCounty = source.NameOfCounty
                -- References
            , target.LocaleDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AddressTypeDescriptorHashKey
                , StateAbbreviationDescriptorHashKey
                -- Contextual primary key
                , City
                , PostalCode
                , StreetNumberName
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                -- References
                , LocaleDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
                -- Contextual primary key
                , City
                , PostalCode
                , StreetNumberName
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffAddressPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , BeginDate
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + City
                    + '|' + PostalCode
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
                    + '|' + StreetNumberName
        )
            , BeginDate
    FROM EdFi_Ods_2021.edfi.StaffAddressPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffAddressPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + source.City
            + '|' + source.PostalCode
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            + '|' + source.StreetNumberName
            )
            AND target.BeginDate = source.BeginDate
    )


        MERGE edfi.StaffAddressPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffAddressPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + source.City
        + '|' + source.PostalCode
        + '|' + CONVERT(nvarchar, source.StaffUSI)
        + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
        + '|' + source.StreetNumberName
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.BeginDate = source.BeginDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + source.City
                + '|' + source.PostalCode
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                + '|' + source.StreetNumberName
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffCredential (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CredentialHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CredentialIdentifier
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, StateOfIssueStateAbbreviationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CredentialIdentifier
            + '|' + CONVERT(nvarchar, StateOfIssueStateAbbreviationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffCredential source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffCredential target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CredentialIdentifier
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
            )
            AND target.CredentialHashKey = HASHBYTES('sha1',
                source.CredentialIdentifier
                + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
            )
    )

    INSERT INTO edfi.StaffElectronicMail (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ElectronicMailTypeDescriptorHashKey
        -- Contextual primary key
        , ElectronicMailAddress
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ElectronicMailTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ElectronicMailTypeDescriptorId)
        )
            , ElectronicMailAddress
    FROM EdFi_Ods_2021.edfi.StaffElectronicMail source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffElectronicMail target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.ElectronicMailTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            )
            AND target.ElectronicMailAddress = source.ElectronicMailAddress
    )


        MERGE edfi.StaffElectronicMail_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffElectronicMail AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.ElectronicMailTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            )
            -- Contextual primary key
            AND target.ElectronicMailAddress = source.ElectronicMailAddress
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.PrimaryEmailAddressIndicator = source.PrimaryEmailAddressIndicator
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , ElectronicMailTypeDescriptorHashKey
                -- Contextual primary key
                , ElectronicMailAddress
                -- Attributes
                , DoNotPublishIndicator
                , PrimaryEmailAddressIndicator
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
                )
                -- Contextual primary key
                , ElectronicMailAddress
                -- Attributes
                , DoNotPublishIndicator
                , PrimaryEmailAddressIndicator
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffIdentificationCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StaffIdentificationSystemDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffIdentificationSystemDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffIdentificationSystemDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffIdentificationCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffIdentificationCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffIdentificationSystemDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.StaffIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StaffIdentificationSystemDescriptorId)
            )
    )


        MERGE edfi.StaffIdentificationCode_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffIdentificationCode AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.StaffIdentificationSystemDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.StaffIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffIdentificationSystemDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AssigningOrganizationIdentificationCode = source.AssigningOrganizationIdentificationCode
            , target.IdentificationCode = source.IdentificationCode
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , StaffIdentificationSystemDescriptorHashKey
                -- Attributes
                , AssigningOrganizationIdentificationCode
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffIdentificationSystemDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffIdentificationSystemDescriptorId)
                )
                -- Attributes
                , AssigningOrganizationIdentificationCode
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffIdentificationDocument (
        HashKey
        -- Identifying references (for aggregate child entity)
        , IdentificationDocumentUseDescriptorHashKey
        , PersonalInformationVerificationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
                    + '|' + CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffIdentificationDocument source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffIdentificationDocument target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
    )


        MERGE edfi.StaffIdentificationDocument_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffIdentificationDocument AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
        + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DocumentExpirationDate = source.DocumentExpirationDate
            , target.DocumentTitle = source.DocumentTitle
            , target.IssuerDocumentIdentificationCode = source.IssuerDocumentIdentificationCode
            , target.IssuerName = source.IssuerName
                -- References
            , target.IssuerCountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , IdentificationDocumentUseDescriptorHashKey
                , PersonalInformationVerificationDescriptorHashKey
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , IssuerCountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                )
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffInternationalAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AddressTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffInternationalAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffInternationalAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
    )


        MERGE edfi.StaffInternationalAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffInternationalAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AddressLine1 = source.AddressLine1
            , target.AddressLine2 = source.AddressLine2
            , target.AddressLine3 = source.AddressLine3
            , target.AddressLine4 = source.AddressLine4
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
                -- References
            , target.CountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AddressTypeDescriptorHashKey
                -- Attributes
                , AddressLine1
                , AddressLine2
                , AddressLine3
                , AddressLine4
                , BeginDate
                , EndDate
                , Latitude
                , Longitude
                -- References
                , CountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                -- Attributes
                , AddressLine1
                , AddressLine2
                , AddressLine3
                , AddressLine4
                , BeginDate
                , EndDate
                , Latitude
                , Longitude
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffLanguage (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffLanguage source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffLanguage target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LanguageDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.LanguageDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageDescriptorId)
            )
    )

    INSERT INTO edfi.StaffLanguageUse (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageUseDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
                    + '|' + CONVERT(nvarchar, LanguageUseDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageUseDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffLanguageUse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffLanguageUse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LanguageDescriptorId)
            + '|' + CONVERT(nvarchar, source.LanguageUseDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.LanguageUseDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageUseDescriptorId)
            )
    )

    INSERT INTO edfi.StaffOtherName (
        HashKey
        -- Identifying references (for aggregate child entity)
        , OtherNameTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, OtherNameTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, OtherNameTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffOtherName source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffOtherName target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.OtherNameTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            )
    )


        MERGE edfi.StaffOtherName_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffOtherName AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.OtherNameTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.FirstName = source.FirstName
            , target.GenerationCodeSuffix = source.GenerationCodeSuffix
            , target.LastSurname = source.LastSurname
            , target.MiddleName = source.MiddleName
            , target.PersonalTitlePrefix = source.PersonalTitlePrefix
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , OtherNameTypeDescriptorHashKey
                -- Attributes
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , MiddleName
                , PersonalTitlePrefix
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
                )
                -- Attributes
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , MiddleName
                , PersonalTitlePrefix
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffPersonalIdentificationDocument (
        HashKey
        -- Identifying references (for aggregate child entity)
        , IdentificationDocumentUseDescriptorHashKey
        , PersonalInformationVerificationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
                    + '|' + CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffPersonalIdentificationDocument source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffPersonalIdentificationDocument target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
    )


        MERGE edfi.StaffPersonalIdentificationDocument_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffPersonalIdentificationDocument AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
        + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DocumentExpirationDate = source.DocumentExpirationDate
            , target.DocumentTitle = source.DocumentTitle
            , target.IssuerDocumentIdentificationCode = source.IssuerDocumentIdentificationCode
            , target.IssuerName = source.IssuerName
                -- References
            , target.IssuerCountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , IdentificationDocumentUseDescriptorHashKey
                , PersonalInformationVerificationDescriptorHashKey
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , IssuerCountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                )
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffRace (
        HashKey
        -- Identifying references (for aggregate child entity)
        , RaceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, RaceDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RaceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffRace source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffRace target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RaceDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.RaceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.RaceDescriptorId)
            )
    )

    INSERT INTO edfi.StaffRecognition (
        HashKey
        -- Identifying references (for aggregate child entity)
        , RecognitionTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, RecognitionTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RecognitionTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffRecognition source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffRecognition target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.RecognitionTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
            )
    )


        MERGE edfi.StaffRecognition_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffRecognition AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.RecognitionTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AchievementCategorySystem = source.AchievementCategorySystem
            , target.AchievementTitle = source.AchievementTitle
            , target.Criteria = source.Criteria
            , target.CriteriaURL = source.CriteriaURL
            , target.EvidenceStatement = source.EvidenceStatement
            , target.ImageURL = source.ImageURL
            , target.IssuerName = source.IssuerName
            , target.IssuerOriginURL = source.IssuerOriginURL
            , target.RecognitionAwardDate = source.RecognitionAwardDate
            , target.RecognitionAwardExpiresDate = source.RecognitionAwardExpiresDate
            , target.RecognitionDescription = source.RecognitionDescription
                -- References
            , target.AchievementCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , RecognitionTypeDescriptorHashKey
                -- Attributes
                , AchievementCategorySystem
                , AchievementTitle
                , Criteria
                , CriteriaURL
                , EvidenceStatement
                , ImageURL
                , IssuerName
                , IssuerOriginURL
                , RecognitionAwardDate
                , RecognitionAwardExpiresDate
                , RecognitionDescription
                -- References
                , AchievementCategoryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
                )
                -- Attributes
                , AchievementCategorySystem
                , AchievementTitle
                , Criteria
                , CriteriaURL
                , EvidenceStatement
                , ImageURL
                , IssuerName
                , IssuerOriginURL
                , RecognitionAwardDate
                , RecognitionAwardExpiresDate
                , RecognitionDescription
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffTelephone (
        HashKey
        -- Identifying references (for aggregate child entity)
        , TelephoneNumberTypeDescriptorHashKey
        -- Contextual primary key
        , TelephoneNumber
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
            , TelephoneNumber
    FROM EdFi_Ods_2021.edfi.StaffTelephone source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffTelephone target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.TelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.TelephoneNumber = source.TelephoneNumber
    )


        MERGE edfi.StaffTelephone_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffTelephone AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.StaffUSI)
        + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.TelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            -- Contextual primary key
            AND target.TelephoneNumber = source.TelephoneNumber
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.OrderOfPriority = source.OrderOfPriority
            , target.TextMessageCapabilityIndicator = source.TextMessageCapabilityIndicator
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , TelephoneNumberTypeDescriptorHashKey
                -- Contextual primary key
                , TelephoneNumber
                -- Attributes
                , DoNotPublishIndicator
                , OrderOfPriority
                , TextMessageCapabilityIndicator
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
                )
                -- Contextual primary key
                , TelephoneNumber
                -- Attributes
                , DoNotPublishIndicator
                , OrderOfPriority
                , TextMessageCapabilityIndicator
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffTribalAffiliation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , TribalAffiliationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, TribalAffiliationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TribalAffiliationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffTribalAffiliation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffTribalAffiliation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.TribalAffiliationDescriptorId)
            )
            AND target.TribalAffiliationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.TribalAffiliationDescriptorId)
            )
    )

    INSERT INTO edfi.StaffVisa (
        HashKey
        -- Identifying references (for aggregate child entity)
        , VisaDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, VisaDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, VisaDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffVisa source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffVisa target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.VisaDescriptorId)
            )
            AND target.VisaDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.VisaDescriptorId)
            )
    )

    INSERT INTO edfi.StaffAbsenceEvent (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AbsenceEventCategoryDescriptorHashKey
        , StaffHashKey
        -- Primary key columns
        , AbsenceEventCategoryDescriptorId
                , EventDate
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AbsenceEventCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EventDate, 23)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AbsenceEventCategoryDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , AbsenceEventCategoryDescriptorId
        , EventDate
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffAbsenceEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffAbsenceEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AbsenceEventCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EventDate, 23)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffAbsenceEvent_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffAbsenceEvent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AbsenceEventCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.EventDate, 23)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AbsenceEventReason = source.AbsenceEventReason
            , target.HoursAbsent = source.HoursAbsent
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AbsenceEventReason
                , HoursAbsent
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AbsenceEventCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.EventDate, 23)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , AbsenceEventReason
                , HoursAbsent
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffClassificationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , StaffClassificationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffClassificationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffClassificationDescriptorId)
        )
        , StaffClassificationDescriptorId
    FROM EdFi_Ods_2021.edfi.StaffClassificationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffClassificationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffClassificationDescriptorId)
            )
    )

    
    INSERT INTO edfi.StaffCohortAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , CohortHashKey
        , StaffHashKey
        -- Primary key columns
        , BeginDate
                , CohortIdentifier
                , EducationOrganizationId
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CohortIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CohortIdentifier
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , BeginDate
        , CohortIdentifier
        , EducationOrganizationId
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffCohortAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffCohortAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + source.CohortIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffCohortAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffCohortAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + source.CohortIdentifier
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
            , target.StudentRecordAccess = source.StudentRecordAccess
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                , StudentRecordAccess
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + source.CohortIdentifier
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                , StudentRecordAccess
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffDisciplineIncidentAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DisciplineIncidentHashKey
        , StaffHashKey
        -- Primary key columns
        , IncidentIdentifier
                , SchoolId
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            IncidentIdentifier
            + '|' + CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , IncidentIdentifier
        , SchoolId
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffDisciplineIncidentAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffDisciplineIncidentAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

    
    INSERT INTO edfi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DisciplineIncidentParticipationCodeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineIncidentParticipationCodeDescriptorId)
                    + '|' + IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisciplineIncidentParticipationCodeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisciplineIncidentParticipationCodeDescriptorId)
            + '|' + source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.DisciplineIncidentParticipationCodeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DisciplineIncidentParticipationCodeDescriptorId)
            )
    )

    INSERT INTO edfi.StaffEducationOrganizationAssignmentAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , StaffHashKey
        , StaffClassificationDescriptorHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , StaffClassificationDescriptorId
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StaffClassificationDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffClassificationDescriptorId)
        )
        , BeginDate
        , EducationOrganizationId
        , StaffClassificationDescriptorId
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffEducationOrganizationAssignmentAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffEducationOrganizationAssignmentAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StaffClassificationDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffEducationOrganizationAssignmentAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffEducationOrganizationAssignmentAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StaffClassificationDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
            , target.OrderOfAssignment = source.OrderOfAssignment
            , target.PositionTitle = source.PositionTitle
                -- References
            , target.CredentialHashKey = HASHBYTES('sha1', 
                source.CredentialIdentifier
                + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
                )
            , target.EmploymentStaffEducationOrganizationEmploymentAssociationHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EmploymentEducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.EmploymentStatusDescriptorId)
                + '|' + CONVERT(nvarchar, source.EmploymentHireDate, 23)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                , OrderOfAssignment
                , PositionTitle
                -- References
                , CredentialHashKey
                , EmploymentStaffEducationOrganizationEmploymentAssociationHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StaffClassificationDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                , OrderOfAssignment
                , PositionTitle
                -- References
                , HASHBYTES('sha1', 
                source.CredentialIdentifier
                + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EmploymentEducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.EmploymentStatusDescriptorId)
                + '|' + CONVERT(nvarchar, source.EmploymentHireDate, 23)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffEducationOrganizationContactAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , StaffHashKey
        -- Primary key columns
        , ContactTitle
                , EducationOrganizationId
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            ContactTitle
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , ContactTitle
        , EducationOrganizationId
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffEducationOrganizationContactAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffEducationOrganizationContactAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContactTitle
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffEducationOrganizationContactAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffEducationOrganizationContactAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.ContactTitle
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.ElectronicMailAddress = source.ElectronicMailAddress
                -- References
            , target.ContactTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ContactTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , ElectronicMailAddress
                -- References
                , ContactTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.ContactTitle
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , ElectronicMailAddress
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ContactTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffEducationOrganizationContactAssociationAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            ContactTitle
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
    FROM EdFi_Ods_2021.edfi.StaffEducationOrganizationContactAssociationAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffEducationOrganizationContactAssociationAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContactTitle
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )


        MERGE edfi.StaffEducationOrganizationContactAssociationAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffEducationOrganizationContactAssociationAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.ContactTitle
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.ApartmentRoomSuiteNumber = source.ApartmentRoomSuiteNumber
            , target.BuildingSiteNumber = source.BuildingSiteNumber
            , target.City = source.City
            , target.CongressionalDistrict = source.CongressionalDistrict
            , target.CountyFIPSCode = source.CountyFIPSCode
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
            , target.NameOfCounty = source.NameOfCounty
            , target.PostalCode = source.PostalCode
            , target.StreetNumberName = source.StreetNumberName
                -- References
            , target.AddressTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
            , target.LocaleDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
            , target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , City
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                , PostalCode
                , StreetNumberName
                -- References
                , AddressTypeDescriptorHashKey
                , LocaleDescriptorHashKey
                , StateAbbreviationDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.ContactTitle
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , City
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                , PostalCode
                , StreetNumberName
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffEducationOrganizationContactAssociationAddressPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , BeginDate
    )
    SELECT
        HASHBYTES('sha1', 
            ContactTitle
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
            , BeginDate
    FROM EdFi_Ods_2021.edfi.StaffEducationOrganizationContactAssociationAddressPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffEducationOrganizationContactAssociationAddressPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContactTitle
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.BeginDate = source.BeginDate
    )


        MERGE edfi.StaffEducationOrganizationContactAssociationAddressPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffEducationOrganizationContactAssociationAddressPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.ContactTitle
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.BeginDate = source.BeginDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.ContactTitle
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffEducationOrganizationContactAssociationTelephone (
        HashKey
        -- Identifying references (for aggregate child entity)
        , TelephoneNumberTypeDescriptorHashKey
        -- Contextual primary key
        , TelephoneNumber
    )
    SELECT
        HASHBYTES('sha1', 
            ContactTitle
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
            , TelephoneNumber
    FROM EdFi_Ods_2021.edfi.StaffEducationOrganizationContactAssociationTelephone source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffEducationOrganizationContactAssociationTelephone target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.ContactTitle
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.TelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.TelephoneNumber = source.TelephoneNumber
    )


        MERGE edfi.StaffEducationOrganizationContactAssociationTelephone_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffEducationOrganizationContactAssociationTelephone AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.ContactTitle
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
        + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.TelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            -- Contextual primary key
            AND target.TelephoneNumber = source.TelephoneNumber
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.OrderOfPriority = source.OrderOfPriority
            , target.TextMessageCapabilityIndicator = source.TextMessageCapabilityIndicator
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , TelephoneNumberTypeDescriptorHashKey
                -- Contextual primary key
                , TelephoneNumber
                -- Attributes
                , DoNotPublishIndicator
                , OrderOfPriority
                , TextMessageCapabilityIndicator
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.ContactTitle
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
                )
                -- Contextual primary key
                , TelephoneNumber
                -- Attributes
                , DoNotPublishIndicator
                , OrderOfPriority
                , TextMessageCapabilityIndicator
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StaffEducationOrganizationEmploymentAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , EmploymentStatusDescriptorHashKey
        , StaffHashKey
        -- Primary key columns
        , EducationOrganizationId
                , EmploymentStatusDescriptorId
                , HireDate
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, EmploymentStatusDescriptorId)
                    + '|' + CONVERT(nvarchar, HireDate, 23)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EmploymentStatusDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , EducationOrganizationId
        , EmploymentStatusDescriptorId
        , HireDate
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffEducationOrganizationEmploymentAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffEducationOrganizationEmploymentAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.EmploymentStatusDescriptorId)
            + '|' + CONVERT(nvarchar, source.HireDate, 23)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffEducationOrganizationEmploymentAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffEducationOrganizationEmploymentAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.EmploymentStatusDescriptorId)
        + '|' + CONVERT(nvarchar, source.HireDate, 23)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.Department = source.Department
            , target.EndDate = source.EndDate
            , target.FullTimeEquivalency = source.FullTimeEquivalency
            , target.HourlyWage = source.HourlyWage
            , target.OfferDate = source.OfferDate
                -- References
            , target.CredentialHashKey = HASHBYTES('sha1', 
                source.CredentialIdentifier
                + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
                )
            , target.SeparationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SeparationDescriptorId)
                )
            , target.SeparationReasonDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SeparationReasonDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Department
                , EndDate
                , FullTimeEquivalency
                , HourlyWage
                , OfferDate
                -- References
                , CredentialHashKey
                , SeparationDescriptorHashKey
                , SeparationReasonDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.EmploymentStatusDescriptorId)
                + '|' + CONVERT(nvarchar, source.HireDate, 23)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , Department
                , EndDate
                , FullTimeEquivalency
                , HourlyWage
                , OfferDate
                -- References
                , HASHBYTES('sha1', 
                source.CredentialIdentifier
                + '|' + CONVERT(nvarchar, source.StateOfIssueStateAbbreviationDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SeparationDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SeparationReasonDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffIdentificationSystemDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , StaffIdentificationSystemDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffIdentificationSystemDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffIdentificationSystemDescriptorId)
        )
        , StaffIdentificationSystemDescriptorId
    FROM EdFi_Ods_2021.edfi.StaffIdentificationSystemDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffIdentificationSystemDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffIdentificationSystemDescriptorId)
            )
    )

    
    INSERT INTO edfi.StaffLeave (
        HashKey
        -- Identifying references (for aggregate root entity)
        , StaffHashKey
        , StaffLeaveEventCategoryDescriptorHashKey
        -- Primary key columns
        , BeginDate
                , StaffLeaveEventCategoryDescriptorId
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, StaffLeaveEventCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffLeaveEventCategoryDescriptorId)
        )
        , BeginDate
        , StaffLeaveEventCategoryDescriptorId
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffLeave source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffLeave target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.StaffLeaveEventCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffLeave_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffLeave AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.StaffLeaveEventCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
            , target.Reason = source.Reason
            , target.SubstituteAssigned = source.SubstituteAssigned
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                , Reason
                , SubstituteAssigned
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.StaffLeaveEventCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                , Reason
                , SubstituteAssigned
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffLeaveEventCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , StaffLeaveEventCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffLeaveEventCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffLeaveEventCategoryDescriptorId)
        )
        , StaffLeaveEventCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.StaffLeaveEventCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffLeaveEventCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffLeaveEventCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.StaffProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , ProgramHashKey
        , StaffHashKey
        -- Primary key columns
        , BeginDate
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , BeginDate
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
            , target.StudentRecordAccess = source.StudentRecordAccess
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                , StudentRecordAccess
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                , StudentRecordAccess
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffSchoolAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , ProgramAssignmentDescriptorHashKey
        , SchoolHashKey
        , StaffHashKey
        -- Primary key columns
        , ProgramAssignmentDescriptorId
                , SchoolId
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramAssignmentDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramAssignmentDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , ProgramAssignmentDescriptorId
        , SchoolId
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffSchoolAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffSchoolAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProgramAssignmentDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffSchoolAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffSchoolAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.ProgramAssignmentDescriptorId)
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- References
            , target.CalendarHashKey = HASHBYTES('sha1', 
                source.CalendarCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
            , target.SchoolYearTypeHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , CalendarHashKey
                , SchoolYearTypeHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProgramAssignmentDescriptorId)
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                source.CalendarCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StaffSchoolAssociationAcademicSubject (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicSubjectDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramAssignmentDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicSubjectDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffSchoolAssociationAcademicSubject source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffSchoolAssociationAcademicSubject target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramAssignmentDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.AcademicSubjectDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicSubjectDescriptorId)
            )
    )

    INSERT INTO edfi.StaffSchoolAssociationGradeLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradeLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramAssignmentDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StaffSchoolAssociationGradeLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffSchoolAssociationGradeLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramAssignmentDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
    )

    INSERT INTO edfi.StaffSectionAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SectionHashKey
        , StaffHashKey
        -- Primary key columns
        , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
                , StaffUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StaffUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
        , StaffUSI
    FROM EdFi_Ods_2021.edfi.StaffSectionAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StaffSectionAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
    )

        MERGE edfi.StaffSectionAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StaffSectionAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
        + '|' + CONVERT(nvarchar, source.StaffUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.HighlyQualifiedTeacher = source.HighlyQualifiedTeacher
            , target.PercentageContribution = source.PercentageContribution
            , target.TeacherStudentDataLinkExclusion = source.TeacherStudentDataLinkExclusion
                -- References
            , target.ClassroomPositionDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ClassroomPositionDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , HighlyQualifiedTeacher
                , PercentageContribution
                , TeacherStudentDataLinkExclusion
                -- References
                , ClassroomPositionDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                )
                , @schoolYearContext
                -- Attributes
                , BeginDate
                , EndDate
                , HighlyQualifiedTeacher
                , PercentageContribution
                , TeacherStudentDataLinkExclusion
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ClassroomPositionDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StateAbbreviationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , StateAbbreviationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
        , StateAbbreviationDescriptorId
    FROM EdFi_Ods_2021.edfi.StateAbbreviationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StateAbbreviationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
    )

    
    INSERT INTO edfi.StateEducationAgency (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        -- Primary key columns
        , StateEducationAgencyId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StateEducationAgencyId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StateEducationAgencyId)
        )
        , StateEducationAgencyId
    FROM EdFi_Ods_2021.edfi.StateEducationAgency source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StateEducationAgency target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StateEducationAgencyId)
            )
    )

    
    INSERT INTO edfi.StateEducationAgencyAccountability (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SchoolYearTypeHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StateEducationAgencyId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
    FROM EdFi_Ods_2021.edfi.StateEducationAgencyAccountability source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StateEducationAgencyAccountability target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StateEducationAgencyId)
            )
            AND target.SchoolYearTypeHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SchoolYear)
            )
    )


        MERGE edfi.StateEducationAgencyAccountability_Attributes AS target
        USING EdFi_Ods_2021.edfi.StateEducationAgencyAccountability AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StateEducationAgencyId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.SchoolYearTypeHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolYear)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.CTEGraduationRateInclusion = source.CTEGraduationRateInclusion
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , SchoolYearTypeHashKey
                -- Attributes
                , CTEGraduationRateInclusion
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StateEducationAgencyId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
                -- Attributes
                , CTEGraduationRateInclusion
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StateEducationAgencyFederalFunds (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , FiscalYear
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StateEducationAgencyId)
        )
            , FiscalYear
    FROM EdFi_Ods_2021.edfi.StateEducationAgencyFederalFunds source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StateEducationAgencyFederalFunds target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StateEducationAgencyId)
            )
            AND target.FiscalYear = source.FiscalYear
    )


        MERGE edfi.StateEducationAgencyFederalFunds_Attributes AS target
        USING EdFi_Ods_2021.edfi.StateEducationAgencyFederalFunds AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.StateEducationAgencyId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.FiscalYear = source.FiscalYear
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.FederalProgramsFundingAllocation = source.FederalProgramsFundingAllocation
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , FiscalYear
                -- Attributes
                , FederalProgramsFundingAllocation
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateEducationAgencyId)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , FiscalYear
                -- Attributes
                , FederalProgramsFundingAllocation
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.Student (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.Student source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Student target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.Student_Attributes AS target
        USING EdFi_Ods_2021.edfi.Student AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.BirthCity = source.BirthCity
            , target.BirthDate = source.BirthDate
            , target.BirthInternationalProvince = source.BirthInternationalProvince
            , target.DateEnteredUS = source.DateEnteredUS
            , target.FirstName = source.FirstName
            , target.GenerationCodeSuffix = source.GenerationCodeSuffix
            , target.LastSurname = source.LastSurname
            , target.MaidenName = source.MaidenName
            , target.MiddleName = source.MiddleName
            , target.MultipleBirthStatus = source.MultipleBirthStatus
            , target.PersonalTitlePrefix = source.PersonalTitlePrefix
            , target.StudentUniqueId = source.StudentUniqueId
                -- References
            , target.CitizenshipStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CitizenshipStatusDescriptorId)
                )
            , target.BirthCountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BirthCountryDescriptorId)
                )
            , target.PersonHashKey = HASHBYTES('sha1', 
                source.PersonId
                + '|' + CONVERT(nvarchar, source.SourceSystemDescriptorId)
                )
            , target.BirthSexDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BirthSexDescriptorId)
                )
            , target.BirthStateAbbreviationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BirthStateAbbreviationDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , BirthCity
                , BirthDate
                , BirthInternationalProvince
                , DateEnteredUS
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , MaidenName
                , MiddleName
                , MultipleBirthStatus
                , PersonalTitlePrefix
                , StudentUniqueId
                -- References
                , CitizenshipStatusDescriptorHashKey
                , BirthCountryDescriptorHashKey
                , PersonHashKey
                , BirthSexDescriptorHashKey
                , BirthStateAbbreviationDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , BirthCity
                , BirthDate
                , BirthInternationalProvince
                , DateEnteredUS
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , MaidenName
                , MiddleName
                , MultipleBirthStatus
                , PersonalTitlePrefix
                , StudentUniqueId
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CitizenshipStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BirthCountryDescriptorId)
                )
                , HASHBYTES('sha1', 
                source.PersonId
                + '|' + CONVERT(nvarchar, source.SourceSystemDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BirthSexDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BirthStateAbbreviationDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentIdentificationDocument (
        HashKey
        -- Identifying references (for aggregate child entity)
        , IdentificationDocumentUseDescriptorHashKey
        , PersonalInformationVerificationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
                    + '|' + CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentIdentificationDocument source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentIdentificationDocument target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
    )


        MERGE edfi.StudentIdentificationDocument_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentIdentificationDocument AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
        + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DocumentExpirationDate = source.DocumentExpirationDate
            , target.DocumentTitle = source.DocumentTitle
            , target.IssuerDocumentIdentificationCode = source.IssuerDocumentIdentificationCode
            , target.IssuerName = source.IssuerName
                -- References
            , target.IssuerCountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , IdentificationDocumentUseDescriptorHashKey
                , PersonalInformationVerificationDescriptorHashKey
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , IssuerCountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                )
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentOtherName (
        HashKey
        -- Identifying references (for aggregate child entity)
        , OtherNameTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, OtherNameTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, OtherNameTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentOtherName source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentOtherName target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.OtherNameTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            )
    )


        MERGE edfi.StudentOtherName_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentOtherName AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.OtherNameTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.FirstName = source.FirstName
            , target.GenerationCodeSuffix = source.GenerationCodeSuffix
            , target.LastSurname = source.LastSurname
            , target.MiddleName = source.MiddleName
            , target.PersonalTitlePrefix = source.PersonalTitlePrefix
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , OtherNameTypeDescriptorHashKey
                -- Attributes
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , MiddleName
                , PersonalTitlePrefix
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OtherNameTypeDescriptorId)
                )
                -- Attributes
                , FirstName
                , GenerationCodeSuffix
                , LastSurname
                , MiddleName
                , PersonalTitlePrefix
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentPersonalIdentificationDocument (
        HashKey
        -- Identifying references (for aggregate child entity)
        , IdentificationDocumentUseDescriptorHashKey
        , PersonalInformationVerificationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
                    + '|' + CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, IdentificationDocumentUseDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PersonalInformationVerificationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentPersonalIdentificationDocument source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentPersonalIdentificationDocument target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
    )


        MERGE edfi.StudentPersonalIdentificationDocument_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentPersonalIdentificationDocument AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
        + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.IdentificationDocumentUseDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
            )
            AND target.PersonalInformationVerificationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DocumentExpirationDate = source.DocumentExpirationDate
            , target.DocumentTitle = source.DocumentTitle
            , target.IssuerDocumentIdentificationCode = source.IssuerDocumentIdentificationCode
            , target.IssuerName = source.IssuerName
                -- References
            , target.IssuerCountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , IdentificationDocumentUseDescriptorHashKey
                , PersonalInformationVerificationDescriptorHashKey
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , IssuerCountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                + '|' + CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IdentificationDocumentUseDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PersonalInformationVerificationDescriptorId)
                )
                -- Attributes
                , DocumentExpirationDate
                , DocumentTitle
                , IssuerDocumentIdentificationCode
                , IssuerName
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.IssuerCountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentVisa (
        HashKey
        -- Identifying references (for aggregate child entity)
        , VisaDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, VisaDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, VisaDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentVisa source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentVisa target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.VisaDescriptorId)
            )
            AND target.VisaDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.VisaDescriptorId)
            )
    )

    INSERT INTO edfi.StudentAcademicRecord (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , SchoolYearTypeHashKey
        , StudentHashKey
        , TermDescriptorHashKey
        -- Primary key columns
        , EducationOrganizationId
                , SchoolYear
                , StudentUSI
                , TermDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TermDescriptorId)
        )
        , EducationOrganizationId
        , SchoolYear
        , StudentUSI
        , TermDescriptorId
    FROM EdFi_Ods_2021.edfi.StudentAcademicRecord source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAcademicRecord target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
    )

        MERGE edfi.StudentAcademicRecord_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAcademicRecord AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.CumulativeAttemptedCreditConversion = source.CumulativeAttemptedCreditConversion
            , target.CumulativeAttemptedCredits = source.CumulativeAttemptedCredits
            , target.CumulativeEarnedCreditConversion = source.CumulativeEarnedCreditConversion
            , target.CumulativeEarnedCredits = source.CumulativeEarnedCredits
            , target.CumulativeGradePointAverage = source.CumulativeGradePointAverage
            , target.CumulativeGradePointsEarned = source.CumulativeGradePointsEarned
            , target.GradeValueQualifier = source.GradeValueQualifier
            , target.ProjectedGraduationDate = source.ProjectedGraduationDate
            , target.SessionAttemptedCreditConversion = source.SessionAttemptedCreditConversion
            , target.SessionAttemptedCredits = source.SessionAttemptedCredits
            , target.SessionEarnedCreditConversion = source.SessionEarnedCreditConversion
            , target.SessionEarnedCredits = source.SessionEarnedCredits
            , target.SessionGradePointAverage = source.SessionGradePointAverage
            , target.SessionGradePointsEarned = source.SessionGradePointsEarned
                -- References
            , target.CumulativeEarnedCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CumulativeEarnedCreditTypeDescriptorId)
                )
            , target.CumulativeAttemptedCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CumulativeAttemptedCreditTypeDescriptorId)
                )
            , target.SessionEarnedCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SessionEarnedCreditTypeDescriptorId)
                )
            , target.SessionAttemptedCreditTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SessionAttemptedCreditTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , CumulativeAttemptedCreditConversion
                , CumulativeAttemptedCredits
                , CumulativeEarnedCreditConversion
                , CumulativeEarnedCredits
                , CumulativeGradePointAverage
                , CumulativeGradePointsEarned
                , GradeValueQualifier
                , ProjectedGraduationDate
                , SessionAttemptedCreditConversion
                , SessionAttemptedCredits
                , SessionEarnedCreditConversion
                , SessionEarnedCredits
                , SessionGradePointAverage
                , SessionGradePointsEarned
                -- References
                , CumulativeEarnedCreditTypeDescriptorHashKey
                , CumulativeAttemptedCreditTypeDescriptorHashKey
                , SessionEarnedCreditTypeDescriptorHashKey
                , SessionAttemptedCreditTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Attributes
                , CumulativeAttemptedCreditConversion
                , CumulativeAttemptedCredits
                , CumulativeEarnedCreditConversion
                , CumulativeEarnedCredits
                , CumulativeGradePointAverage
                , CumulativeGradePointsEarned
                , GradeValueQualifier
                , ProjectedGraduationDate
                , SessionAttemptedCreditConversion
                , SessionAttemptedCredits
                , SessionEarnedCreditConversion
                , SessionEarnedCredits
                , SessionGradePointAverage
                , SessionGradePointsEarned
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CumulativeEarnedCreditTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CumulativeAttemptedCreditTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SessionEarnedCreditTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SessionAttemptedCreditTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentAcademicRecordAcademicHonor (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AcademicHonorCategoryDescriptorHashKey
        -- Contextual primary key
        , HonorDescription
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicHonorCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AcademicHonorCategoryDescriptorId)
        )
            , HonorDescription
    FROM EdFi_Ods_2021.edfi.StudentAcademicRecordAcademicHonor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAcademicRecordAcademicHonor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicHonorCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.AcademicHonorCategoryDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AcademicHonorCategoryDescriptorId)
            )
            AND target.HonorDescription = source.HonorDescription
    )


        MERGE edfi.StudentAcademicRecordAcademicHonor_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAcademicRecordAcademicHonor AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AcademicHonorCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AcademicHonorCategoryDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AcademicHonorCategoryDescriptorId)
            )
            -- Contextual primary key
            AND target.HonorDescription = source.HonorDescription
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AchievementCategorySystem = source.AchievementCategorySystem
            , target.AchievementTitle = source.AchievementTitle
            , target.Criteria = source.Criteria
            , target.CriteriaURL = source.CriteriaURL
            , target.EvidenceStatement = source.EvidenceStatement
            , target.HonorAwardDate = source.HonorAwardDate
            , target.HonorAwardExpiresDate = source.HonorAwardExpiresDate
            , target.ImageURL = source.ImageURL
            , target.IssuerName = source.IssuerName
            , target.IssuerOriginURL = source.IssuerOriginURL
                -- References
            , target.AchievementCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AcademicHonorCategoryDescriptorHashKey
                -- Contextual primary key
                , HonorDescription
                -- Attributes
                , AchievementCategorySystem
                , AchievementTitle
                , Criteria
                , CriteriaURL
                , EvidenceStatement
                , HonorAwardDate
                , HonorAwardExpiresDate
                , ImageURL
                , IssuerName
                , IssuerOriginURL
                -- References
                , AchievementCategoryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicHonorCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AcademicHonorCategoryDescriptorId)
                )
                -- Contextual primary key
                , HonorDescription
                -- Attributes
                , AchievementCategorySystem
                , AchievementTitle
                , Criteria
                , CriteriaURL
                , EvidenceStatement
                , HonorAwardDate
                , HonorAwardExpiresDate
                , ImageURL
                , IssuerName
                , IssuerOriginURL
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAcademicRecordClassRanking (
        HashKey
        -- Identifying references (for aggregate child entity)
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentAcademicRecordClassRanking source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAcademicRecordClassRanking target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
    )


        MERGE edfi.StudentAcademicRecordClassRanking_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAcademicRecordClassRanking AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.ClassRank = source.ClassRank
            , target.ClassRankingDate = source.ClassRankingDate
            , target.PercentageRanking = source.PercentageRanking
            , target.TotalNumberInClass = source.TotalNumberInClass
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Attributes
                , ClassRank
                , ClassRankingDate
                , PercentageRanking
                , TotalNumberInClass
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                -- Attributes
                , ClassRank
                , ClassRankingDate
                , PercentageRanking
                , TotalNumberInClass
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAcademicRecordDiploma (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DiplomaTypeDescriptorHashKey
        -- Contextual primary key
        , DiplomaAwardDate
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DiplomaTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DiplomaTypeDescriptorId)
        )
            , DiplomaAwardDate
    FROM EdFi_Ods_2021.edfi.StudentAcademicRecordDiploma source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAcademicRecordDiploma target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiplomaTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.DiplomaTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DiplomaTypeDescriptorId)
            )
            AND target.DiplomaAwardDate = source.DiplomaAwardDate
    )


        MERGE edfi.StudentAcademicRecordDiploma_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAcademicRecordDiploma AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.DiplomaTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.DiplomaTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiplomaTypeDescriptorId)
            )
            -- Contextual primary key
            AND target.DiplomaAwardDate = source.DiplomaAwardDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AchievementCategorySystem = source.AchievementCategorySystem
            , target.AchievementTitle = source.AchievementTitle
            , target.Criteria = source.Criteria
            , target.CriteriaURL = source.CriteriaURL
            , target.CTECompleter = source.CTECompleter
            , target.DiplomaAwardExpiresDate = source.DiplomaAwardExpiresDate
            , target.DiplomaDescription = source.DiplomaDescription
            , target.EvidenceStatement = source.EvidenceStatement
            , target.ImageURL = source.ImageURL
            , target.IssuerName = source.IssuerName
            , target.IssuerOriginURL = source.IssuerOriginURL
                -- References
            , target.AchievementCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
                )
            , target.DiplomaLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DiplomaLevelDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , DiplomaTypeDescriptorHashKey
                -- Contextual primary key
                , DiplomaAwardDate
                -- Attributes
                , AchievementCategorySystem
                , AchievementTitle
                , Criteria
                , CriteriaURL
                , CTECompleter
                , DiplomaAwardExpiresDate
                , DiplomaDescription
                , EvidenceStatement
                , ImageURL
                , IssuerName
                , IssuerOriginURL
                -- References
                , AchievementCategoryDescriptorHashKey
                , DiplomaLevelDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DiplomaTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DiplomaTypeDescriptorId)
                )
                -- Contextual primary key
                , DiplomaAwardDate
                -- Attributes
                , AchievementCategorySystem
                , AchievementTitle
                , Criteria
                , CriteriaURL
                , CTECompleter
                , DiplomaAwardExpiresDate
                , DiplomaDescription
                , EvidenceStatement
                , ImageURL
                , IssuerName
                , IssuerOriginURL
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DiplomaLevelDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAcademicRecordGradePointAverage (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GradePointAverageTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradePointAverageTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradePointAverageTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentAcademicRecordGradePointAverage source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAcademicRecordGradePointAverage target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.GradePointAverageTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
            )
    )


        MERGE edfi.StudentAcademicRecordGradePointAverage_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAcademicRecordGradePointAverage AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.GradePointAverageTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.GradePointAverageValue = source.GradePointAverageValue
            , target.IsCumulative = source.IsCumulative
            , target.MaxGradePointAverageValue = source.MaxGradePointAverageValue
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , GradePointAverageTypeDescriptorHashKey
                -- Attributes
                , GradePointAverageValue
                , IsCumulative
                , MaxGradePointAverageValue
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradePointAverageTypeDescriptorId)
                )
                -- Attributes
                , GradePointAverageValue
                , IsCumulative
                , MaxGradePointAverageValue
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAcademicRecordRecognition (
        HashKey
        -- Identifying references (for aggregate child entity)
        , RecognitionTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, RecognitionTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RecognitionTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentAcademicRecordRecognition source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAcademicRecordRecognition target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.RecognitionTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
            )
    )


        MERGE edfi.StudentAcademicRecordRecognition_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAcademicRecordRecognition AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.RecognitionTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AchievementCategorySystem = source.AchievementCategorySystem
            , target.AchievementTitle = source.AchievementTitle
            , target.Criteria = source.Criteria
            , target.CriteriaURL = source.CriteriaURL
            , target.EvidenceStatement = source.EvidenceStatement
            , target.ImageURL = source.ImageURL
            , target.IssuerName = source.IssuerName
            , target.IssuerOriginURL = source.IssuerOriginURL
            , target.RecognitionAwardDate = source.RecognitionAwardDate
            , target.RecognitionAwardExpiresDate = source.RecognitionAwardExpiresDate
            , target.RecognitionDescription = source.RecognitionDescription
                -- References
            , target.AchievementCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , RecognitionTypeDescriptorHashKey
                -- Attributes
                , AchievementCategorySystem
                , AchievementTitle
                , Criteria
                , CriteriaURL
                , EvidenceStatement
                , ImageURL
                , IssuerName
                , IssuerOriginURL
                , RecognitionAwardDate
                , RecognitionAwardExpiresDate
                , RecognitionDescription
                -- References
                , AchievementCategoryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TermDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RecognitionTypeDescriptorId)
                )
                -- Attributes
                , AchievementCategorySystem
                , AchievementTitle
                , Criteria
                , CriteriaURL
                , EvidenceStatement
                , ImageURL
                , IssuerName
                , IssuerOriginURL
                , RecognitionAwardDate
                , RecognitionAwardExpiresDate
                , RecognitionDescription
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AchievementCategoryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAcademicRecordReportCard (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ReportCardHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TermDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, GradingPeriodSequence)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.StudentAcademicRecordReportCard source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAcademicRecordReportCard target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TermDescriptorId)
            )
            AND target.ReportCardHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.StudentAssessment (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AssessmentHashKey
        , StudentHashKey
        -- Primary key columns
        , AssessmentIdentifier
                , Namespace
                , StudentAssessmentIdentifier
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + Namespace
                    + '|' + StudentAssessmentIdentifier
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            AssessmentIdentifier
            + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , AssessmentIdentifier
        , Namespace
        , StudentAssessmentIdentifier
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentAssessment source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAssessment target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.Namespace
            + '|' + source.StudentAssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentAssessment_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAssessment AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + source.Namespace
        + '|' + source.StudentAssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AdministrationDate = source.AdministrationDate
            , target.AdministrationEndDate = source.AdministrationEndDate
            , target.EventDescription = source.EventDescription
            , target.SerialNumber = source.SerialNumber
                -- References
            , target.AdministrationEnvironmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdministrationEnvironmentDescriptorId)
                )
            , target.EventCircumstanceDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EventCircumstanceDescriptorId)
                )
            , target.WhenAssessedGradeLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.WhenAssessedGradeLevelDescriptorId)
                )
            , target.AdministrationLanguageDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdministrationLanguageDescriptorId)
                )
            , target.PlatformTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PlatformTypeDescriptorId)
                )
            , target.ReasonNotTestedDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ReasonNotTestedDescriptorId)
                )
            , target.RetestIndicatorDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RetestIndicatorDescriptorId)
                )
            , target.SchoolYearTypeHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AdministrationDate
                , AdministrationEndDate
                , EventDescription
                , SerialNumber
                -- References
                , AdministrationEnvironmentDescriptorHashKey
                , EventCircumstanceDescriptorHashKey
                , WhenAssessedGradeLevelDescriptorHashKey
                , AdministrationLanguageDescriptorHashKey
                , PlatformTypeDescriptorHashKey
                , ReasonNotTestedDescriptorHashKey
                , RetestIndicatorDescriptorHashKey
                , SchoolYearTypeHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.Namespace
                + '|' + source.StudentAssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , AdministrationDate
                , AdministrationEndDate
                , EventDescription
                , SerialNumber
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdministrationEnvironmentDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EventCircumstanceDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.WhenAssessedGradeLevelDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AdministrationLanguageDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PlatformTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ReasonNotTestedDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RetestIndicatorDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentAssessmentAccommodation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AccommodationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AccommodationDescriptorId)
                    + '|' + AssessmentIdentifier
                    + '|' + Namespace
                    + '|' + StudentAssessmentIdentifier
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AccommodationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentAssessmentAccommodation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAssessmentAccommodation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AccommodationDescriptorId)
            + '|' + source.AssessmentIdentifier
            + '|' + source.Namespace
            + '|' + source.StudentAssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AccommodationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AccommodationDescriptorId)
            )
    )

    INSERT INTO edfi.StudentAssessmentItem (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentItemHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + IdentificationCode
                    + '|' + Namespace
                    + '|' + StudentAssessmentIdentifier
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            AssessmentIdentifier
            + '|' + IdentificationCode
            + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.StudentAssessmentItem source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAssessmentItem target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            + '|' + source.StudentAssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AssessmentItemHashKey = HASHBYTES('sha1',
                source.AssessmentIdentifier
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
            )
    )


        MERGE edfi.StudentAssessmentItem_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAssessmentItem AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + source.IdentificationCode
        + '|' + source.Namespace
        + '|' + source.StudentAssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentItemHashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AssessmentResponse = source.AssessmentResponse
            , target.DescriptiveFeedback = source.DescriptiveFeedback
            , target.RawScoreResult = source.RawScoreResult
            , target.TimeAssessed = source.TimeAssessed
                -- References
            , target.AssessmentItemResultDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentItemResultDescriptorId)
                )
            , target.ResponseIndicatorDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResponseIndicatorDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentItemHashKey
                -- Attributes
                , AssessmentResponse
                , DescriptiveFeedback
                , RawScoreResult
                , TimeAssessed
                -- References
                , AssessmentItemResultDescriptorHashKey
                , ResponseIndicatorDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                + '|' + source.StudentAssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                )
                -- Attributes
                , AssessmentResponse
                , DescriptiveFeedback
                , RawScoreResult
                , TimeAssessed
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentItemResultDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResponseIndicatorDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAssessmentPerformanceLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
        , PerformanceLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, PerformanceLevelDescriptorId)
                    + '|' + StudentAssessmentIdentifier
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PerformanceLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentAssessmentPerformanceLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAssessmentPerformanceLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            + '|' + source.StudentAssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
            AND target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
    )


        MERGE edfi.StudentAssessmentPerformanceLevel_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAssessmentPerformanceLevel AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + source.Namespace
        + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
        + '|' + source.StudentAssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
            AND target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PerformanceLevelMet = source.PerformanceLevelMet
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                , PerformanceLevelDescriptorHashKey
                -- Attributes
                , PerformanceLevelMet
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + source.Namespace
                + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                + '|' + source.StudentAssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                )
                -- Attributes
                , PerformanceLevelMet
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAssessmentScoreResult (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + Namespace
                    + '|' + StudentAssessmentIdentifier
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentAssessmentScoreResult source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAssessmentScoreResult target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + source.Namespace
            + '|' + source.StudentAssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
    )


        MERGE edfi.StudentAssessmentScoreResult_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAssessmentScoreResult AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + source.Namespace
        + '|' + source.StudentAssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.Result = source.Result
                -- References
            , target.ResultDatatypeTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                -- Attributes
                , Result
                -- References
                , ResultDatatypeTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + source.Namespace
                + '|' + source.StudentAssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                -- Attributes
                , Result
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAssessmentStudentObjectiveAssessment (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ObjectiveAssessmentHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + IdentificationCode
                    + '|' + Namespace
                    + '|' + StudentAssessmentIdentifier
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            AssessmentIdentifier
            + '|' + IdentificationCode
            + '|' + Namespace
        )
    FROM EdFi_Ods_2021.edfi.StudentAssessmentStudentObjectiveAssessment source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAssessmentStudentObjectiveAssessment target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            + '|' + source.StudentAssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.ObjectiveAssessmentHashKey = HASHBYTES('sha1',
                source.AssessmentIdentifier
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
            )
    )

    INSERT INTO edfi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
        , PerformanceLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + IdentificationCode
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, PerformanceLevelDescriptorId)
                    + '|' + StudentAssessmentIdentifier
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PerformanceLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            + '|' + source.StudentAssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
            AND target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
    )


        MERGE edfi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + source.IdentificationCode
        + '|' + source.Namespace
        + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
        + '|' + source.StudentAssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
            AND target.PerformanceLevelDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PerformanceLevelMet = source.PerformanceLevelMet
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                , PerformanceLevelDescriptorHashKey
                -- Attributes
                , PerformanceLevelMet
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                + '|' + CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                + '|' + source.StudentAssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PerformanceLevelDescriptorId)
                )
                -- Attributes
                , PerformanceLevelMet
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentAssessmentStudentObjectiveAssessmentScoreResult (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AssessmentReportingMethodDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            AssessmentIdentifier
                    + '|' + CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
                    + '|' + IdentificationCode
                    + '|' + Namespace
                    + '|' + StudentAssessmentIdentifier
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AssessmentReportingMethodDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentAssessmentStudentObjectiveAssessmentScoreResult source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentAssessmentStudentObjectiveAssessmentScoreResult target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.AssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            + '|' + source.IdentificationCode
            + '|' + source.Namespace
            + '|' + source.StudentAssessmentIdentifier
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
    )


        MERGE edfi.StudentAssessmentStudentObjectiveAssessmentScoreResult_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentAssessmentStudentObjectiveAssessmentScoreResult AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.AssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
        + '|' + source.IdentificationCode
        + '|' + source.Namespace
        + '|' + source.StudentAssessmentIdentifier
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AssessmentReportingMethodDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.Result = source.Result
                -- References
            , target.ResultDatatypeTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AssessmentReportingMethodDescriptorHashKey
                -- Attributes
                , Result
                -- References
                , ResultDatatypeTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.AssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                + '|' + source.IdentificationCode
                + '|' + source.Namespace
                + '|' + source.StudentAssessmentIdentifier
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AssessmentReportingMethodDescriptorId)
                )
                -- Attributes
                , Result
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResultDatatypeTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentCharacteristicDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , StudentCharacteristicDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentCharacteristicDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentCharacteristicDescriptorId)
        )
        , StudentCharacteristicDescriptorId
    FROM EdFi_Ods_2021.edfi.StudentCharacteristicDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCharacteristicDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
            )
    )

    
    INSERT INTO edfi.StudentCohortAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , CohortHashKey
        , StudentHashKey
        -- Primary key columns
        , BeginDate
                , CohortIdentifier
                , EducationOrganizationId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CohortIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CohortIdentifier
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , CohortIdentifier
        , EducationOrganizationId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentCohortAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCohortAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + source.CohortIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentCohortAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentCohortAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + source.CohortIdentifier
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + source.CohortIdentifier
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentCohortAssociationSection (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SectionHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CohortIdentifier
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
    FROM EdFi_Ods_2021.edfi.StudentCohortAssociationSection source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCohortAssociationSection target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + source.CohortIdentifier
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SectionHashKey = HASHBYTES('sha1',
                source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
            )
    )

    INSERT INTO edfi.StudentCompetencyObjective (
        HashKey
        -- Identifying references (for aggregate root entity)
        , ObjectiveCompetencyObjectiveHashKey
        , GradingPeriodHashKey
        , StudentHashKey
        -- Primary key columns
        , GradingPeriodDescriptorId
                , GradingPeriodSchoolId
                , GradingPeriodSchoolYear
                , GradingPeriodSequence
                , Objective
                , ObjectiveEducationOrganizationId
                , ObjectiveGradeLevelDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + Objective
                    + '|' + CONVERT(nvarchar, ObjectiveEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ObjectiveGradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ObjectiveEducationOrganizationId)
            + '|' + Objective
            + '|' + CONVERT(nvarchar, ObjectiveGradeLevelDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodSequence)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , GradingPeriodDescriptorId
        , GradingPeriodSchoolId
        , GradingPeriodSchoolYear
        , GradingPeriodSequence
        , Objective
        , ObjectiveEducationOrganizationId
        , ObjectiveGradeLevelDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentCompetencyObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCompetencyObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.Objective
            + '|' + CONVERT(nvarchar, source.ObjectiveEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentCompetencyObjective_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentCompetencyObjective AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.GradingPeriodDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
        + '|' + source.Objective
        + '|' + CONVERT(nvarchar, source.ObjectiveEducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.DiagnosticStatement = source.DiagnosticStatement
                -- References
            , target.CompetencyLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , DiagnosticStatement
                -- References
                , CompetencyLevelDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + source.Objective
                + '|' + CONVERT(nvarchar, source.ObjectiveEducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , DiagnosticStatement
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentCompetencyObjectiveGeneralStudentProgramAssociation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GeneralStudentProgramAssociationHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + Objective
                    + '|' + CONVERT(nvarchar, ObjectiveEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ObjectiveGradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.StudentCompetencyObjectiveGeneralStudentProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCompetencyObjectiveGeneralStudentProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.Objective
            + '|' + CONVERT(nvarchar, source.ObjectiveEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.GeneralStudentProgramAssociationHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.StudentCompetencyObjectiveStudentSectionAssociation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StudentSectionAssociationHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + LocalCourseCode
                    + '|' + Objective
                    + '|' + CONVERT(nvarchar, ObjectiveEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ObjectiveGradeLevelDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.StudentCompetencyObjectiveStudentSectionAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCompetencyObjectiveStudentSectionAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.LocalCourseCode
            + '|' + source.Objective
            + '|' + CONVERT(nvarchar, source.ObjectiveEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ObjectiveGradeLevelDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StudentSectionAssociationHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.StudentCTEProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentCTEProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCTEProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentCTEProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentCTEProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Attributes
            target.NonTraditionalGenderStatus = source.NonTraditionalGenderStatus
            , target.PrivateCTEProgram = source.PrivateCTEProgram
                -- References
            , target.TechnicalSkillsAssessmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TechnicalSkillsAssessmentDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , NonTraditionalGenderStatus
                , PrivateCTEProgram
                -- References
                , TechnicalSkillsAssessmentDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , NonTraditionalGenderStatus
                , PrivateCTEProgram
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TechnicalSkillsAssessmentDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.StudentCTEProgramAssociationCTEProgram (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CareerPathwayDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, CareerPathwayDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CareerPathwayDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentCTEProgramAssociationCTEProgram source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCTEProgramAssociationCTEProgram target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.CareerPathwayDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.CareerPathwayDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CareerPathwayDescriptorId)
            )
    )


        MERGE edfi.StudentCTEProgramAssociationCTEProgram_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentCTEProgramAssociationCTEProgram AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.CareerPathwayDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.CareerPathwayDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CareerPathwayDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.CIPCode = source.CIPCode
            , target.CTEProgramCompletionIndicator = source.CTEProgramCompletionIndicator
            , target.PrimaryCTEProgramIndicator = source.PrimaryCTEProgramIndicator
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , CareerPathwayDescriptorHashKey
                -- Attributes
                , CIPCode
                , CTEProgramCompletionIndicator
                , PrimaryCTEProgramIndicator
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.CareerPathwayDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CareerPathwayDescriptorId)
                )
                -- Attributes
                , CIPCode
                , CTEProgramCompletionIndicator
                , PrimaryCTEProgramIndicator
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentCTEProgramAssociationCTEProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CTEProgramServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, CTEProgramServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CTEProgramServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentCTEProgramAssociationCTEProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCTEProgramAssociationCTEProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.CTEProgramServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.CTEProgramServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CTEProgramServiceDescriptorId)
            )
    )


        MERGE edfi.StudentCTEProgramAssociationCTEProgramService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentCTEProgramAssociationCTEProgramService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.CTEProgramServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.CTEProgramServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CTEProgramServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.CIPCode = source.CIPCode
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , CTEProgramServiceDescriptorHashKey
                -- Attributes
                , CIPCode
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.CTEProgramServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CTEProgramServiceDescriptorId)
                )
                -- Attributes
                , CIPCode
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentCTEProgramAssociationService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, ServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentCTEProgramAssociationService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentCTEProgramAssociationService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.ServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ServiceDescriptorId)
            )
    )


        MERGE edfi.StudentCTEProgramAssociationService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentCTEProgramAssociationService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.ServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , ServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentDisciplineIncidentAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DisciplineIncidentHashKey
        , StudentHashKey
        -- Primary key columns
        , IncidentIdentifier
                , SchoolId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            IncidentIdentifier
            + '|' + CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , IncidentIdentifier
        , SchoolId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentDisciplineIncidentAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentDisciplineIncidentAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentDisciplineIncidentAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentDisciplineIncidentAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.IncidentIdentifier
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- References
            , target.StudentParticipationCodeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StudentParticipationCodeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , StudentParticipationCodeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.IncidentIdentifier
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StudentParticipationCodeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentDisciplineIncidentAssociationBehavior (
        HashKey
        -- Identifying references (for aggregate child entity)
        , BehaviorDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BehaviorDescriptorId)
                    + '|' + IncidentIdentifier
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BehaviorDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentDisciplineIncidentAssociationBehavior source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentDisciplineIncidentAssociationBehavior target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BehaviorDescriptorId)
            + '|' + source.IncidentIdentifier
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.BehaviorDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.BehaviorDescriptorId)
            )
    )


        MERGE edfi.StudentDisciplineIncidentAssociationBehavior_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentDisciplineIncidentAssociationBehavior AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BehaviorDescriptorId)
        + '|' + source.IncidentIdentifier
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.BehaviorDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BehaviorDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.BehaviorDetailedDescription = source.BehaviorDetailedDescription
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , BehaviorDescriptorHashKey
                -- Attributes
                , BehaviorDetailedDescription
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BehaviorDescriptorId)
                + '|' + source.IncidentIdentifier
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BehaviorDescriptorId)
                )
                -- Attributes
                , BehaviorDetailedDescription
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , StudentHashKey
        -- Primary key columns
        , EducationOrganizationId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , EducationOrganizationId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentEducationOrganizationAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.HispanicLatinoEthnicity = source.HispanicLatinoEthnicity
            , target.LoginId = source.LoginId
            , target.ProfileThumbnail = source.ProfileThumbnail
                -- References
            , target.LimitedEnglishProficiencyDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LimitedEnglishProficiencyDescriptorId)
                )
            , target.OldEthnicityDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OldEthnicityDescriptorId)
                )
            , target.SexDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SexDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , HispanicLatinoEthnicity
                , LoginId
                , ProfileThumbnail
                -- References
                , LimitedEnglishProficiencyDescriptorHashKey
                , OldEthnicityDescriptorHashKey
                , SexDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , HispanicLatinoEthnicity
                , LoginId
                , ProfileThumbnail
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LimitedEnglishProficiencyDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.OldEthnicityDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SexDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentEducationOrganizationAssociationAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AddressTypeDescriptorHashKey
        , StateAbbreviationDescriptorHashKey
        -- Contextual primary key
        , City
        , PostalCode
        , StreetNumberName
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StateAbbreviationDescriptorId)
        )
            , City
            , PostalCode
            , StreetNumberName
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
    )


        MERGE edfi.StudentEducationOrganizationAssociationAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
            AND target.StateAbbreviationDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            )
            -- Contextual primary key
            AND target.City = source.City
            AND target.PostalCode = source.PostalCode
            AND target.StreetNumberName = source.StreetNumberName
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.ApartmentRoomSuiteNumber = source.ApartmentRoomSuiteNumber
            , target.BuildingSiteNumber = source.BuildingSiteNumber
            , target.CongressionalDistrict = source.CongressionalDistrict
            , target.CountyFIPSCode = source.CountyFIPSCode
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
            , target.NameOfCounty = source.NameOfCounty
                -- References
            , target.LocaleDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AddressTypeDescriptorHashKey
                , StateAbbreviationDescriptorHashKey
                -- Contextual primary key
                , City
                , PostalCode
                , StreetNumberName
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                -- References
                , LocaleDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                )
                -- Contextual primary key
                , City
                , PostalCode
                , StreetNumberName
                -- Attributes
                , ApartmentRoomSuiteNumber
                , BuildingSiteNumber
                , CongressionalDistrict
                , CountyFIPSCode
                , DoNotPublishIndicator
                , Latitude
                , Longitude
                , NameOfCounty
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LocaleDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationAddressPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , BeginDate
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + City
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + PostalCode
                    + '|' + CONVERT(nvarchar, StateAbbreviationDescriptorId)
                    + '|' + StreetNumberName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
            , BeginDate
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationAddressPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationAddressPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + source.City
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.PostalCode
            + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
            + '|' + source.StreetNumberName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.BeginDate = source.BeginDate
    )


        MERGE edfi.StudentEducationOrganizationAssociationAddressPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationAddressPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + source.City
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.PostalCode
        + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
        + '|' + source.StreetNumberName
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.BeginDate = source.BeginDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + source.City
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.PostalCode
                + '|' + CONVERT(nvarchar, source.StateAbbreviationDescriptorId)
                + '|' + source.StreetNumberName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationCohortYear (
        HashKey
        -- Identifying references (for aggregate child entity)
        , CohortYearTypeDescriptorHashKey
        , SchoolYearTypeHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, CohortYearTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, CohortYearTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationCohortYear source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationCohortYear target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.CohortYearTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.CohortYearTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.CohortYearTypeDescriptorId)
            )
            AND target.SchoolYearTypeHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SchoolYear)
            )
    )

    INSERT INTO edfi.StudentEducationOrganizationAssociationDisability (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DisabilityDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationDisability source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationDisability target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisabilityDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.DisabilityDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DisabilityDescriptorId)
            )
    )


        MERGE edfi.StudentEducationOrganizationAssociationDisability_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationDisability AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.DisabilityDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.DisabilityDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisabilityDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DisabilityDiagnosis = source.DisabilityDiagnosis
            , target.OrderOfDisability = source.OrderOfDisability
                -- References
            , target.DisabilityDeterminationSourceTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisabilityDeterminationSourceTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , DisabilityDescriptorHashKey
                -- Attributes
                , DisabilityDiagnosis
                , OrderOfDisability
                -- References
                , DisabilityDeterminationSourceTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisabilityDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisabilityDescriptorId)
                )
                -- Attributes
                , DisabilityDiagnosis
                , OrderOfDisability
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisabilityDeterminationSourceTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationDisabilityDesignation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DisabilityDesignationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDescriptorId)
                    + '|' + CONVERT(nvarchar, DisabilityDesignationDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDesignationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationDisabilityDesignation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationDisabilityDesignation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisabilityDescriptorId)
            + '|' + CONVERT(nvarchar, source.DisabilityDesignationDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.DisabilityDesignationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DisabilityDesignationDescriptorId)
            )
    )

    INSERT INTO edfi.StudentEducationOrganizationAssociationElectronicMail (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ElectronicMailTypeDescriptorHashKey
        -- Contextual primary key
        , ElectronicMailAddress
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ElectronicMailTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ElectronicMailTypeDescriptorId)
        )
            , ElectronicMailAddress
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationElectronicMail source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationElectronicMail target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.ElectronicMailTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            )
            AND target.ElectronicMailAddress = source.ElectronicMailAddress
    )


        MERGE edfi.StudentEducationOrganizationAssociationElectronicMail_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationElectronicMail AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.ElectronicMailTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
            )
            -- Contextual primary key
            AND target.ElectronicMailAddress = source.ElectronicMailAddress
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.PrimaryEmailAddressIndicator = source.PrimaryEmailAddressIndicator
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , ElectronicMailTypeDescriptorHashKey
                -- Contextual primary key
                , ElectronicMailAddress
                -- Attributes
                , DoNotPublishIndicator
                , PrimaryEmailAddressIndicator
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ElectronicMailTypeDescriptorId)
                )
                -- Contextual primary key
                , ElectronicMailAddress
                -- Attributes
                , DoNotPublishIndicator
                , PrimaryEmailAddressIndicator
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationInternationalAddress (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AddressTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AddressTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationInternationalAddress source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationInternationalAddress target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
    )


        MERGE edfi.StudentEducationOrganizationAssociationInternationalAddress_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationInternationalAddress AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AddressTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.AddressTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AddressTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.AddressLine1 = source.AddressLine1
            , target.AddressLine2 = source.AddressLine2
            , target.AddressLine3 = source.AddressLine3
            , target.AddressLine4 = source.AddressLine4
            , target.BeginDate = source.BeginDate
            , target.EndDate = source.EndDate
            , target.Latitude = source.Latitude
            , target.Longitude = source.Longitude
                -- References
            , target.CountryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CountryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , AddressTypeDescriptorHashKey
                -- Attributes
                , AddressLine1
                , AddressLine2
                , AddressLine3
                , AddressLine4
                , BeginDate
                , EndDate
                , Latitude
                , Longitude
                -- References
                , CountryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AddressTypeDescriptorId)
                )
                -- Attributes
                , AddressLine1
                , AddressLine2
                , AddressLine3
                , AddressLine4
                , BeginDate
                , EndDate
                , Latitude
                , Longitude
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CountryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationLanguage (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, LanguageDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationLanguage source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationLanguage target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.LanguageDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.LanguageDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageDescriptorId)
            )
    )

    INSERT INTO edfi.StudentEducationOrganizationAssociationLanguageUse (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageUseDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, LanguageDescriptorId)
                    + '|' + CONVERT(nvarchar, LanguageUseDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageUseDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationLanguageUse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationLanguageUse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.LanguageDescriptorId)
            + '|' + CONVERT(nvarchar, source.LanguageUseDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.LanguageUseDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageUseDescriptorId)
            )
    )

    INSERT INTO edfi.StudentEducationOrganizationAssociationProgramParticipation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ProgramTypeDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationProgramParticipation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationProgramParticipation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.ProgramTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
    )


        MERGE edfi.StudentEducationOrganizationAssociationProgramParticipation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationProgramParticipation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.ProgramTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.BeginDate = source.BeginDate
            , target.DesignatedBy = source.DesignatedBy
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , ProgramTypeDescriptorHashKey
                -- Attributes
                , BeginDate
                , DesignatedBy
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                )
                -- Attributes
                , BeginDate
                , DesignatedBy
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ProgramCharacteristicDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramCharacteristicDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramCharacteristicDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramCharacteristicDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.ProgramCharacteristicDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ProgramCharacteristicDescriptorId)
            )
    )

    INSERT INTO edfi.StudentEducationOrganizationAssociationRace (
        HashKey
        -- Identifying references (for aggregate child entity)
        , RaceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, RaceDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, RaceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationRace source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationRace target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.RaceDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.RaceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.RaceDescriptorId)
            )
    )

    INSERT INTO edfi.StudentEducationOrganizationAssociationStudentCharacteristic (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StudentCharacteristicDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentCharacteristicDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentCharacteristicDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentCharacteristic source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationStudentCharacteristic target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StudentCharacteristicDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
            )
    )


        MERGE edfi.StudentEducationOrganizationAssociationStudentCharacteristic_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentCharacteristic AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.StudentCharacteristicDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DesignatedBy = source.DesignatedBy
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , StudentCharacteristicDescriptorHashKey
                -- Attributes
                , DesignatedBy
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
                )
                -- Attributes
                , DesignatedBy
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , BeginDate
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentCharacteristicDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
            , BeginDate
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.BeginDate = source.BeginDate
    )


        MERGE edfi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.BeginDate = source.BeginDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentCharacteristicDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationStudentIdentificationCode (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StudentIdentificationSystemDescriptorHashKey
        -- Contextual primary key
        , AssigningOrganizationIdentificationCode
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentIdentificationSystemDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentIdentificationSystemDescriptorId)
        )
            , AssigningOrganizationIdentificationCode
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentIdentificationCode source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationStudentIdentificationCode target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentIdentificationSystemDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StudentIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StudentIdentificationSystemDescriptorId)
            )
            AND target.AssigningOrganizationIdentificationCode = source.AssigningOrganizationIdentificationCode
    )


        MERGE edfi.StudentEducationOrganizationAssociationStudentIdentificationCode_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentIdentificationCode AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentIdentificationSystemDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.StudentIdentificationSystemDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StudentIdentificationSystemDescriptorId)
            )
            -- Contextual primary key
            AND target.AssigningOrganizationIdentificationCode = source.AssigningOrganizationIdentificationCode
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.IdentificationCode = source.IdentificationCode
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , StudentIdentificationSystemDescriptorHashKey
                -- Contextual primary key
                , AssigningOrganizationIdentificationCode
                -- Attributes
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentIdentificationSystemDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StudentIdentificationSystemDescriptorId)
                )
                -- Contextual primary key
                , AssigningOrganizationIdentificationCode
                -- Attributes
                , IdentificationCode
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationStudentIndicator (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , IndicatorName
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
            , IndicatorName
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentIndicator source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationStudentIndicator target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.IndicatorName = source.IndicatorName
    )


        MERGE edfi.StudentEducationOrganizationAssociationStudentIndicator_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentIndicator AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.IndicatorName = source.IndicatorName
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DesignatedBy = source.DesignatedBy
            , target.Indicator = source.Indicator
            , target.IndicatorGroup = source.IndicatorGroup
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , IndicatorName
                -- Attributes
                , DesignatedBy
                , Indicator
                , IndicatorGroup
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , IndicatorName
                -- Attributes
                , DesignatedBy
                , Indicator
                , IndicatorGroup
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationStudentIndicatorPeriod (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , BeginDate
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + IndicatorName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
            , BeginDate
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentIndicatorPeriod source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationStudentIndicatorPeriod target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.IndicatorName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.BeginDate = source.BeginDate
    )


        MERGE edfi.StudentEducationOrganizationAssociationStudentIndicatorPeriod_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationStudentIndicatorPeriod AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.IndicatorName
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.BeginDate = source.BeginDate
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.IndicatorName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , BeginDate
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationTelephone (
        HashKey
        -- Identifying references (for aggregate child entity)
        , TelephoneNumberTypeDescriptorHashKey
        -- Contextual primary key
        , TelephoneNumber
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
            , TelephoneNumber
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationTelephone source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationTelephone target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.TelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.TelephoneNumber = source.TelephoneNumber
    )


        MERGE edfi.StudentEducationOrganizationAssociationTelephone_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationTelephone AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.TelephoneNumberTypeDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
            -- Contextual primary key
            AND target.TelephoneNumber = source.TelephoneNumber
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DoNotPublishIndicator = source.DoNotPublishIndicator
            , target.OrderOfPriority = source.OrderOfPriority
            , target.TextMessageCapabilityIndicator = source.TextMessageCapabilityIndicator
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , TelephoneNumberTypeDescriptorHashKey
                -- Contextual primary key
                , TelephoneNumber
                -- Attributes
                , DoNotPublishIndicator
                , OrderOfPriority
                , TextMessageCapabilityIndicator
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
                )
                -- Contextual primary key
                , TelephoneNumber
                -- Attributes
                , DoNotPublishIndicator
                , OrderOfPriority
                , TextMessageCapabilityIndicator
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentEducationOrganizationAssociationTribalAffiliation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , TribalAffiliationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TribalAffiliationDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TribalAffiliationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationAssociationTribalAffiliation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationAssociationTribalAffiliation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TribalAffiliationDescriptorId)
            )
            AND target.TribalAffiliationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.TribalAffiliationDescriptorId)
            )
    )

    INSERT INTO edfi.StudentEducationOrganizationResponsibilityAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , ResponsibilityDescriptorHashKey
        , StudentHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ResponsibilityDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ResponsibilityDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ResponsibilityDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ResponsibilityDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentEducationOrganizationResponsibilityAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentEducationOrganizationResponsibilityAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ResponsibilityDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentEducationOrganizationResponsibilityAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentEducationOrganizationResponsibilityAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ResponsibilityDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ResponsibilityDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentGradebookEntry (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GradebookEntryHashKey
        , StudentSectionAssociationHashKey
        -- Primary key columns
        , BeginDate
                , DateAssigned
                , GradebookEntryTitle
                , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, DateAssigned, 23)
                    + '|' + GradebookEntryTitle
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DateAssigned, 23)
            + '|' + GradebookEntryTitle
            + '|' + LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , DateAssigned
        , GradebookEntryTitle
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentGradebookEntry source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentGradebookEntry target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.DateAssigned, 23)
            + '|' + source.GradebookEntryTitle
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentGradebookEntry_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentGradebookEntry AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.DateAssigned, 23)
        + '|' + source.GradebookEntryTitle
        + '|' + source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.DateFulfilled = source.DateFulfilled
            , target.DiagnosticStatement = source.DiagnosticStatement
            , target.LetterGradeEarned = source.LetterGradeEarned
            , target.NumericGradeEarned = source.NumericGradeEarned
                -- References
            , target.CompetencyLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , DateFulfilled
                , DiagnosticStatement
                , LetterGradeEarned
                , NumericGradeEarned
                -- References
                , CompetencyLevelDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.DateAssigned, 23)
                + '|' + source.GradebookEntryTitle
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , DateFulfilled
                , DiagnosticStatement
                , LetterGradeEarned
                , NumericGradeEarned
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentHomelessProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentHomelessProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentHomelessProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentHomelessProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentHomelessProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Attributes
            target.AwaitingFosterCare = source.AwaitingFosterCare
            , target.HomelessUnaccompaniedYouth = source.HomelessUnaccompaniedYouth
                -- References
            , target.HomelessPrimaryNighttimeResidenceDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.HomelessPrimaryNighttimeResidenceDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AwaitingFosterCare
                , HomelessUnaccompaniedYouth
                -- References
                , HomelessPrimaryNighttimeResidenceDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , AwaitingFosterCare
                , HomelessUnaccompaniedYouth
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.HomelessPrimaryNighttimeResidenceDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.StudentHomelessProgramAssociationHomelessProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , HomelessProgramServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, HomelessProgramServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, HomelessProgramServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentHomelessProgramAssociationHomelessProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentHomelessProgramAssociationHomelessProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.HomelessProgramServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.HomelessProgramServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.HomelessProgramServiceDescriptorId)
            )
    )


        MERGE edfi.StudentHomelessProgramAssociationHomelessProgramService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentHomelessProgramAssociationHomelessProgramService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.HomelessProgramServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.HomelessProgramServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.HomelessProgramServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , HomelessProgramServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.HomelessProgramServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.HomelessProgramServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentIdentificationSystemDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , StudentIdentificationSystemDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentIdentificationSystemDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentIdentificationSystemDescriptorId)
        )
        , StudentIdentificationSystemDescriptorId
    FROM EdFi_Ods_2021.edfi.StudentIdentificationSystemDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentIdentificationSystemDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StudentIdentificationSystemDescriptorId)
            )
    )

    
    INSERT INTO edfi.StudentInterventionAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , InterventionHashKey
        , StudentHashKey
        -- Primary key columns
        , EducationOrganizationId
                , InterventionIdentificationCode
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + InterventionIdentificationCode
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
            + '|' + InterventionIdentificationCode
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , EducationOrganizationId
        , InterventionIdentificationCode
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentInterventionAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentInterventionAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.InterventionIdentificationCode
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentInterventionAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentInterventionAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + source.InterventionIdentificationCode
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.DiagnosticStatement = source.DiagnosticStatement
            , target.Dosage = source.Dosage
                -- References
            , target.CohortHashKey = HASHBYTES('sha1', 
                source.CohortIdentifier
                + '|' + CONVERT(nvarchar, source.CohortEducationOrganizationId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , DiagnosticStatement
                , Dosage
                -- References
                , CohortHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + source.InterventionIdentificationCode
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , DiagnosticStatement
                , Dosage
                -- References
                , HASHBYTES('sha1', 
                source.CohortIdentifier
                + '|' + CONVERT(nvarchar, source.CohortEducationOrganizationId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentInterventionAssociationInterventionEffectiveness (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DiagnosisDescriptorHashKey
        , GradeLevelDescriptorHashKey
        , PopulationServedDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradeLevelDescriptorId)
                    + '|' + InterventionIdentificationCode
                    + '|' + CONVERT(nvarchar, PopulationServedDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DiagnosisDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradeLevelDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, PopulationServedDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentInterventionAssociationInterventionEffectiveness source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentInterventionAssociationInterventionEffectiveness target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiagnosisDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
            + '|' + source.InterventionIdentificationCode
            + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.DiagnosisDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DiagnosisDescriptorId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
            AND target.PopulationServedDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
    )


        MERGE edfi.StudentInterventionAssociationInterventionEffectiveness_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentInterventionAssociationInterventionEffectiveness AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.DiagnosisDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
        + '|' + source.InterventionIdentificationCode
        + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.DiagnosisDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DiagnosisDescriptorId)
            )
            AND target.GradeLevelDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradeLevelDescriptorId)
            )
            AND target.PopulationServedDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.PopulationServedDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.ImprovementIndex = source.ImprovementIndex
                -- References
            , target.InterventionEffectivenessRatingDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionEffectivenessRatingDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , DiagnosisDescriptorHashKey
                , GradeLevelDescriptorHashKey
                , PopulationServedDescriptorHashKey
                -- Attributes
                , ImprovementIndex
                -- References
                , InterventionEffectivenessRatingDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DiagnosisDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GradeLevelDescriptorId)
                + '|' + source.InterventionIdentificationCode
                + '|' + CONVERT(nvarchar, source.PopulationServedDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DiagnosisDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradeLevelDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.PopulationServedDescriptorId)
                )
                -- Attributes
                , ImprovementIndex
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.InterventionEffectivenessRatingDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentInterventionAttendanceEvent (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AttendanceEventCategoryDescriptorHashKey
        , InterventionHashKey
        , StudentHashKey
        -- Primary key columns
        , AttendanceEventCategoryDescriptorId
                , EducationOrganizationId
                , EventDate
                , InterventionIdentificationCode
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, EventDate, 23)
                    + '|' + InterventionIdentificationCode
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
            + '|' + InterventionIdentificationCode
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , AttendanceEventCategoryDescriptorId
        , EducationOrganizationId
        , EventDate
        , InterventionIdentificationCode
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentInterventionAttendanceEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentInterventionAttendanceEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.EventDate, 23)
            + '|' + source.InterventionIdentificationCode
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentInterventionAttendanceEvent_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentInterventionAttendanceEvent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.EventDate, 23)
        + '|' + source.InterventionIdentificationCode
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AttendanceEventReason = source.AttendanceEventReason
            , target.EventDuration = source.EventDuration
            , target.InterventionDuration = source.InterventionDuration
                -- References
            , target.EducationalEnvironmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AttendanceEventReason
                , EventDuration
                , InterventionDuration
                -- References
                , EducationalEnvironmentDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.EventDate, 23)
                + '|' + source.InterventionIdentificationCode
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , AttendanceEventReason
                , EventDuration
                , InterventionDuration
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentLanguageInstructionProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentLanguageInstructionProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentLanguageInstructionProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentLanguageInstructionProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentLanguageInstructionProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Attributes
            target.Dosage = source.Dosage
            , target.EnglishLearnerParticipation = source.EnglishLearnerParticipation
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Dosage
                , EnglishLearnerParticipation
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , Dosage
                , EnglishLearnerParticipation
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SchoolYearTypeHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolYear)
        )
    FROM EdFi_Ods_2021.edfi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearTypeHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SchoolYear)
            )
    )


        MERGE edfi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.SchoolYearTypeHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolYear)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- References
            , target.MonitoredDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MonitoredDescriptorId)
                )
            , target.ParticipationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParticipationDescriptorId)
                )
            , target.ProficiencyDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProficiencyDescriptorId)
                )
            , target.ProgressDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProgressDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , SchoolYearTypeHashKey
                -- References
                , MonitoredDescriptorHashKey
                , ParticipationDescriptorHashKey
                , ProficiencyDescriptorHashKey
                , ProgressDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MonitoredDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParticipationDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProficiencyDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ProgressDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , LanguageInstructionProgramServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, LanguageInstructionProgramServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, LanguageInstructionProgramServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.LanguageInstructionProgramServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.LanguageInstructionProgramServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.LanguageInstructionProgramServiceDescriptorId)
            )
    )


        MERGE edfi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.LanguageInstructionProgramServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.LanguageInstructionProgramServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.LanguageInstructionProgramServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , LanguageInstructionProgramServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.LanguageInstructionProgramServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.LanguageInstructionProgramServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentLearningObjective (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GradingPeriodHashKey
        , LearningObjectiveHashKey
        , StudentHashKey
        -- Primary key columns
        , GradingPeriodDescriptorId
                , GradingPeriodSchoolId
                , GradingPeriodSchoolYear
                , GradingPeriodSequence
                , LearningObjectiveId
                , Namespace
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + LearningObjectiveId
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, GradingPeriodSequence)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
        )
        , HASHBYTES('sha1', 
            LearningObjectiveId
            + '|' + Namespace
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , GradingPeriodDescriptorId
        , GradingPeriodSchoolId
        , GradingPeriodSchoolYear
        , GradingPeriodSequence
        , LearningObjectiveId
        , Namespace
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentLearningObjective source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentLearningObjective target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.LearningObjectiveId
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentLearningObjective_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentLearningObjective AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.GradingPeriodDescriptorId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
        + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
        + '|' + source.LearningObjectiveId
        + '|' + source.Namespace
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.DiagnosticStatement = source.DiagnosticStatement
                -- References
            , target.CompetencyLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , DiagnosticStatement
                -- References
                , CompetencyLevelDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.GradingPeriodDescriptorId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
                + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
                + '|' + source.LearningObjectiveId
                + '|' + source.Namespace
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , DiagnosticStatement
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.CompetencyLevelDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentLearningObjectiveGeneralStudentProgramAssociation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , GeneralStudentProgramAssociationHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + LearningObjectiveId
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.StudentLearningObjectiveGeneralStudentProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentLearningObjectiveGeneralStudentProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.LearningObjectiveId
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.GeneralStudentProgramAssociationHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.StudentLearningObjectiveStudentSectionAssociation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StudentSectionAssociationHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, GradingPeriodDescriptorId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolId)
                    + '|' + CONVERT(nvarchar, GradingPeriodSchoolYear)
                    + '|' + CONVERT(nvarchar, GradingPeriodSequence)
                    + '|' + LearningObjectiveId
                    + '|' + LocalCourseCode
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
    FROM EdFi_Ods_2021.edfi.StudentLearningObjectiveStudentSectionAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentLearningObjectiveStudentSectionAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.GradingPeriodDescriptorId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolId)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSchoolYear)
            + '|' + CONVERT(nvarchar, source.GradingPeriodSequence)
            + '|' + source.LearningObjectiveId
            + '|' + source.LocalCourseCode
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StudentSectionAssociationHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    INSERT INTO edfi.StudentMigrantEducationProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentMigrantEducationProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentMigrantEducationProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentMigrantEducationProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentMigrantEducationProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Attributes
            target.EligibilityExpirationDate = source.EligibilityExpirationDate
            , target.LastQualifyingMove = source.LastQualifyingMove
            , target.PriorityForServices = source.PriorityForServices
            , target.QualifyingArrivalDate = source.QualifyingArrivalDate
            , target.StateResidencyDate = source.StateResidencyDate
            , target.USInitialEntry = source.USInitialEntry
            , target.USInitialSchoolEntry = source.USInitialSchoolEntry
            , target.USMostRecentEntry = source.USMostRecentEntry
                -- References
            , target.ContinuationOfServicesReasonDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ContinuationOfServicesReasonDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EligibilityExpirationDate
                , LastQualifyingMove
                , PriorityForServices
                , QualifyingArrivalDate
                , StateResidencyDate
                , USInitialEntry
                , USInitialSchoolEntry
                , USMostRecentEntry
                -- References
                , ContinuationOfServicesReasonDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EligibilityExpirationDate
                , LastQualifyingMove
                , PriorityForServices
                , QualifyingArrivalDate
                , StateResidencyDate
                , USInitialEntry
                , USInitialSchoolEntry
                , USMostRecentEntry
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ContinuationOfServicesReasonDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , MigrantEducationProgramServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, MigrantEducationProgramServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, MigrantEducationProgramServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.MigrantEducationProgramServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.MigrantEducationProgramServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.MigrantEducationProgramServiceDescriptorId)
            )
    )


        MERGE edfi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.MigrantEducationProgramServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.MigrantEducationProgramServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.MigrantEducationProgramServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , MigrantEducationProgramServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.MigrantEducationProgramServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MigrantEducationProgramServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentNeglectedOrDelinquentProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentNeglectedOrDelinquentProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentNeglectedOrDelinquentProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentNeglectedOrDelinquentProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentNeglectedOrDelinquentProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- References
            target.NeglectedOrDelinquentProgramDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.NeglectedOrDelinquentProgramDescriptorId)
                )
            , target.ELAProgressLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ELAProgressLevelDescriptorId)
                )
            , target.MathematicsProgressLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MathematicsProgressLevelDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , NeglectedOrDelinquentProgramDescriptorHashKey
                , ELAProgressLevelDescriptorHashKey
                , MathematicsProgressLevelDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.NeglectedOrDelinquentProgramDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ELAProgressLevelDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.MathematicsProgressLevelDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , NeglectedOrDelinquentProgramServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, NeglectedOrDelinquentProgramServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, NeglectedOrDelinquentProgramServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.NeglectedOrDelinquentProgramServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.NeglectedOrDelinquentProgramServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.NeglectedOrDelinquentProgramServiceDescriptorId)
            )
    )


        MERGE edfi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.NeglectedOrDelinquentProgramServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.NeglectedOrDelinquentProgramServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.NeglectedOrDelinquentProgramServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , NeglectedOrDelinquentProgramServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.NeglectedOrDelinquentProgramServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.NeglectedOrDelinquentProgramServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentParentAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , ParentHashKey
        , StudentHashKey
        -- Primary key columns
        , ParentUSI
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, ParentUSI)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ParentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , ParentUSI
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentParentAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentParentAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ParentUSI)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentParentAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentParentAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.ParentUSI)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.ContactPriority = source.ContactPriority
            , target.ContactRestrictions = source.ContactRestrictions
            , target.EmergencyContactStatus = source.EmergencyContactStatus
            , target.LivesWith = source.LivesWith
            , target.PrimaryContactStatus = source.PrimaryContactStatus
                -- References
            , target.RelationDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RelationDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , ContactPriority
                , ContactRestrictions
                , EmergencyContactStatus
                , LivesWith
                , PrimaryContactStatus
                -- References
                , RelationDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParentUSI)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , ContactPriority
                , ContactRestrictions
                , EmergencyContactStatus
                , LivesWith
                , PrimaryContactStatus
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RelationDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentParticipationCodeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , StudentParticipationCodeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentParticipationCodeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentParticipationCodeDescriptorId)
        )
        , StudentParticipationCodeDescriptorId
    FROM EdFi_Ods_2021.edfi.StudentParticipationCodeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentParticipationCodeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StudentParticipationCodeDescriptorId)
            )
    )

    
    INSERT INTO edfi.StudentProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

    
    INSERT INTO edfi.StudentProgramAssociationService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, ServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentProgramAssociationService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentProgramAssociationService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.ServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ServiceDescriptorId)
            )
    )


        MERGE edfi.StudentProgramAssociationService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentProgramAssociationService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.ServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , ServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentProgramAttendanceEvent (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AttendanceEventCategoryDescriptorHashKey
        , EducationOrganizationHashKey
        , ProgramHashKey
        , StudentHashKey
        -- Primary key columns
        , AttendanceEventCategoryDescriptorId
                , EducationOrganizationId
                , EventDate
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, EventDate, 23)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , AttendanceEventCategoryDescriptorId
        , EducationOrganizationId
        , EventDate
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentProgramAttendanceEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentProgramAttendanceEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.EventDate, 23)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentProgramAttendanceEvent_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentProgramAttendanceEvent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.EventDate, 23)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.AttendanceEventReason = source.AttendanceEventReason
            , target.EventDuration = source.EventDuration
            , target.ProgramAttendanceDuration = source.ProgramAttendanceDuration
                -- References
            , target.EducationalEnvironmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , AttendanceEventReason
                , EventDuration
                , ProgramAttendanceDuration
                -- References
                , EducationalEnvironmentDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.EventDate, 23)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , AttendanceEventReason
                , EventDuration
                , ProgramAttendanceDuration
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentSchoolAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SchoolHashKey
        , StudentHashKey
        -- Primary key columns
        , EntryDate
                , SchoolId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EntryDate, 23)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , EntryDate
        , SchoolId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentSchoolAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSchoolAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EntryDate, 23)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentSchoolAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSchoolAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.EntryDate, 23)
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EmployedWhileEnrolled = source.EmployedWhileEnrolled
            , target.ExitWithdrawDate = source.ExitWithdrawDate
            , target.FullTimeEquivalency = source.FullTimeEquivalency
            , target.PrimarySchool = source.PrimarySchool
            , target.RepeatGradeIndicator = source.RepeatGradeIndicator
            , target.SchoolChoiceTransfer = source.SchoolChoiceTransfer
            , target.TermCompletionIndicator = source.TermCompletionIndicator
                -- References
            , target.CalendarHashKey = HASHBYTES('sha1', 
                source.CalendarCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
            , target.EntryGradeLevelReasonDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EntryGradeLevelReasonDescriptorId)
                )
            , target.EntryTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EntryTypeDescriptorId)
                )
            , target.ExitWithdrawTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ExitWithdrawTypeDescriptorId)
                )
            , target.EntryGradeLevelDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EntryGradeLevelDescriptorId)
                )
            , target.GraduationPlanHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
                )
            , target.ResidencyStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResidencyStatusDescriptorId)
                )
            , target.SchoolYearTypeHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
            , target.ClassOfSchoolYearTypeHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ClassOfSchoolYear)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EmployedWhileEnrolled
                , ExitWithdrawDate
                , FullTimeEquivalency
                , PrimarySchool
                , RepeatGradeIndicator
                , SchoolChoiceTransfer
                , TermCompletionIndicator
                -- References
                , CalendarHashKey
                , EntryGradeLevelReasonDescriptorHashKey
                , EntryTypeDescriptorHashKey
                , ExitWithdrawTypeDescriptorHashKey
                , EntryGradeLevelDescriptorHashKey
                , GraduationPlanHashKey
                , ResidencyStatusDescriptorHashKey
                , SchoolYearTypeHashKey
                , ClassOfSchoolYearTypeHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EntryDate, 23)
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EmployedWhileEnrolled
                , ExitWithdrawDate
                , FullTimeEquivalency
                , PrimarySchool
                , RepeatGradeIndicator
                , SchoolChoiceTransfer
                , TermCompletionIndicator
                -- References
                , HASHBYTES('sha1', 
                source.CalendarCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EntryGradeLevelReasonDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EntryTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ExitWithdrawTypeDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EntryGradeLevelDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.GraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.GraduationSchoolYear)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ResidencyStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ClassOfSchoolYear)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentSchoolAssociationAlternativeGraduationPlan (
        HashKey
        -- Identifying references (for aggregate child entity)
        , AlternativeGraduationPlanHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AlternativeEducationOrganizationId)
                    + '|' + CONVERT(nvarchar, AlternativeGraduationPlanTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, AlternativeGraduationSchoolYear)
                    + '|' + CONVERT(nvarchar, EntryDate, 23)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AlternativeEducationOrganizationId)
            + '|' + CONVERT(nvarchar, AlternativeGraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, AlternativeGraduationSchoolYear)
        )
    FROM EdFi_Ods_2021.edfi.StudentSchoolAssociationAlternativeGraduationPlan source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSchoolAssociationAlternativeGraduationPlan target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AlternativeEducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.AlternativeGraduationPlanTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.AlternativeGraduationSchoolYear)
            + '|' + CONVERT(nvarchar, source.EntryDate, 23)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.AlternativeGraduationPlanHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.AlternativeEducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.AlternativeGraduationPlanTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.AlternativeGraduationSchoolYear)
            )
    )

    INSERT INTO edfi.StudentSchoolAssociationEducationPlan (
        HashKey
        -- Identifying references (for aggregate child entity)
        , EducationPlanDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationPlanDescriptorId)
                    + '|' + CONVERT(nvarchar, EntryDate, 23)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationPlanDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentSchoolAssociationEducationPlan source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSchoolAssociationEducationPlan target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationPlanDescriptorId)
            + '|' + CONVERT(nvarchar, source.EntryDate, 23)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.EducationPlanDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.EducationPlanDescriptorId)
            )
    )

    INSERT INTO edfi.StudentSchoolAttendanceEvent (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AttendanceEventCategoryDescriptorHashKey
        , SchoolHashKey
        , SessionHashKey
        , StudentHashKey
        -- Primary key columns
        , AttendanceEventCategoryDescriptorId
                , EventDate
                , SchoolId
                , SchoolYear
                , SessionName
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EventDate, 23)
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , AttendanceEventCategoryDescriptorId
        , EventDate
        , SchoolId
        , SchoolYear
        , SessionName
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentSchoolAttendanceEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSchoolAttendanceEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EventDate, 23)
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentSchoolAttendanceEvent_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSchoolAttendanceEvent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.EventDate, 23)
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SessionName
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.ArrivalTime = source.ArrivalTime
            , target.AttendanceEventReason = source.AttendanceEventReason
            , target.DepartureTime = source.DepartureTime
            , target.EventDuration = source.EventDuration
            , target.SchoolAttendanceDuration = source.SchoolAttendanceDuration
                -- References
            , target.EducationalEnvironmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , ArrivalTime
                , AttendanceEventReason
                , DepartureTime
                , EventDuration
                , SchoolAttendanceDuration
                -- References
                , EducationalEnvironmentDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.EventDate, 23)
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , ArrivalTime
                , AttendanceEventReason
                , DepartureTime
                , EventDuration
                , SchoolAttendanceDuration
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentSchoolFoodServiceProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentSchoolFoodServiceProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSchoolFoodServiceProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentSchoolFoodServiceProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSchoolFoodServiceProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Attributes
            target.DirectCertification = source.DirectCertification
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , DirectCertification
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , DirectCertification
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SchoolFoodServiceProgramServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, SchoolFoodServiceProgramServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SchoolFoodServiceProgramServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.SchoolFoodServiceProgramServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolFoodServiceProgramServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SchoolFoodServiceProgramServiceDescriptorId)
            )
    )


        MERGE edfi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.SchoolFoodServiceProgramServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.SchoolFoodServiceProgramServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SchoolFoodServiceProgramServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , SchoolFoodServiceProgramServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.SchoolFoodServiceProgramServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolFoodServiceProgramServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentSectionAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SectionHashKey
        , StudentHashKey
        -- Primary key columns
        , BeginDate
                , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentSectionAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSectionAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentSectionAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSectionAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.EndDate = source.EndDate
            , target.HomeroomIndicator = source.HomeroomIndicator
            , target.TeacherStudentDataLinkExclusion = source.TeacherStudentDataLinkExclusion
                -- References
            , target.AttemptStatusDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AttemptStatusDescriptorId)
                )
            , target.RepeatIdentifierDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RepeatIdentifierDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , EndDate
                , HomeroomIndicator
                , TeacherStudentDataLinkExclusion
                -- References
                , AttemptStatusDescriptorHashKey
                , RepeatIdentifierDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , EndDate
                , HomeroomIndicator
                , TeacherStudentDataLinkExclusion
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AttemptStatusDescriptorId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.RepeatIdentifierDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentSectionAttendanceEvent (
        HashKey
        -- Identifying references (for aggregate root entity)
        , AttendanceEventCategoryDescriptorHashKey
        , SectionHashKey
        , StudentHashKey
        -- Primary key columns
        , AttendanceEventCategoryDescriptorId
                , EventDate
                , LocalCourseCode
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
                    + '|' + CONVERT(nvarchar, EventDate, 23)
                    + '|' + LocalCourseCode
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, AttendanceEventCategoryDescriptorId)
        )
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StudentUSI)
        )
        , AttendanceEventCategoryDescriptorId
        , EventDate
        , LocalCourseCode
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentSectionAttendanceEvent source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSectionAttendanceEvent target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
            + '|' + CONVERT(nvarchar, source.EventDate, 23)
            + '|' + source.LocalCourseCode
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentSectionAttendanceEvent_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSectionAttendanceEvent AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
        + '|' + CONVERT(nvarchar, source.EventDate, 23)
        + '|' + source.LocalCourseCode
        + '|' + CONVERT(nvarchar, source.SchoolId)
        + '|' + CONVERT(nvarchar, source.SchoolYear)
        + '|' + source.SectionIdentifier
        + '|' + source.SessionName
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.ArrivalTime = source.ArrivalTime
            , target.AttendanceEventReason = source.AttendanceEventReason
            , target.DepartureTime = source.DepartureTime
            , target.EventDuration = source.EventDuration
            , target.SectionAttendanceDuration = source.SectionAttendanceDuration
                -- References
            , target.EducationalEnvironmentDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , ArrivalTime
                , AttendanceEventReason
                , DepartureTime
                , EventDuration
                , SectionAttendanceDuration
                -- References
                , EducationalEnvironmentDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.AttendanceEventCategoryDescriptorId)
                + '|' + CONVERT(nvarchar, source.EventDate, 23)
                + '|' + source.LocalCourseCode
                + '|' + CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SectionIdentifier
                + '|' + source.SessionName
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , ArrivalTime
                , AttendanceEventReason
                , DepartureTime
                , EventDuration
                , SectionAttendanceDuration
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationalEnvironmentDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.StudentSpecialEducationProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSpecialEducationProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentSpecialEducationProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Attributes
            target.IdeaEligibility = source.IdeaEligibility
            , target.IEPBeginDate = source.IEPBeginDate
            , target.IEPEndDate = source.IEPEndDate
            , target.IEPReviewDate = source.IEPReviewDate
            , target.LastEvaluationDate = source.LastEvaluationDate
            , target.MedicallyFragile = source.MedicallyFragile
            , target.MultiplyDisabled = source.MultiplyDisabled
            , target.SchoolHoursPerWeek = source.SchoolHoursPerWeek
            , target.SpecialEducationHoursPerWeek = source.SpecialEducationHoursPerWeek
                -- References
            , target.SpecialEducationSettingDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SpecialEducationSettingDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , IdeaEligibility
                , IEPBeginDate
                , IEPEndDate
                , IEPReviewDate
                , LastEvaluationDate
                , MedicallyFragile
                , MultiplyDisabled
                , SchoolHoursPerWeek
                , SpecialEducationHoursPerWeek
                -- References
                , SpecialEducationSettingDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Attributes
                , IdeaEligibility
                , IEPBeginDate
                , IEPEndDate
                , IEPReviewDate
                , LastEvaluationDate
                , MedicallyFragile
                , MultiplyDisabled
                , SchoolHoursPerWeek
                , SpecialEducationHoursPerWeek
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SpecialEducationSettingDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.StudentSpecialEducationProgramAssociationDisability (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DisabilityDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, DisabilityDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationDisability source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSpecialEducationProgramAssociationDisability target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.DisabilityDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.DisabilityDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DisabilityDescriptorId)
            )
    )


        MERGE edfi.StudentSpecialEducationProgramAssociationDisability_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationDisability AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.DisabilityDescriptorId)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.DisabilityDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.DisabilityDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.DisabilityDiagnosis = source.DisabilityDiagnosis
            , target.OrderOfDisability = source.OrderOfDisability
                -- References
            , target.DisabilityDeterminationSourceTypeDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisabilityDeterminationSourceTypeDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , DisabilityDescriptorHashKey
                -- Attributes
                , DisabilityDiagnosis
                , OrderOfDisability
                -- References
                , DisabilityDeterminationSourceTypeDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.DisabilityDescriptorId)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisabilityDescriptorId)
                )
                -- Attributes
                , DisabilityDiagnosis
                , OrderOfDisability
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.DisabilityDeterminationSourceTypeDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentSpecialEducationProgramAssociationDisabilityDesignation (
        HashKey
        -- Identifying references (for aggregate child entity)
        , DisabilityDesignationDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, DisabilityDescriptorId)
                    + '|' + CONVERT(nvarchar, DisabilityDesignationDescriptorId)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, DisabilityDesignationDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationDisabilityDesignation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSpecialEducationProgramAssociationDisabilityDesignation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.DisabilityDescriptorId)
            + '|' + CONVERT(nvarchar, source.DisabilityDesignationDescriptorId)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.DisabilityDesignationDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.DisabilityDesignationDescriptorId)
            )
    )

    INSERT INTO edfi.StudentSpecialEducationProgramAssociationServiceProvider (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StaffHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
    FROM EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationServiceProvider source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSpecialEducationProgramAssociationServiceProvider target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StaffHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StaffUSI)
            )
    )


        MERGE edfi.StudentSpecialEducationProgramAssociationServiceProvider_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationServiceProvider AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.StaffHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffUSI)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryProvider = source.PrimaryProvider
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , StaffHashKey
                -- Attributes
                , PrimaryProvider
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
                -- Attributes
                , PrimaryProvider
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SpecialEducationProgramServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, SpecialEducationProgramServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SpecialEducationProgramServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SpecialEducationProgramServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
            )
    )


        MERGE edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.SpecialEducationProgramServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , SpecialEducationProgramServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider (
        HashKey
        -- Identifying references (for aggregate child entity)
        , StaffHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, SpecialEducationProgramServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
    FROM EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.StaffHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.StaffUSI)
            )
    )


        MERGE edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.StaffUSI)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.StaffHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.StaffUSI)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryProvider = source.PrimaryProvider
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , StaffHashKey
                -- Attributes
                , PrimaryProvider
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.SpecialEducationProgramServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.StaffUSI)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
                -- Attributes
                , PrimaryProvider
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentTitleIPartAProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , GeneralStudentProgramAssociationHashKey
        -- Primary key columns
        , BeginDate
                , EducationOrganizationId
                , ProgramEducationOrganizationId
                , ProgramName
                , ProgramTypeDescriptorId
                , StudentUSI
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
            + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , BeginDate
        , EducationOrganizationId
        , ProgramEducationOrganizationId
        , ProgramName
        , ProgramTypeDescriptorId
        , StudentUSI
    FROM EdFi_Ods_2021.edfi.StudentTitleIPartAProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentTitleIPartAProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
    )

        MERGE edfi.StudentTitleIPartAProgramAssociation_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentTitleIPartAProgramAssociation AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- References
            target.TitleIPartAParticipantDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TitleIPartAParticipantDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- References
                , TitleIPartAParticipantDescriptorHashKey
                -- Boilerplate columns
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TitleIPartAParticipantDescriptorId)
                )
                -- Boilerplate columns
            );
    
    INSERT INTO edfi.StudentTitleIPartAProgramAssociationService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , ServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, ServiceDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, ServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentTitleIPartAProgramAssociationService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentTitleIPartAProgramAssociationService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.ServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.ServiceDescriptorId)
            )
    )


        MERGE edfi.StudentTitleIPartAProgramAssociationService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentTitleIPartAProgramAssociationService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.ServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.ServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , ServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.ServiceDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService (
        HashKey
        -- Identifying references (for aggregate child entity)
        , TitleIPartAProgramServiceDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            CONVERT(nvarchar, BeginDate, 23)
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + CONVERT(nvarchar, ProgramEducationOrganizationId)
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + CONVERT(nvarchar, StudentUSI)
                    + '|' + CONVERT(nvarchar, TitleIPartAProgramServiceDescriptorId)
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TitleIPartAProgramServiceDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.BeginDate, 23)
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + CONVERT(nvarchar, source.StudentUSI)
            + '|' + CONVERT(nvarchar, source.TitleIPartAProgramServiceDescriptorId)
            )
            AND target.TitleIPartAProgramServiceDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.TitleIPartAProgramServiceDescriptorId)
            )
    )


        MERGE edfi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService_Attributes AS target
        USING EdFi_Ods_2021.edfi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService AS source
        ON (target.HashKey = HASHBYTES('sha1',
        CONVERT(nvarchar, source.BeginDate, 23)
        + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
        + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
        + '|' + source.ProgramName
        + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
        + '|' + CONVERT(nvarchar, source.StudentUSI)
        + '|' + CONVERT(nvarchar, source.TitleIPartAProgramServiceDescriptorId)
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            AND target.TitleIPartAProgramServiceDescriptorHashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TitleIPartAProgramServiceDescriptorId)
            )
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.PrimaryIndicator = source.PrimaryIndicator
            , target.ServiceBeginDate = source.ServiceBeginDate
            , target.ServiceEndDate = source.ServiceEndDate
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                , TitleIPartAProgramServiceDescriptorHashKey
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                CONVERT(nvarchar, source.BeginDate, 23)
                + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
                + '|' + CONVERT(nvarchar, source.ProgramEducationOrganizationId)
                + '|' + source.ProgramName
                + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
                + '|' + CONVERT(nvarchar, source.StudentUSI)
                + '|' + CONVERT(nvarchar, source.TitleIPartAProgramServiceDescriptorId)
                )
                , @schoolYearContext
                -- Identifying references
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.TitleIPartAProgramServiceDescriptorId)
                )
                -- Attributes
                , PrimaryIndicator
                , ServiceBeginDate
                , ServiceEndDate
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.Survey (
        HashKey
        -- Identifying references (for aggregate root entity)
        -- Primary key columns
        , Namespace
                , SurveyIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + SurveyIdentifier
        )
        -- Identifying references
        , Namespace
        , SurveyIdentifier
    FROM EdFi_Ods_2021.edfi.Survey source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.Survey target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.SurveyIdentifier
            )
    )

        MERGE edfi.Survey_Attributes AS target
        USING EdFi_Ods_2021.edfi.Survey AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.SurveyIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.NumberAdministered = source.NumberAdministered
            , target.SurveyTitle = source.SurveyTitle
                -- References
            , target.EducationOrganizationHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                )
            , target.SchoolYearTypeHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
            , target.SessionHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SessionName
                )
            , target.SurveyCategoryDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SurveyCategoryDescriptorId)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , NumberAdministered
                , SurveyTitle
                -- References
                , EducationOrganizationHashKey
                , SchoolYearTypeHashKey
                , SessionHashKey
                , SurveyCategoryDescriptorHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.SurveyIdentifier
                )
                , @schoolYearContext
                -- Attributes
                , NumberAdministered
                , SurveyTitle
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.EducationOrganizationId)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolYear)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SchoolId)
                + '|' + CONVERT(nvarchar, source.SchoolYear)
                + '|' + source.SessionName
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.SurveyCategoryDescriptorId)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.SurveyCategoryDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SurveyCategoryDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SurveyCategoryDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SurveyCategoryDescriptorId)
        )
        , SurveyCategoryDescriptorId
    FROM EdFi_Ods_2021.edfi.SurveyCategoryDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyCategoryDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SurveyCategoryDescriptorId)
            )
    )

    
    INSERT INTO edfi.SurveyCourseAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , CourseHashKey
        , SurveyHashKey
        -- Primary key columns
        , CourseCode
                , EducationOrganizationId
                , Namespace
                , SurveyIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            CourseCode
                    + '|' + CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + Namespace
                    + '|' + SurveyIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CourseCode
            + '|' + CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
        )
        , CourseCode
        , EducationOrganizationId
        , Namespace
        , SurveyIdentifier
    FROM EdFi_Ods_2021.edfi.SurveyCourseAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyCourseAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.CourseCode
            + '|' + CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.Namespace
            + '|' + source.SurveyIdentifier
            )
    )

    
    INSERT INTO edfi.SurveyLevelDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , SurveyLevelDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, SurveyLevelDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SurveyLevelDescriptorId)
        )
        , SurveyLevelDescriptorId
    FROM EdFi_Ods_2021.edfi.SurveyLevelDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyLevelDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.SurveyLevelDescriptorId)
            )
    )

    
    INSERT INTO edfi.SurveyProgramAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , ProgramHashKey
        , SurveyHashKey
        -- Primary key columns
        , EducationOrganizationId
                , Namespace
                , ProgramName
                , ProgramTypeDescriptorId
                , SurveyIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + Namespace
                    + '|' + ProgramName
                    + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
                    + '|' + SurveyIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
            + '|' + ProgramName
            + '|' + CONVERT(nvarchar, ProgramTypeDescriptorId)
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
        )
        , EducationOrganizationId
        , Namespace
        , ProgramName
        , ProgramTypeDescriptorId
        , SurveyIdentifier
    FROM EdFi_Ods_2021.edfi.SurveyProgramAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyProgramAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.Namespace
            + '|' + source.ProgramName
            + '|' + CONVERT(nvarchar, source.ProgramTypeDescriptorId)
            + '|' + source.SurveyIdentifier
            )
    )

    
    INSERT INTO edfi.SurveyQuestion (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SurveyHashKey
        -- Primary key columns
        , Namespace
                , QuestionCode
                , SurveyIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + QuestionCode
                    + '|' + SurveyIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
        )
        , Namespace
        , QuestionCode
        , SurveyIdentifier
    FROM EdFi_Ods_2021.edfi.SurveyQuestion source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyQuestion target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.QuestionCode
            + '|' + source.SurveyIdentifier
            )
    )

        MERGE edfi.SurveyQuestion_Attributes AS target
        USING EdFi_Ods_2021.edfi.SurveyQuestion AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.QuestionCode
        + '|' + source.SurveyIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.QuestionText = source.QuestionText
                -- References
            , target.QuestionFormDescriptorHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.QuestionFormDescriptorId)
                )
            , target.SurveySectionHashKey = HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.SurveyIdentifier
                + '|' + source.SurveySectionTitle
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , QuestionText
                -- References
                , QuestionFormDescriptorHashKey
                , SurveySectionHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.QuestionCode
                + '|' + source.SurveyIdentifier
                )
                , @schoolYearContext
                -- Attributes
                , QuestionText
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.QuestionFormDescriptorId)
                )
                , HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.SurveyIdentifier
                + '|' + source.SurveySectionTitle
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.SurveyQuestionMatrix (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , MatrixElement
    )
    SELECT
        HASHBYTES('sha1', 
            Namespace
                    + '|' + QuestionCode
                    + '|' + SurveyIdentifier
        )
            , MatrixElement
    FROM EdFi_Ods_2021.edfi.SurveyQuestionMatrix source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyQuestionMatrix target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.QuestionCode
            + '|' + source.SurveyIdentifier
            )
            AND target.MatrixElement = source.MatrixElement
    )


        MERGE edfi.SurveyQuestionMatrix_Attributes AS target
        USING EdFi_Ods_2021.edfi.SurveyQuestionMatrix AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.QuestionCode
        + '|' + source.SurveyIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.MatrixElement = source.MatrixElement
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.MaxRawScore = source.MaxRawScore
            , target.MinRawScore = source.MinRawScore
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , MatrixElement
                -- Attributes
                , MaxRawScore
                , MinRawScore
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.QuestionCode
                + '|' + source.SurveyIdentifier
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , MatrixElement
                -- Attributes
                , MaxRawScore
                , MinRawScore
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.SurveyQuestionResponseChoice (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , SortOrder
    )
    SELECT
        HASHBYTES('sha1', 
            Namespace
                    + '|' + QuestionCode
                    + '|' + SurveyIdentifier
        )
            , SortOrder
    FROM EdFi_Ods_2021.edfi.SurveyQuestionResponseChoice source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyQuestionResponseChoice target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.QuestionCode
            + '|' + source.SurveyIdentifier
            )
            AND target.SortOrder = source.SortOrder
    )


        MERGE edfi.SurveyQuestionResponseChoice_Attributes AS target
        USING EdFi_Ods_2021.edfi.SurveyQuestionResponseChoice AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.QuestionCode
        + '|' + source.SurveyIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.SortOrder = source.SortOrder
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.NumericValue = source.NumericValue
            , target.TextValue = source.TextValue
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , SortOrder
                -- Attributes
                , NumericValue
                , TextValue
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.QuestionCode
                + '|' + source.SurveyIdentifier
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , SortOrder
                -- Attributes
                , NumericValue
                , TextValue
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.SurveyQuestionResponse (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SurveyQuestionHashKey
        , SurveyResponseHashKey
        -- Primary key columns
        , Namespace
                , QuestionCode
                , SurveyIdentifier
                , SurveyResponseIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + QuestionCode
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            Namespace
            + '|' + QuestionCode
            + '|' + SurveyIdentifier
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
            + '|' + SurveyResponseIdentifier
        )
        , Namespace
        , QuestionCode
        , SurveyIdentifier
        , SurveyResponseIdentifier
    FROM EdFi_Ods_2021.edfi.SurveyQuestionResponse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyQuestionResponse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.QuestionCode
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            )
    )

        MERGE edfi.SurveyQuestionResponse_Attributes AS target
        USING EdFi_Ods_2021.edfi.SurveyQuestionResponse AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.QuestionCode
        + '|' + source.SurveyIdentifier
        + '|' + source.SurveyResponseIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.Comment = source.Comment
            , target.NoResponse = source.NoResponse
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , Comment
                , NoResponse
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.QuestionCode
                + '|' + source.SurveyIdentifier
                + '|' + source.SurveyResponseIdentifier
                )
                , @schoolYearContext
                -- Attributes
                , Comment
                , NoResponse
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , MatrixElement
    )
    SELECT
        HASHBYTES('sha1', 
            Namespace
                    + '|' + QuestionCode
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
        )
            , MatrixElement
    FROM EdFi_Ods_2021.edfi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.QuestionCode
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            )
            AND target.MatrixElement = source.MatrixElement
    )


        MERGE edfi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse_Attributes AS target
        USING EdFi_Ods_2021.edfi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.QuestionCode
        + '|' + source.SurveyIdentifier
        + '|' + source.SurveyResponseIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.MatrixElement = source.MatrixElement
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.MaxNumericResponse = source.MaxNumericResponse
            , target.MinNumericResponse = source.MinNumericResponse
            , target.NoResponse = source.NoResponse
            , target.NumericResponse = source.NumericResponse
            , target.TextResponse = source.TextResponse
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , MatrixElement
                -- Attributes
                , MaxNumericResponse
                , MinNumericResponse
                , NoResponse
                , NumericResponse
                , TextResponse
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.QuestionCode
                + '|' + source.SurveyIdentifier
                + '|' + source.SurveyResponseIdentifier
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , MatrixElement
                -- Attributes
                , MaxNumericResponse
                , MinNumericResponse
                , NoResponse
                , NumericResponse
                , TextResponse
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.SurveyQuestionResponseValue (
        HashKey
        -- Identifying references (for aggregate child entity)
        -- Contextual primary key
        , SurveyQuestionResponseValueIdentifier
    )
    SELECT
        HASHBYTES('sha1', 
            Namespace
                    + '|' + QuestionCode
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
        )
            , SurveyQuestionResponseValueIdentifier
    FROM EdFi_Ods_2021.edfi.SurveyQuestionResponseValue source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyQuestionResponseValue target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.QuestionCode
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            )
            AND target.SurveyQuestionResponseValueIdentifier = source.SurveyQuestionResponseValueIdentifier
    )


        MERGE edfi.SurveyQuestionResponseValue_Attributes AS target
        USING EdFi_Ods_2021.edfi.SurveyQuestionResponseValue AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.QuestionCode
        + '|' + source.SurveyIdentifier
        + '|' + source.SurveyResponseIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
            -- Identifying references
            -- Contextual primary key
            AND target.SurveyQuestionResponseValueIdentifier = source.SurveyQuestionResponseValueIdentifier
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
                -- Attributes
            , target.NumericResponse = source.NumericResponse
            , target.TextResponse = source.TextResponse
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Identifying references
                -- Contextual primary key
                , SurveyQuestionResponseValueIdentifier
                -- Attributes
                , NumericResponse
                , TextResponse
                -- Boilerplate columns
                , CreateDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.QuestionCode
                + '|' + source.SurveyIdentifier
                + '|' + source.SurveyResponseIdentifier
                )
                , @schoolYearContext
                -- Identifying references
                -- Contextual primary key
                , SurveyQuestionResponseValueIdentifier
                -- Attributes
                , NumericResponse
                , TextResponse
                -- Boilerplate columns
                , CreateDate
            );
    INSERT INTO edfi.SurveyResponse (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SurveyHashKey
        -- Primary key columns
        , Namespace
                , SurveyIdentifier
                , SurveyResponseIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
        )
        , Namespace
        , SurveyIdentifier
        , SurveyResponseIdentifier
    FROM EdFi_Ods_2021.edfi.SurveyResponse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyResponse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            )
    )

        MERGE edfi.SurveyResponse_Attributes AS target
        USING EdFi_Ods_2021.edfi.SurveyResponse AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.SurveyIdentifier
        + '|' + source.SurveyResponseIdentifier
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.ElectronicMailAddress = source.ElectronicMailAddress
            , target.FullName = source.FullName
            , target.Location = source.Location
            , target.ResponseDate = source.ResponseDate
            , target.ResponseTime = source.ResponseTime
                -- References
            , target.ParentHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParentUSI)
                )
            , target.StaffHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
            , target.StudentHashKey = HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StudentUSI)
                )
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , ElectronicMailAddress
                , FullName
                , Location
                , ResponseDate
                , ResponseTime
                -- References
                , ParentHashKey
                , StaffHashKey
                , StudentHashKey
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.SurveyIdentifier
                + '|' + source.SurveyResponseIdentifier
                )
                , @schoolYearContext
                -- Attributes
                , ElectronicMailAddress
                , FullName
                , Location
                , ResponseDate
                , ResponseTime
                -- References
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.ParentUSI)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StaffUSI)
                )
                , HASHBYTES('sha1', 
                CONVERT(nvarchar, source.StudentUSI)
                )
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.SurveyResponseSurveyLevel (
        HashKey
        -- Identifying references (for aggregate child entity)
        , SurveyLevelDescriptorHashKey
    )
    SELECT
        HASHBYTES('sha1', 
            Namespace
                    + '|' + SurveyIdentifier
                    + '|' + CONVERT(nvarchar, SurveyLevelDescriptorId)
                    + '|' + SurveyResponseIdentifier
        )
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, SurveyLevelDescriptorId)
        )
    FROM EdFi_Ods_2021.edfi.SurveyResponseSurveyLevel source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyResponseSurveyLevel target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.SurveyIdentifier
            + '|' + CONVERT(nvarchar, source.SurveyLevelDescriptorId)
            + '|' + source.SurveyResponseIdentifier
            )
            AND target.SurveyLevelDescriptorHashKey = HASHBYTES('sha1',
                CONVERT(nvarchar, source.SurveyLevelDescriptorId)
            )
    )

    INSERT INTO edfi.SurveyResponseEducationOrganizationTargetAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , SurveyResponseHashKey
        -- Primary key columns
        , EducationOrganizationId
                , Namespace
                , SurveyIdentifier
                , SurveyResponseIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + Namespace
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
            + '|' + SurveyResponseIdentifier
        )
        , EducationOrganizationId
        , Namespace
        , SurveyIdentifier
        , SurveyResponseIdentifier
    FROM EdFi_Ods_2021.edfi.SurveyResponseEducationOrganizationTargetAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyResponseEducationOrganizationTargetAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.Namespace
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            )
    )

    
    INSERT INTO edfi.SurveyResponseStaffTargetAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , StaffHashKey
        , SurveyResponseHashKey
        -- Primary key columns
        , Namespace
                , StaffUSI
                , SurveyIdentifier
                , SurveyResponseIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
            + '|' + SurveyResponseIdentifier
        )
        , Namespace
        , StaffUSI
        , SurveyIdentifier
        , SurveyResponseIdentifier
    FROM EdFi_Ods_2021.edfi.SurveyResponseStaffTargetAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveyResponseStaffTargetAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            )
    )

    
    INSERT INTO edfi.SurveySection (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SurveyHashKey
        -- Primary key columns
        , Namespace
                , SurveyIdentifier
                , SurveySectionTitle
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + SurveyIdentifier
                    + '|' + SurveySectionTitle
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
        )
        , Namespace
        , SurveyIdentifier
        , SurveySectionTitle
    FROM EdFi_Ods_2021.edfi.SurveySection source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveySection target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveySectionTitle
            )
    )

    
    INSERT INTO edfi.SurveySectionAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SectionHashKey
        , SurveyHashKey
        -- Primary key columns
        , LocalCourseCode
                , Namespace
                , SchoolId
                , SchoolYear
                , SectionIdentifier
                , SessionName
                , SurveyIdentifier
        )
    SELECT 
        HASHBYTES('sha1', 
            LocalCourseCode
                    + '|' + Namespace
                    + '|' + CONVERT(nvarchar, SchoolId)
                    + '|' + CONVERT(nvarchar, SchoolYear)
                    + '|' + SectionIdentifier
                    + '|' + SessionName
                    + '|' + SurveyIdentifier
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            LocalCourseCode
            + '|' + CONVERT(nvarchar, SchoolId)
            + '|' + CONVERT(nvarchar, SchoolYear)
            + '|' + SectionIdentifier
            + '|' + SessionName
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
        )
        , LocalCourseCode
        , Namespace
        , SchoolId
        , SchoolYear
        , SectionIdentifier
        , SessionName
        , SurveyIdentifier
    FROM EdFi_Ods_2021.edfi.SurveySectionAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveySectionAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.LocalCourseCode
            + '|' + source.Namespace
            + '|' + CONVERT(nvarchar, source.SchoolId)
            + '|' + CONVERT(nvarchar, source.SchoolYear)
            + '|' + source.SectionIdentifier
            + '|' + source.SessionName
            + '|' + source.SurveyIdentifier
            )
    )

    
    INSERT INTO edfi.SurveySectionResponse (
        HashKey
        -- Identifying references (for aggregate root entity)
        , SurveyResponseHashKey
        , SurveySectionHashKey
        -- Primary key columns
        , Namespace
                , SurveyIdentifier
                , SurveyResponseIdentifier
                , SurveySectionTitle
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
                    + '|' + SurveySectionTitle
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
            + '|' + SurveyResponseIdentifier
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
            + '|' + SurveySectionTitle
        )
        , Namespace
        , SurveyIdentifier
        , SurveyResponseIdentifier
        , SurveySectionTitle
    FROM EdFi_Ods_2021.edfi.SurveySectionResponse source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveySectionResponse target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            + '|' + source.SurveySectionTitle
            )
    )

        MERGE edfi.SurveySectionResponse_Attributes AS target
        USING EdFi_Ods_2021.edfi.SurveySectionResponse AS source
        ON (target.HashKey = HASHBYTES('sha1',
        source.Namespace
        + '|' + source.SurveyIdentifier
        + '|' + source.SurveyResponseIdentifier
        + '|' + source.SurveySectionTitle
            )
            AND target.SchoolYearContext = @schoolYearContext
        )
        WHEN MATCHED THEN
            UPDATE SET
                -- Boilerplate columns
            CreateDate = source.CreateDate
            , Id = source.Id
            , LastModifiedDate = source.LastModifiedDate
                -- Attributes
            , target.SectionRating = source.SectionRating
        WHEN NOT MATCHED THEN
            INSERT (
                HashKey
                , SchoolYearContext
                -- Attributes
                , SectionRating
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            )
            VALUES (
                HASHBYTES('sha1', 
                source.Namespace
                + '|' + source.SurveyIdentifier
                + '|' + source.SurveyResponseIdentifier
                + '|' + source.SurveySectionTitle
                )
                , @schoolYearContext
                -- Attributes
                , SectionRating
                -- Boilerplate columns
                , CreateDate
                , Id
                , LastModifiedDate
            );
    
    INSERT INTO edfi.SurveySectionResponseEducationOrganizationTargetAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , EducationOrganizationHashKey
        , SurveySectionResponseHashKey
        -- Primary key columns
        , EducationOrganizationId
                , Namespace
                , SurveyIdentifier
                , SurveyResponseIdentifier
                , SurveySectionTitle
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
                    + '|' + Namespace
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
                    + '|' + SurveySectionTitle
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, EducationOrganizationId)
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
            + '|' + SurveyResponseIdentifier
            + '|' + SurveySectionTitle
        )
        , EducationOrganizationId
        , Namespace
        , SurveyIdentifier
        , SurveyResponseIdentifier
        , SurveySectionTitle
    FROM EdFi_Ods_2021.edfi.SurveySectionResponseEducationOrganizationTargetAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveySectionResponseEducationOrganizationTargetAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.EducationOrganizationId)
            + '|' + source.Namespace
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            + '|' + source.SurveySectionTitle
            )
    )

    
    INSERT INTO edfi.SurveySectionResponseStaffTargetAssociation (
        HashKey
        -- Identifying references (for aggregate root entity)
        , StaffHashKey
        , SurveySectionResponseHashKey
        -- Primary key columns
        , Namespace
                , StaffUSI
                , SurveyIdentifier
                , SurveyResponseIdentifier
                , SurveySectionTitle
        )
    SELECT 
        HASHBYTES('sha1', 
            Namespace
                    + '|' + CONVERT(nvarchar, StaffUSI)
                    + '|' + SurveyIdentifier
                    + '|' + SurveyResponseIdentifier
                    + '|' + SurveySectionTitle
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, StaffUSI)
        )
        , HASHBYTES('sha1', 
            Namespace
            + '|' + SurveyIdentifier
            + '|' + SurveyResponseIdentifier
            + '|' + SurveySectionTitle
        )
        , Namespace
        , StaffUSI
        , SurveyIdentifier
        , SurveyResponseIdentifier
        , SurveySectionTitle
    FROM EdFi_Ods_2021.edfi.SurveySectionResponseStaffTargetAssociation source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.SurveySectionResponseStaffTargetAssociation target 
        WHERE target.HashKey = HASHBYTES('sha1',
            source.Namespace
            + '|' + CONVERT(nvarchar, source.StaffUSI)
            + '|' + source.SurveyIdentifier
            + '|' + source.SurveyResponseIdentifier
            + '|' + source.SurveySectionTitle
            )
    )

    
    INSERT INTO edfi.TeachingCredentialBasisDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TeachingCredentialBasisDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TeachingCredentialBasisDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TeachingCredentialBasisDescriptorId)
        )
        , TeachingCredentialBasisDescriptorId
    FROM EdFi_Ods_2021.edfi.TeachingCredentialBasisDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TeachingCredentialBasisDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TeachingCredentialBasisDescriptorId)
            )
    )

    
    INSERT INTO edfi.TeachingCredentialDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TeachingCredentialDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TeachingCredentialDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TeachingCredentialDescriptorId)
        )
        , TeachingCredentialDescriptorId
    FROM EdFi_Ods_2021.edfi.TeachingCredentialDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TeachingCredentialDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TeachingCredentialDescriptorId)
            )
    )

    
    INSERT INTO edfi.TechnicalSkillsAssessmentDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TechnicalSkillsAssessmentDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TechnicalSkillsAssessmentDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TechnicalSkillsAssessmentDescriptorId)
        )
        , TechnicalSkillsAssessmentDescriptorId
    FROM EdFi_Ods_2021.edfi.TechnicalSkillsAssessmentDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TechnicalSkillsAssessmentDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TechnicalSkillsAssessmentDescriptorId)
            )
    )

    
    INSERT INTO edfi.TelephoneNumberTypeDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TelephoneNumberTypeDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TelephoneNumberTypeDescriptorId)
        )
        , TelephoneNumberTypeDescriptorId
    FROM EdFi_Ods_2021.edfi.TelephoneNumberTypeDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TelephoneNumberTypeDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TelephoneNumberTypeDescriptorId)
            )
    )

    
    INSERT INTO edfi.TermDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TermDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TermDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TermDescriptorId)
        )
        , TermDescriptorId
    FROM EdFi_Ods_2021.edfi.TermDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TermDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TermDescriptorId)
            )
    )

    
    INSERT INTO edfi.TitleIPartAParticipantDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TitleIPartAParticipantDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TitleIPartAParticipantDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TitleIPartAParticipantDescriptorId)
        )
        , TitleIPartAParticipantDescriptorId
    FROM EdFi_Ods_2021.edfi.TitleIPartAParticipantDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TitleIPartAParticipantDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TitleIPartAParticipantDescriptorId)
            )
    )

    
    INSERT INTO edfi.TitleIPartAProgramServiceDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TitleIPartAProgramServiceDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TitleIPartAProgramServiceDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TitleIPartAProgramServiceDescriptorId)
        )
        , TitleIPartAProgramServiceDescriptorId
    FROM EdFi_Ods_2021.edfi.TitleIPartAProgramServiceDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TitleIPartAProgramServiceDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TitleIPartAProgramServiceDescriptorId)
            )
    )

    
    INSERT INTO edfi.TitleIPartASchoolDesignationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TitleIPartASchoolDesignationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TitleIPartASchoolDesignationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TitleIPartASchoolDesignationDescriptorId)
        )
        , TitleIPartASchoolDesignationDescriptorId
    FROM EdFi_Ods_2021.edfi.TitleIPartASchoolDesignationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TitleIPartASchoolDesignationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TitleIPartASchoolDesignationDescriptorId)
            )
    )

    
    INSERT INTO edfi.TribalAffiliationDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , TribalAffiliationDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, TribalAffiliationDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, TribalAffiliationDescriptorId)
        )
        , TribalAffiliationDescriptorId
    FROM EdFi_Ods_2021.edfi.TribalAffiliationDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.TribalAffiliationDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.TribalAffiliationDescriptorId)
            )
    )

    
    INSERT INTO edfi.VisaDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , VisaDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, VisaDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, VisaDescriptorId)
        )
        , VisaDescriptorId
    FROM EdFi_Ods_2021.edfi.VisaDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.VisaDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.VisaDescriptorId)
            )
    )

    
    INSERT INTO edfi.WeaponDescriptor (
        HashKey
        -- Identifying references (for aggregate root entity)
        , DescriptorHashKey
        -- Primary key columns
        , WeaponDescriptorId
        )
    SELECT 
        HASHBYTES('sha1', 
            CONVERT(nvarchar, WeaponDescriptorId)
        )
        -- Identifying references
        , HASHBYTES('sha1', 
            CONVERT(nvarchar, WeaponDescriptorId)
        )
        , WeaponDescriptorId
    FROM EdFi_Ods_2021.edfi.WeaponDescriptor source
    WHERE NOT EXISTS (
        SELECT 1 FROM edfi.WeaponDescriptor target 
        WHERE target.HashKey = HASHBYTES('sha1',
            CONVERT(nvarchar, source.WeaponDescriptorId)
            )
    )

    

    -- enable all constraints
    EXEC sp_MSforeachtable @command1="print '?'", @command2="ALTER TABLE ? WITH CHECK CHECK CONSTRAINT all"
END